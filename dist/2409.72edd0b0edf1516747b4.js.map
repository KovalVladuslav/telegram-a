{"version":3,"file":"2409.72edd0b0edf1516747b4.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/hooks/useAverageColor.ts","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useInterval.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/emoji/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressieveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    voice,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal) && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"size-micro\":\"bnYA0Wm9\",\"sizeMicro\":\"bnYA0Wm9\",\"size-mini\":\"ZGpPX4Wb\",\"sizeMini\":\"ZGpPX4Wb\",\"size-tiny\":\"ufyZRVf5\",\"sizeTiny\":\"ufyZRVf5\",\"size-small\":\"UA2exR6e\",\"sizeSmall\":\"UA2exR6e\",\"size-small-mobile\":\"PTbjjZjF\",\"sizeSmallMobile\":\"PTbjjZjF\",\"size-medium\":\"jncPG8PA\",\"sizeMedium\":\"jncPG8PA\",\"size-large\":\"pd70AQAO\",\"sizeLarge\":\"pd70AQAO\",\"size-huge\":\"ceLzD19m\",\"sizeHuge\":\"ceLzD19m\",\"size-jumbo\":\"KpwfP5mr\",\"sizeJumbo\":\"KpwfP5mr\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { ApiDraft, MessageListType } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({ isSchedule: type === 'scheduled', message: editedMessage });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  hasReplaceableMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  hasReplaceableMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useOldLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && hasReplaceableMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !hasReplaceableMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType } from '../../../global/types';\nimport type { ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList, MessageListType, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition, InlineBotSettings, ISettings, ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  hasReplaceableMedia,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isSameReaction,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNoWebPage,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && hasReplaceableMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    if (chatId && chat && !sendAsPeerIds && isReady && (isChatSuperGroup(chat) || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    const effectId = effect?.id;\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n      if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        isInvertedMedia,\n        effectId,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n    clearDraft({\n      chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n    });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ sendCompressed, sendGrouped, isInvertedMedia }, scheduledAt, currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      sendSilent({ sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : isInStoryViewer ? lang('StoryRepliesLocked') : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              hasReplaceableMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n\n    const isContactRequirePremium = selectUserFullInfo(global, chatId)?.isContactRequirePremium;\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  className?: string;\n};\n\nconst LimitPreview: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LimitPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"DnvLcTfv\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  profilePhotos,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    if (isAnonymousForwards) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useOldLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ChatTranslatedMessages } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getSenderTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getSenderTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content);\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { useThrottleForHeavyAnimation } from '../../../hooks/useHeavyAnimation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useOldLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerMediaHash(customEmoji, 'preview') : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  const preloadAfterHeavyAnimation = useThrottleForHeavyAnimation(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  useEffect(() => {\n    preloadAfterHeavyAnimation();\n  }, [preloadAfterHeavyAnimation]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  const updateCanvasAfterHeavyAnimation = useThrottleForHeavyAnimation(updateCanvas, [updateCanvas]);\n\n  useEffect(() => {\n    updateCanvasAfterHeavyAnimation();\n  }, [emojiImage, lang.isRtl, customColor, updateCanvasAfterHeavyAnimation]);\n\n  const updateCanvasSize = useThrottleForHeavyAnimation((parentWidth: number, parentHeight: number) => {\n    requestMutation(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      canvas.width = parentWidth * dpr;\n      canvas.height = parentHeight * dpr;\n\n      canvas.style.width = `${parentWidth}px`;\n      canvas.style.height = `${parentHeight}px`;\n\n      updateCanvas();\n    });\n  }, [dpr]);\n\n  const handleResize = useThrottleForHeavyAnimation((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openPremiumGiftModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenPremiumGiftModal = useLastCallback(() => {\n    openPremiumGiftModal({ forUserIds: [user.id] });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenPremiumGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenPremiumGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"sectionInfo\":\"IrqRJFxm\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUserFullInfo, ApiUsername,\n} from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { debounce } from '../../../util/schedulers';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    if (!chat) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      { hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n    };\n  },\n)(ChatExtra));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              topics={topics}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { senderId, isOutgoing, forwardInfo } = lastMessage || {};\n    const actualSenderId = isSavedDialog ? forwardInfo?.fromId : senderId;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = actualSenderId ? selectPeer(global, actualSenderId) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = topics\n      && Object.values(topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (topics && !hasUnmutedUnreadTopics);\n  }, [topics, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../global/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"group-call\":\"wUpRjGJ2\",\"groupCall\":\"wUpRjGJ2\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaHasPreview = lastMessage && !getMessageSticker(lastMessage);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(lastMessage) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(lang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getPhotoMediaHash, getVideoProfilePhotoMediaHash } from '../../global/helpers';\nimport { fetchBlob } from '../../util/files';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useOldLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const photo = message.content.action!.photo!;\n  const suggestedPhotoUrl = useMedia(getPhotoMediaHash(photo, 'full'));\n  const suggestedVideoUrl = useMedia(getVideoProfilePhotoMediaHash(photo));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    if (!suggestedVideoUrl) return;\n\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const blob = await fetchBlob(suggestedVideoUrl);\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetchBlob(suggestedPhotoUrl));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        messageId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"V3RHiOJR\",\"notch\":\"tfG_BSDt\",\"notch-path\":\"HVbeGv4t\",\"notchPath\":\"HVbeGv4t\",\"join-text\":\"UHAMd4fI\",\"joinText\":\"UHAMd4fI\",\"header\":\"s7QOi22Q\",\"title\":\"JstcOhAN\",\"close\":\"meewH7t_\",\"icon\":\"d8axZxyN\",\"skeleton\":\"xKVZv7KE\",\"inner\":\"njAC8dR9\",\"is-appearing\":\"eb8rX09E\",\"isAppearing\":\"eb8rX09E\",\"channels-appear\":\"AL2cLQ4i\",\"channelsAppear\":\"AL2cLQ4i\",\"is-hiding\":\"XR6_qLCc\",\"isHiding\":\"XR6_qLCc\",\"channels-disappear\":\"TwwnoiuD\",\"channelsDisappear\":\"TwwnoiuD\",\"channel-list\":\"h4gWlNen\",\"channelList\":\"h4gWlNen\",\"item\":\"glDpC2av\",\"last-item\":\"MBChXyXk\",\"lastItem\":\"MBChXyXk\",\"avatar\":\"gqCs9fSo\",\"badge\":\"gnYhwnvf\",\"members-count\":\"HWgwnKui\",\"membersCount\":\"HWgwnKui\",\"channel-title\":\"BTNQ4KBH\",\"channelTitle\":\"BTNQ4KBH\",\"fake-avatar\":\"Xl9MVMTn\",\"fakeAvatar\":\"Xl9MVMTn\",\"fake-avatar-inner\":\"Qizai7yv\",\"fakeAvatarInner\":\"Qizai7yv\",\"last-fake-avatar\":\"JxSmtOFi\",\"lastFakeAvatar\":\"JxSmtOFi\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useAverageColor from '../../../hooks/useAverageColor';\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  shouldShowInChat?: boolean;\n  count: number;\n  isCurrentUserPremium: boolean;\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  shouldShowInChat,\n  count,\n  isCurrentUserPremium,\n}: StateProps & OwnProps) => {\n  const lang = useOldLang();\n  const { toggleChannelRecommendations, loadChannelRecommendations } = getActions();\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shoulRenderSkeleton, setShoulRenderSkeleton] = useState(!similarChannelIds);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n\n  useHorizontalScroll(ref, !areSimilarChannelsPresent || !shouldShowInChat || shoulRenderSkeleton, true);\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shoulRenderSkeleton\n      && (shouldShowInChat || isAnimating)\n      && areSimilarChannelsPresent,\n  );\n\n  useEffect(() => {\n    if (!similarChannelIds) {\n      loadChannelRecommendations({ chatId });\n    }\n  }, [chatId, similarChannelIds]);\n\n  useTimeout(() => setShoulRenderSkeleton(false), MAX_SKELETON_DELAY);\n\n  useEffect(() => {\n    if (shoulRenderSkeleton && similarChannels && shouldShowInChat) {\n      const id = setTimeout(() => {\n        setShoulRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, shouldShowInChat, shoulRenderSkeleton]);\n\n  const handleToggle = useLastCallback(() => {\n    toggleChannelRecommendations({ chatId });\n    if (shouldShowInChat) {\n      markNotShowing();\n      markHiding();\n    } else {\n      markShowing();\n      markNotHiding();\n    }\n  });\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      <div className=\"join-text\">\n        <span\n          className={buildClassName(areSimilarChannelsPresent && styles.joinText)}\n          onClick={areSimilarChannelsPresent ? handleToggle : undefined}\n        >\n          {lang('ChannelJoined')}\n        </span>\n      </div>\n      {shoulRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel, DEFAULT_BADGE_COLOR);\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <i className={buildClassName(styles.icon, 'icon icon-user-filled')} />\n        <span className={styles.membersCount}>{formatIntegerCompact(channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useOldLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, shouldShowInChat, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      similarChannelIds,\n      shouldShowInChat,\n      count,\n      isCurrentUserPremium,\n    };\n  })(SimilarChannels),\n);\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { ApiChat } from '../api/types';\nimport { ApiMediaFormat } from '../api/types';\n\nimport { getChatAvatarHash } from '../global/helpers';\nimport { getAverageColor, rgb2hex } from '../util/colors';\nimport useMedia from './useMedia';\n\nfunction useAverageColor(chat: ApiChat, fallbackColor = '#00000000') {\n  const [color, setColor] = useState(fallbackColor);\n  const imgBlobUrl = useMedia(getChatAvatarHash(chat), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default useAverageColor;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useUnmountCleanup,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection, ThreadId } from '../../types';\nimport type { OnIntersectPinnedMessage } from './hooks/usePinnedMessage';\n\nimport { getChatTitle, getMessageHtmlId, isJoinedChannelMessage } from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectGiftStickerForStars,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatInteger } from '../../util/textFormat';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport SimilarChannels from './message/SimilarChannels';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  starGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  starGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onIntersectPinnedMessage,\n}) => {\n  const {\n    openPremiumModal,\n    requestConfetti,\n    checkGiftCode,\n    getReceipt,\n    openStarsTransactionFromGift,\n    openPrizeStarsTransactionFromGiveaway,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [message.id] });\n    }\n  });\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n  const isJoinedMessage = isJoinedChannelMessage(message);\n  const isStarsGift = message.content.action?.type === 'giftStars';\n  const isPrizeStars = message.content.action?.type === 'prizeStars';\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isPremiumGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({ withStars: true });\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransitionDeprecated(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      oldLang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, message, observeIntersectionForLoading, observeIntersectionForPlaying, oldLang,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleStarGiftClick = () => {\n    openStarsTransactionFromGift({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handlePrizeStarsClick = () => {\n    openPrizeStarsTransactionFromGiveaway({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  const handleClick = () => {\n    if (message.content.action?.type === 'receipt') {\n      getReceipt({\n        chatId: message.chatId,\n        messageId: message.id,\n      });\n    }\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span\n        className=\"action-message-gift\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handlePremiumGiftClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{oldLang('ActionGiftPremiumTitle')}</strong>\n        <span>\n          {oldLang('ActionGiftPremiumSubtitle', oldLang('Months', message.content.action?.months, 'i'))}\n        </span>\n\n        <span className=\"action-message-button\">{oldLang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>\n          {oldLang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}\n        </strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(\n            oldLang(\n              isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n                ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n              getChatTitle(oldLang, targetChat),\n            ),\n            ['simple_markdown'],\n          )}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(oldLang(\n            'BoostingUnclaimedPrizeDuration',\n            oldLang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        <span className=\"action-message-button\">{\n          oldLang('BoostingReceivedGiftOpenBtn')\n        }\n        </span>\n      </span>\n    );\n  }\n\n  function renderStarsGift() {\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleStarGiftClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={starGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <div className=\"action-message-stars-balance\">\n          {formatInteger(message.content.action!.stars!)}\n          <strong>{oldLang('Stars')}</strong>\n        </div>\n        <span className=\"action-message-stars-subtitle\">\n          {renderText(\n            oldLang(!message.isOutgoing\n              ? 'ActionGiftStarsSubtitleYou' : 'ActionGiftStarsSubtitle', getChatTitle(oldLang, targetChat!)),\n            ['simple_markdown'],\n          )}\n        </span>\n        <span className=\"action-message-button\">{\n          oldLang('ActionGiftPremiumView')\n        }\n        </span>\n      </span>\n    );\n  }\n\n  function renderPrizeStars() {\n    const isUnclaimed = message.content.action?.isUnclaimed;\n\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handlePrizeStarsClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={starGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>\n          {oldLang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}\n        </strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(oldLang(isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize', getChatTitle(oldLang, targetChat)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(\n            'PrizeCredits', {\n              count: (\n                <b>{formatInteger(message.content.action?.stars!)}</b>\n              ),\n            }, {\n              withNodes: true,\n            },\n          ), ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-button\">{\n          oldLang('ActionGiftPremiumView')\n        }\n        </span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isPremiumGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && !isJoinedMessage && (\n        <span className=\"action-message-content\" onClick={handleClick}>{renderContent()}</span>\n      )}\n      {isPremiumGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isStarsGift && renderStarsGift()}\n      {isPrizeStars && renderPrizeStars()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isJoinedMessage && <SimilarChannels chatId={targetChatId!} />}\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const senderUser = selectUser(global, senderId || chatId);\n    const senderChat = selectChat(global, chatId);\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n\n    const starCount = content.action?.stars;\n    const starGiftSticker = selectGiftStickerForStars(global, starCount);\n\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      starGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {lang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type LangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <i ref={downloadButtonRef} className=\"icon icon-download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect, useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const video = message.content.video!;\n\n  const { cancelMediaDownload, openOneTimeMediaModal } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback(() => {\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <i className=\"icon icon-download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i ref={playButtonRef} className=\"icon icon-large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n  isEditing?: boolean;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n  isEditing,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, !hasCustomColor);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{lang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'lng_view_button_boost';\n    case 'telegram_stickerset':\n      return 'lng_view_button_stickerset';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport cycleRestrict from '../util/cycleRestrict';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\n\nconst RADIUS = 7;\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n  radius = RADIUS,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    offscreenRef.current = canvas.transferControlToOffscreen();\n\n    requestMediaWorker({\n      name: 'offscreen-canvas:blurThumb',\n      args: [offscreenRef.current, thumbData, radius],\n      transferables: [offscreenRef.current],\n    }, workerIndex);\n  }, [thumbData, isDisabled, radius, workerIndex]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport { SCROLL_MAX_DISTANCE } from '../../../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = SCROLL_MAX_DISTANCE;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n  isQuote?: boolean,\n  scrollTargetPosition?: ScrollTargetPosition,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const result = animateScroll(\n          messagesContainer,\n          elementRef.current!,\n          scrollPosition,\n          FOCUS_MARGIN,\n          focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n          focusDirection,\n          undefined,\n          isResizingContainer,\n          true,\n        );\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <i className=\"icon icon-down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n  ApiChannelStatistics |\n  ApiGroupStatistics |\n  ApiPostStatistics |\n  ApiBoostStatistics |\n  ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}<span className={styles.decimalPart}>.{decimalTonPart}</span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ ${integerUsdPart}<span className={styles.decimalUsdPart}>.{decimalUsdPart}</span>\n        </span>\n        <h3 className={styles.tableHeading}>{lang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n  const { balances, usdRate } = (statistics as ApiChannelMonetizationStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressieveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element!.clientWidth!);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url': {\n            const isShiny = isActive && (mediaArea.type !== 'channelPost');\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","import type { ApiLimitType, GlobalState } from '../types';\n\nimport { DEFAULT_LIMITS } from '../../config';\nimport { selectIsCurrentUserPremium } from './users';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useInterval(callback: NoneToVoidFunction, delay?: number, noFirst = false) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (delay === undefined) {\n      return undefined;\n    }\n\n    const id = setInterval(() => savedCallback(), delay);\n    if (!noFirst) savedCallback();\n\n    return () => clearInterval(id);\n  }, [delay, noFirst]);\n}\n\nexport default useInterval;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useCallback, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  }, [onStart, threshold]);\n\n  const cancel = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd, onClick]);\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressieveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/windowEnvironment';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, setIsPlayed: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS)) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const video = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      video!.controls = isEnabled;\n    };\n    const listenerEnter = () => { setIsFullscreen(true); };\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      setIsPlayed(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (video) {\n      video.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      video.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (video) {\n        video.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        video.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(video: HTMLVideoElement) {\n  if (video.requestFullscreen) {\n    video.requestFullscreen();\n  } else if (video.webkitRequestFullscreen) {\n    video.webkitRequestFullscreen();\n  } else if (video.webkitEnterFullscreen) {\n    video.webkitEnterFullscreen();\n  } else if (video.mozRequestFullScreen) {\n    video.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { beginHeavyAnimation } from '../lib/teact/teact';\nimport { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  SCROLL_MAX_DISTANCE,\n  SCROLL_MAX_DURATION,\n  SCROLL_MIN_DURATION,\n  SCROLL_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\nlet onHeavyAnimationEnd: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollTargetPosition,\n  margin = 0,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= SCROLL_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      SCROLL_MIN_DURATION\n      + (absPath / SCROLL_MAX_DISTANCE) * (SCROLL_MAX_DURATION - SCROLL_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationEnd = onHeavyAnimationEnd;\n    onHeavyAnimationEnd = beginHeavyAnimation(undefined, true);\n    prevOnHeavyAnimationEnd?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationEnd?.();\n        onHeavyAnimationEnd = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nexport function cancelScrollBlockingAnimation() {\n  onHeavyAnimationEnd!();\n  onHeavyAnimationEnd = undefined;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\nconst LUMA_THRESHOLD = 128;\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n\n/* eslint-disable no-bitwise */\nexport const convertToRGBA = (color: number): string => {\n  const alpha = (color >> 24) & 0xff;\n  const red = (color >> 16) & 0xff;\n  const green = (color >> 8) & 0xff;\n  const blue = color & 0xff;\n\n  const alphaFloat = alpha / 255;\n  return `rgba(${red}, ${green}, ${blue}, ${alphaFloat})`;\n};\n\nexport const getTextColor = (color: number): string => {\n  const r = (color >> 16) & 0xff;\n  const g = (color >> 8) & 0xff;\n  const b = color & 0xff;\n  const luma = getColorLuma([r, g, b]);\n  return luma > LUMA_THRESHOLD ? 'black' : 'white';\n};\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import EMOJI_REGEX from '../../lib/twemojiRegex';\nimport fixNonStandardEmoji from './fixNonStandardEmoji';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 code points per one emoji.\n\nexport default function parseEmojiOnlyString(text: string): number | false {\n  const standardizedText = fixNonStandardEmoji(text);\n  const lines = standardizedText.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const totalCount = countIfEmojiOnly(textWithoutNewlines);\n  if (!totalCount || totalCount > DETECT_UP_TO) {\n    return false;\n  }\n\n  // Calculate max emoji count per column or line. Used in UI to determine the size of the emoji.\n  let max = lines.length;\n  for (const line of lines) {\n    const count = countIfEmojiOnly(line);\n    if (count === false) {\n      return false;\n    }\n    if (count > max) {\n      max = count;\n    }\n  }\n\n  return max;\n}\n\nfunction countIfEmojiOnly(line: string): false | number {\n  const iterator = line.matchAll(EMOJI_REGEX);\n  let count = 0;\n  let currentIndex = 0;\n\n  for (const match of iterator) {\n    if (match.index !== currentIndex) {\n      return false;\n    }\n\n    count++;\n    currentIndex = match.index + match[0].length;\n  }\n\n  if (currentIndex !== line.length) {\n    return false;\n  }\n\n  return count;\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransitionDeprecated","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","style","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","isVoice","isSeeking","useRef","isRtl","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","useMedia","ApiMediaFormat","BlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","useLastCallback","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","i","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","current","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","originMessage","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","ariaLabel","backgroundImage","nonInteractive","Icon","name","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","DEFAULT_LIMIT","limit","badgeText","renderingBadgeText","styles","root","peer","Avatar","avatar","badge","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","add","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","substring","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","text","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","Set","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","setTimeout","pause","props","AttachmentModal","useModuleLoader","Bundles","Extra","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","hasReplaceableMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","useFlag","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","isOpen","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","selectCanAnimateInterface","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","oldLang","useLang","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","_ref5","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","isUserId","chatBotFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","user","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","isContactRequirePremium","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePreviousDeprecated","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","useDraft","resetComposer","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","has","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","_ref4","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","shouldPreserveInput","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","emoticon","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","BotMenuButton","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","allowDisabledClick","noFastClick","MessageEffect","shouldPlay","onStop","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","onRemoveEffect","withEffects","hasCurrentEffect","isSavedDialog","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","thumbDataUri","getMediaThumbUri","localBlobUrl","previewBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","src","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","selectTopic","messagesCount","selectThreadMessagesCount","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","DotAnimation","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","Keys","DEFAULT_TEXT","description","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","leftText","rightText","floatingBadgeText","floatingBadgeIcon","floatingBadgeRef","parentContainerRef","shiftX","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","newTailPosition","useResizeObserver","hasFloatingBadge","isProgressFull","buildStyle","forceShowSelf","isSynced","userStatus","selectUserStatus","isSelf","customPeer","noFake","noVerified","adminMember","iconElement","rightElement","loadFullUser","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","currentTime","specialIcon","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","count","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isReadDateRestrictedByMe","membersCount","renderStatus","ProfilePhoto","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","options","selected","InputText","iconEmojiId","observeIntersectionForPlaying","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","NBSP","EmbeddedMessage","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","getPictogramDimensions","srcUrl","renderPictogram","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","noLineBreaks","emojiSize","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","getStickerMediaHash","previewUrl","customColor","useDynamicColorListener","preloadAfterHeavyAnimation","useThrottleForHeavyAnimation","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasAfterHeavyAnimation","updateCanvasSize","parentHeight","handleResize","entry","contentRect","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","ListItem","iconClassName","multiline","isStatic","narrow","withColorTransition","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","birthday","isInSettings","openPremiumGiftModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","buildCollectionByKey","split","digit","effectSticker","randomEffect","random","hash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenPremiumGiftModal","forUserIds","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","runDebounced","debounce","chatOrUserId","countryList","phoneCodes","phoneCodeList","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","userFullInfo","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","areNotificationsEnabled","setAreNotificationsEnabled","prevPeerId","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","newAreNotificationsEnabled","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","withNodes","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","UserBirthday","Switcher","inactive","BusinessHours","usernameList","otherUsernames","usernameLinks","s","particleSize","onEnded","stickerHash","getStickerHashById","previewMediaData","paths","generateRandomDropPath","path","withSharedAnimation","onAnimationEnd","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","genericEffects","effectSize","shouldPause","stopActiveReaction","isCustom","availableReaction","r","centerIconId","centerIcon","assignedEffectId","aroundAnimation","assignedId","available","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","noVideoOnMobile","AnimatedSticker","animatedIcon","roundToNearestEven","play","onLoad","CustomEmojiEffect","withIconHeart","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","blankUrl","ChatFolderModal","MuteChatModal","lastMessageId","selectChatLastMessageId","lastMessage","selectChatLastMessage","senderId","isOutgoing","actualSenderId","fromId","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","topicsInfo","selectTopicsInfo","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","listedTopicIds","topics","topicsById","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","useEnsureMessage","renderSubtitle","useChatListEntry","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","contextActions","useChatContextActions","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","elements","renderContent","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","isMinimized","handler","actionExpand","actionHide","isHidden","compact","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","fluid","pill","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","rect","currentTarget","clientY","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","deltaY","passive","useTopOverscroll","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onLoadMore","onDragLeave","UnconfirmedSession","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","EmptyFolder","canManageTopics","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","selectTopics","canDelete","selectCanDeleteTopic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","beginHeavyAnimation","waitForTransitionEnd","transform","onTransitionEnd","GroupChatInfo","HeaderActions","canExpandActions","isForForum","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","mediaHasPreview","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","suggestedVideoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetchBlob","videoTs","videoSizes","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","SimilarChannel","channel","fallbackColor","setColor","imgBlobUrl","averageColor","getAverageColor","rgb2hex","useAverageColor","MoreChannels","channelsCount","profileTab","forceScrollProfileTab","similarChannelIds","shouldShowInChat","selectSimilarChannelIds","toggleChannelRecommendations","loadChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","similarChannels","shoulRenderSkeleton","setShoulRenderSkeleton","firstSimilarChannels","areSimilarChannelsPresent","useHorizontalScroll","shouldRenderChannels","clearTimeout","handleToggle","xmlns","SHOW_CHANNELS_NUMBER","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","starCount","stars","starGiftSticker","selectGiftStickerForStars","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onIntersectPinnedMessage","checkGiftCode","getReceipt","openStarsTransactionFromGift","openPrizeStarsTransactionFromGiveaway","useFocusMessage","useUnmountCleanup","viewportPinnedIdsToRemove","noAppearanceAnimation","markShown","isPremiumGift","isGiftCode","isSuggestedAvatar","isJoinedMessage","isJoinedChannelMessage","isStarsGift","isPrizeStars","shouldShowConfettiRef","withStars","targetUsers","isContextMenuShown","handlePrizeStarsClick","handleGiftCodeClick","slug","preventMessageInputBlur","handlePremiumGiftClick","isGift","toUserId","monthsAmount","isFromGiveaway","isGiveaway","isUnclaimed","renderGiftCode","handleStarGiftClick","formatInteger","renderPrizeStars","ActionMessageSuggestedAvatar","SimilarChannels","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","AttachBotIcon","shortName","isDisclaimerNeeded","withPortal","CustomSend","isQuick","isGeneric","svgRef","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","svg","baseVal","useEffectOnce","onDrop","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","DropTarget","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","mimeType","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","STARS_ICON_PLACEHOLDER","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isMirrored","anchorRef","canLoad","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","useOverlayPosition","overlayRef","isForMessageEffect","effectClassName","messageText","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","isInWebPage","clickArg","isPaidPreview","mediaType","withBlurredBackground","useBlurredMediaThumbRef","useMediaTransition","showSpoiler","wasLoadDisabled","spinnerRef","useShowTransition","noMountTransition","withShouldRender","downloadButtonRef","shouldRenderDownloadButton","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","withAnimation","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","isPriority","onTimeUpdate","cx","cy","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isPreviewPreloaded","canLoadPreview","previewRef","isInline","isUnsupported","useUnsupportedMedia","playButtonRef","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","onAudioPlay","onCancelMediaTransfer","openTelegramLink","stickersRef","handleMediaClick","handleContainerClick","handleQuickButtonClick","useEnsureStory","hasCustomColor","isWithTextColor","documents","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","Photo","Video","Audio","Document","isEmoji","isRectangular","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","requestMediaWorker","MAX_WORKERS","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","RADIUS","lastWorkerIndex","thumbData","workerIndex","cycleRestrict","offscreenRef","transferControlToOffscreen","transferables","useOffscreenCanvasBlur","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","SCROLL_MAX_DISTANCE","FOCUS_MARGIN","isResizingContainer","scrollTargetPosition","isRelocatedRef","isRelocated","messagesContainer","isToBottom","scrollPosition","animateScroll","firstQuote","addExtraClass","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","innerWidth","anchorCenterY","anchorBottomY","REACTION_SIZE","chosen","noAppearAnimation","isLocked","onSendPaidReaction","onShowPaidReactionModal","StarReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isForEffects","isWithPaidReaction","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortedReactions","sortReactions","unshift","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","hintText","parts","isPrimary","ReactionSelectorReaction","ReactionSelectorCustomReaction","submitText","initialValue","setText","handleTextChange","handleSubmit","isSlim","teactExperimentControlled","tag","isChosen","chosenClassName","withCount","withContextMenu","onRemove","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","handleRemoveClick","handleRenameTag","newTitle","shouldAvoidNegativePosition","own","tagText","tail","tailFill","PromptDialog","selectCurrentChat","deleteChatMember","handleDeleteChatMember","useAsyncRendering","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","statistics","isToncoin","renderBalanceCell","balance","usdRate","integerTonPart","decimalTonPart","toFixed","integerUsdPart","decimalUsdPart","period","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","part","percentage","change","isChangeNegative","renderOverviewItemValue","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","ghost","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideos","getPreloadMediaHashes","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","ownProps","restrictedEmoji","selectRestrictedEmoji","temperatureC","backgroundColor","convertToRGBA","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","setExtraStyles","withTranslucentThumb","navigator","formatTemperature","STORY_ASPECT_RATIO","prepareStyle","mediaWidth","rotation","coordinates","pixelRadius","pixelWidth","pixelHeight","isStoryPlaying","closeStoryViewer","openUrl","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","channelId","handleMediaAreaClick","MediaAreaSuggestedReaction","MediaAreaWeather","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","phoneCall","adminId","selectCanInviteToActiveGroupCall","appConfig","DEFAULT_LIMITS","limits","selectPremiumLimit","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","noFirst","savedCallback","setInterval","clearInterval","resolver","deps","msOrSchedulerFn","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","DEFAULT_THRESHOLD","threshold","isLongPressActive","isPressed","timerId","canProcessEvent","touches","cancel","onMouseUp","onTouchStart","onTouchEnd","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","noLoad","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","mediaSource","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","setIsPlayed","isFullscreen","setIsFullscreen","listener","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","fullscreenProp","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","ConnectorClass","throttleWithTickEnd","payloads","pendingPayloads","pendingTransferables","postMessage","_len","_key","postMessageOnTickEnd","request","messageData","requestStates","requestStatesByCallback","restMessageData","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","postMessagesOnTickEnd","createConnector","worker","connector","handleMessage","currentArgs","onHeavyAnimationEnd","isAnimating","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","remainingPath","absPath","transition","SCROLL_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","SCROLL_MIN_DURATION","SCROLL_MAX_DURATION","startAt","prevOnHeavyAnimationEnd","animateSingle","t","currentPath","isAnimatingScroll","cancelScrollBlockingAnimation","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","hex2rgb","param","parseInt","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","p","q","defaultRGB","rgb","image","naturalHeight","naturalWidth","getImageData","getColorLuma","rgbColor","getPatternColor","hue","saturation","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","DETECT_UP_TO","MAX_LENGTH","lines","fixNonStandardEmoji","textWithoutNewlines","countIfEmojiOnly","line","iterator","matchAll","EMOJI_REGEX","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","Image","onload","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","fillColor","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","isElementInViewport","windowHeight","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","Worker","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}