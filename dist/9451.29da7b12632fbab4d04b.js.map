{"version":3,"file":"9451.29da7b12632fbab4d04b.js","mappings":"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","sources":["webpack://telegram-t/./src/components/mediaViewer/helpers/getViewableMedia.ts","webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStoryForward.tsx","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/components/common/pickers/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.module.scss?df39","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/hooks/useDraggable.ts","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.module.scss?a30f","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.module.scss?c843","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.module.scss?b798","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumGiftModal.module.scss?67d9","webpack://telegram-t/./src/components/main/premium/PremiumGiftModal.tsx","webpack://telegram-t/./src/components/common/pickers/ItemPicker.tsx","webpack://telegram-t/./src/components/common/CountryPickerModal.module.scss?d5e6","webpack://telegram-t/./src/components/common/CountryPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayChannelPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.module.scss?6d7c","webpack://telegram-t/./src/components/main/premium/GiveawayUserPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayModal.module.scss?ac86","webpack://telegram-t/./src/components/main/premium/GiveawayModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumGiftingPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumGiftingPickerModal.module.scss?e51e","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.module.scss?9dc8","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.module.scss?1c77","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.module.scss?5f0b","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.tsx","webpack://telegram-t/./src/components/modals/common/TableAboutModal.module.scss?0459","webpack://telegram-t/./src/components/modals/common/TableAboutModal.tsx","webpack://telegram-t/./src/components/common/AboutAdsModal.module.scss?0072","webpack://telegram-t/./src/components/common/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/AboutMonetizationModal.module.scss?2ca6","webpack://telegram-t/./src/components/common/AboutMonetizationModal.tsx","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.module.scss?bb6b","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.tsx","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.module.scss?b26e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/main/PermissionCheckboxList.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.module.scss?fbca","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.module.scss?84a2","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.tsx","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.module.scss?a8aa","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.tsx","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.module.scss?68c3","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.module.scss?497f","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.tsx","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/BotAppResults.tsx","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/left/settings/PremiumStatusItem.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.module.scss?16a3","webpack://telegram-t/./src/components/left/settings/PrivacyMessages.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyLastSeen.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.module.scss?6993","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/common/PinMessageModal.async.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.module.scss?c38f","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.module.scss?f0ab","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearch.module.scss?725f","webpack://telegram-t/./src/components/middle/search/MiddleSearch.tsx","webpack://telegram-t/./src/hooks/events/useOutsideClick.ts","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.module.scss?0536","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.module.scss?695a","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/isFullyVisible.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommand.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.module.scss?f347","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPost.module.scss?fea0","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPostMeta.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentStory.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.module.scss?96a0","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.module.scss?bbd6","webpack://telegram-t/./src/components/right/statistics/StatisticsMessagePublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsStoryPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/StoryStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageBot.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.ts","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.module.scss?717b","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.tsx","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.module.scss?de6c","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/components/common/PeerBadge.module.scss?732c","webpack://telegram-t/./src/components/common/PeerBadge.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.module.scss?7af2","webpack://telegram-t/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://telegram-t/./src/components/modals/common/TableInfoModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.module.scss?22c9","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.tsx","webpack://telegram-t/./src/util/objects/customPeer.ts"],"sourcesContent":["import type {\n  ApiMessage, ApiPeer, ApiPeerPhotos, ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { MediaViewerMedia } from '../../../types';\n\nimport { getMessageContent, isDocumentPhoto, isDocumentVideo } from '../../../global/helpers';\n\nexport type MediaViewerItem = {\n  type: 'message';\n  message: ApiMessage;\n  mediaIndex?: number;\n} | {\n  type: 'avatar';\n  avatarOwner: ApiPeer;\n  profilePhotos: ApiPeerPhotos;\n  mediaIndex: number;\n} | {\n  type: 'standalone';\n  media: MediaViewerMedia[];\n  mediaIndex: number;\n} | {\n  type: 'sponsoredMessage';\n  message: ApiSponsoredMessage;\n  mediaIndex?: number;\n};\n\ntype ViewableMedia = {\n  media: MediaViewerMedia;\n  isSingle?: boolean;\n};\n\nexport function getMediaViewerItem({\n  message, avatarOwner, profilePhotos, standaloneMedia, mediaIndex, sponsoredMessage,\n}: {\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  standaloneMedia?: MediaViewerMedia[];\n  sponsoredMessage?: ApiSponsoredMessage;\n  mediaIndex?: number;\n}): MediaViewerItem | undefined {\n  if (avatarOwner && profilePhotos) {\n    return {\n      type: 'avatar',\n      avatarOwner,\n      profilePhotos,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (standaloneMedia) {\n    return {\n      type: 'standalone',\n      media: standaloneMedia!,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (message) {\n    return {\n      type: 'message',\n      message,\n      mediaIndex,\n    };\n  }\n\n  if (sponsoredMessage) {\n    return {\n      type: 'sponsoredMessage',\n      message: sponsoredMessage,\n      mediaIndex,\n    };\n  }\n\n  return undefined;\n}\n\nexport default function getViewableMedia(params?: MediaViewerItem): ViewableMedia | undefined {\n  if (!params) return undefined;\n\n  if (params.type === 'standalone') {\n    return {\n      media: params.media[params.mediaIndex],\n      isSingle: params.media.length === 1,\n    };\n  }\n\n  if (params.type === 'avatar') {\n    const avatar = params.profilePhotos?.photos[params.mediaIndex];\n    if (avatar) {\n      return {\n        media: avatar,\n      };\n    }\n    return undefined;\n  }\n\n  const {\n    action, document, photo, video, webPage, paidMedia,\n  } = getMessageContent(params.message);\n\n  if (action?.photo) {\n    return {\n      media: action.photo,\n      isSingle: true,\n    };\n  }\n\n  if (document && (isDocumentPhoto(document) || isDocumentVideo(document))) {\n    return {\n      media: document,\n    };\n  }\n\n  if (webPage) {\n    const { photo: webPagePhoto, video: webPageVideo } = webPage;\n    const media = webPageVideo || webPagePhoto;\n    if (media) {\n      return {\n        media,\n        isSingle: true,\n      };\n    }\n  }\n\n  if (paidMedia) {\n    const extendedMedia = paidMedia.extendedMedia[params.mediaIndex || 0];\n    if (!('mediaType' in extendedMedia)) {\n      const { photo: extendedPhoto, video: extendedVideo } = extendedMedia;\n      return {\n        media: (extendedPhoto || extendedVideo)!,\n      };\n    }\n  }\n\n  const media = video || photo;\n\n  if (media) {\n    return {\n      media,\n      isSingle: video?.isGif,\n    };\n  }\n\n  return undefined;\n}\n","import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { isElementInViewport } from '../../../util/isElementInViewport';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n  mediaIndex?: number,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message, mediaIndex);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage, mediaIndex?: number,\n) {\n  const { container, mediaEl: toImage } = getNodes(origin, message, mediaIndex);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [MediaViewerOrigin.Inline, MediaViewerOrigin.ScheduledInline].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  ) || (\n    [MediaViewerOrigin.Album, MediaViewerOrigin.ScheduledAlbum].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(container: HTMLElement, imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n  let imgOffsetTop = container.offsetTop + imageEl.closest<HTMLDivElement>('.content-inner, .WebPage')!.offsetTop;\n  if (container.id.includes('album-media-')) {\n    imgOffsetTop += container.parentElement!.offsetTop + container.closest<HTMLDivElement>('.Message')!.offsetTop;\n  }\n\n  return imgOffsetTop > messageListElement.scrollTop\n    && imgOffsetTop + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage, index?: number) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      // eslint-disable-next-line max-len\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.PreviewMedia:\n      containerSelector = `#preview-media${index}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.StarsTransaction:\n      containerSelector = '.transaction-media-preview';\n      mediaSelector = index === 0 ? `.stars-transaction-media-${index} :is(img, video)` : undefined;\n      break;\n\n    case MediaViewerOrigin.SponsoredMessage:\n      containerSelector = '.Transition_slide-active > .MessageList .sponsored-media-preview';\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = mediaSelector\n    ? container?.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector) : undefined;\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.StarsTransaction:\n    case MediaViewerOrigin.PreviewMedia:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\nimport { IS_IOS, IS_PWA } from '../util/windowEnvironment';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type { MediaViewerMedia } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getMediaFileSize,\n  getMediaFormat,\n  getMediaHash,\n  getMediaThumbUri,\n  getPhotoFullDimensions,\n  getProfilePhotoMediaHash,\n  getVideoDimensions,\n  getVideoProfilePhotoMediaHash,\n  isDocumentPhoto,\n  isDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\nconst FALLBACK_DIMENSIONS = AVATAR_FULL_DIMENSIONS;\n\ntype UseMediaProps = {\n  media?: MediaViewerMedia;\n  isAvatar?: boolean;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  media,\n  isAvatar,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const isPhotoAvatar = isAvatar && media?.mediaType === 'photo' && !media.isVideo;\n  const isVideoAvatar = isAvatar && media?.mediaType === 'photo' && media.isVideo;\n  const isDocument = media?.mediaType === 'document';\n  const isVideo = (media?.mediaType === 'video' && !media.isRound) || (isDocument && isDocumentVideo(media));\n  const isPhoto = media?.mediaType === 'photo' || (isDocument && isDocumentPhoto(media));\n  const isGif = media?.mediaType === 'video' && media.isGif;\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaOrAvatarHash = useMemo(() => (isFull?: boolean) => {\n    if (!media) return undefined;\n\n    if ((isPhotoAvatar || isVideoAvatar) && !isFull) {\n      return getProfilePhotoMediaHash(media);\n    }\n\n    if (isVideoAvatar && isFull) {\n      return getVideoProfilePhotoMediaHash(media);\n    }\n\n    return getMediaHash(media, isFull ? 'full' : 'preview');\n  }, [isVideoAvatar, isPhotoAvatar, media]);\n\n  const pictogramBlobUrl = useMedia(\n    media\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocument)\n    && getMediaHash(media, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaOrAvatarHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaOrAvatarHash(true),\n    undefined,\n    media && getMediaFormat(media, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = media && 'blobUrl' in media ? media.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && media && getMediaThumbUri(media));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    (!isVideoAvatar && !isVideo) ? (previewBlobUrl || pictogramBlobUrl || bestImageData) : undefined\n  );\n\n  const mediaSize = media && getMediaFileSize(media);\n\n  const isLocal = Boolean(localBlobUrl);\n\n  const dimensions = useMemo(() => {\n    if (isAvatar) {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n\n    if (isDocument) {\n      return media.mediaSize!;\n    }\n\n    if (isPhoto) {\n      return getPhotoFullDimensions(media);\n    }\n\n    if (isVideo) {\n      return getVideoDimensions(media);\n    }\n\n    return FALLBACK_DIMENSIONS;\n  }, [isAvatar, isDocument, isPhoto, isVideo, isVideoAvatar, media]);\n\n  return {\n    getMediaHash: getMediaOrAvatarHash,\n    media,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocument,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    mediaSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useUnmountCleanup(() => {\n    setZoomChange(1);\n  });\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveDownloads, MessageListType } from '../../global/types';\nimport type { MediaViewerOrigin } from '../../types';\nimport type { MenuItemProps } from '../ui/MenuItem';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getIsDownloading,\n  getMediaFilename,\n  getMediaFormat,\n  getMediaHash,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsMessageProtected,\n  selectTabState,\n} from '../../global/selectors';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  activeDownloads: ActiveDownloads;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  origin?: MediaViewerOrigin;\n};\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  mediaData?: string;\n  isVideo: boolean;\n  canUpdateMedia?: boolean;\n  canReportAvatar?: boolean;\n  activeDownloads?: ActiveDownloads;\n  onReportAvatar: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  item,\n  mediaData,\n  isVideo,\n  isChatProtected,\n  isProtected,\n  canReportAvatar,\n  canDelete,\n  canUpdate,\n  messageListType,\n  activeDownloads,\n  origin,\n  onReportAvatar: onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMedia,\n    cancelMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n    openMediaViewer,\n    openDeleteMessageModal,\n  } = getActions();\n\n  const isMessage = item?.type === 'message';\n\n  const { media } = getViewableMedia(item) || {};\n  const fileName = media && getMediaFilename(media);\n  const isDownloading = media && getIsDownloading(activeDownloads, media);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    media && getMediaHash(media, 'download'),\n    !isDownloading,\n    media && getMediaFormat(media, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (!media) return;\n\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      const message = item?.type === 'message' ? item.message : undefined;\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (item?.type !== 'avatar') return;\n    const { avatarOwner, profilePhotos, mediaIndex } = item;\n    const avatarPhoto = profilePhotos?.photos[mediaIndex]!;\n    if (isUserId(avatarOwner.id)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwner.id, photo: avatarPhoto });\n    }\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: avatarOwner.id,\n      mediaIndex: 0,\n      isAvatarView: true,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const lang = useOldLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModal() {\n    return (item?.type === 'avatar') ? (\n      <DeleteProfilePhotoModal\n        isOpen={isDeleteModalOpen}\n        onClose={closeDeleteModal}\n        onConfirm={onBeforeDelete}\n        profileId={item.avatarOwner.id}\n        photo={item.profilePhotos.photos[item.mediaIndex!]}\n      />\n    ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected || item?.type === 'standalone') {\n      return undefined;\n    }\n\n    return item?.type !== 'sponsoredMessage' && (isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <i className=\"icon icon-download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <i className=\"icon icon-download\" />\n      </Button>\n    ));\n  }\n\n  const openDeleteModalHandler = useLastCallback(() => {\n    if (item?.type === 'message') {\n      openDeleteMessageModal({\n        isSchedule: messageListType === 'scheduled',\n        message: item.message,\n        onConfirm: onBeforeDelete,\n      });\n    } else {\n      openDeleteModal();\n    }\n  });\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (isMessage && item.message.isForwardingAllowed && !item.message.content.action && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReportAvatar) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModalHandler,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModal()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {isMessage && item.message.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <i className=\"icon icon-forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <i className=\"icon icon-zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <i className=\"icon icon-zoom-in\" />\n      </Button>\n      {canReportAvatar && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <i className=\"icon icon-flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <i className=\"icon icon-copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModalHandler}\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {canDelete && renderDeleteModal()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    item, canUpdateMedia,\n  }): StateProps => {\n    const tabState = selectTabState(global);\n    const { origin } = tabState.mediaViewer;\n\n    const message = item?.type === 'message' ? item.message : undefined;\n    const avatarOwner = item?.type === 'avatar' ? item.avatarOwner : undefined;\n    const avatarPhoto = item?.type === 'avatar' && item.profilePhotos.photos[item.mediaIndex];\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isProtected = selectIsMessageProtected(global, message);\n    const activeDownloads = selectActiveDownloads(global);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarPhotoId);\n    const canDeleteAvatar = canUpdateMedia && Boolean(avatarPhoto);\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && Boolean(avatarPhoto) && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      activeDownloads,\n      isProtected,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      origin,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  buttonText?: string;\n  onClick: () => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', buttonText, isForVideo, onClick, handleSponsoredClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const onButtonClick = useLastCallback(() => {\n    handleSponsoredClick();\n  });\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n      {Boolean(buttonText) && (\n        <Button\n          className={buildClassName('media-viewer-footer-content', 'media-viewer-button')}\n          size=\"default\"\n          color=\"primary\"\n          isRectangular\n          onClick={onButtonClick}\n        >\n          {buttonText}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useUnmountCleanup } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useUnmountCleanup(() => {\n    setCurrentTime(0);\n  });\n\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useUnmountCleanup(() => {\n    setIsVideoWaiting(false);\n  });\n\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => {\n    videoPreview?.destroy();\n    videoPreview = undefined;\n  };\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ingarEvU\",\"preview\":\"TqpEWfl3\",\"previewCanvas\":\"fKVz2lln\",\"previewTime\":\"bGiNvx5D\",\"previewTimeText\":\"mnkqvOMR\",\"track\":\"Od9ZSc1U\",\"buffered\":\"ANe2DKfp\",\"played\":\"igaGLblf\",\"seeking\":\"beUP6SqY\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { clamp, round } from '../../util/math';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useSignal,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useOldLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon = useMemo(() => {\n    if (volume === 0 || isMuted) return 'icon-muted';\n    if (volume < 0.3) return 'icon-volume-1';\n    if (volume < 0.6) return 'icon-volume-2';\n    return 'icon-volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <i className={buildClassName('icon', isPlaying ? 'icon-pause' : 'icon-play')} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <i className={buildClassName('icon', volumeIcon)} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <i className=\"icon icon-pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <i className={buildClassName('icon ', isFullscreen ? 'icon-smallscreen' : 'icon-fullscreen')} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/windowEnvironment';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useFullscreen from '../../hooks/window/useFullscreen';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  isClickDisabled?: boolean;\n  isSponsoredMessage?: boolean;\n  handleSponsoredClick?: (isFromMedia?: boolean) => void;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  onClose,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n  isSponsoredMessage,\n  handleSponsoredClick,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(\n    !isBuffered && !isUnsupported, undefined, undefined, 'slow',\n  );\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransitionDeprecated(\n    IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow',\n  );\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isSponsoredMessage) {\n      handleSponsoredClick?.(true);\n      onClose(e);\n    }\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, bufferingHandlers);\n\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <i className=\"icon icon-play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isSponsoredMessage && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage, ApiSponsoredMessage,\n} from '../../api/types';\nimport type { MediaViewerOrigin } from '../../types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  selectIsMessageProtected, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { ARE_WEBCODECS_SUPPORTED, IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  item: MediaViewerItem;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  isMoving?: boolean;\n  onClose: () => void;\n  onFooterClick: () => void;\n  handleSponsoredClick: () => void;\n};\n\ntype StateProps = {\n  textMessage?: ApiMessage | ApiSponsoredMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\n\nconst MediaViewerContent = ({\n  item,\n  isActive,\n  textMessage,\n  origin,\n  withAnimation,\n  isProtected,\n  volume,\n  playbackRate,\n  isMuted,\n  isHidden,\n  isMoving,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}: OwnProps & StateProps) => {\n  const lang = useOldLang();\n\n  const isAvatar = item.type === 'avatar';\n  const isSponsoredMessage = item.type === 'sponsoredMessage';\n  const { media } = getViewableMedia(item) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    mediaSize,\n    loadProgress,\n  } = useMediaProps({\n    media, isAvatar, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n\n  const isOpen = Boolean(media);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  if (!media) return undefined;\n\n  if (item.type === 'avatar') {\n    if (!isVideoAvatar) {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={media.id}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={mediaSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n            isSponsoredMessage={isSponsoredMessage}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        </div>\n      );\n    }\n  }\n\n  const textParts = textMessage && (textMessage.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({ message: textMessage, forcePlayback: true, isForMediaViewer: true }));\n  const buttonText = textMessage && 'buttonText' in textMessage ? textMessage.buttonText : undefined;\n  const hasFooter = Boolean(textParts);\n  const posterSize = calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={media.id}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={mediaSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n          isSponsoredMessage={isSponsoredMessage}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          buttonText={buttonText}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n      origin,\n    } = selectTabState(global).mediaViewer;\n    const message = item.type === 'message' ? item.message : undefined;\n    const sponsoredMessage = item.type === 'sponsoredMessage' ? item.message : undefined;\n    const textMessage = message || sponsoredMessage;\n\n    return {\n      origin,\n      textMessage,\n      isProtected: message && selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport { useFullscreenStatus } from '../../hooks/window/useFullscreen';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  chatId?: string;\n  threadId?: ThreadId;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  getNextItem: (from: MediaViewerItem, direction: number) => MediaViewerItem | undefined;\n  selectItem: (item: MediaViewerItem) => void;\n  loadMoreItemsIfNeeded: (item: MediaViewerItem) => void;\n  onFooterClick: () => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  onClose: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  item,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  isLoadingMoreMedia,\n  isSynced,\n  loadMoreItemsIfNeeded,\n  getNextItem,\n  selectItem,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveItem, setActiveItem] = useSignal<MediaViewerItem | undefined>(item);\n  const activeItemRef = useSignalRef(getActiveItem);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeItem = useDerivedState(getActiveItem);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectItemDebounced = useDebouncedCallback(selectItem, [selectItem], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveItem(item);\n    }\n  }, [item, setActiveItem, transformRef]);\n\n  useEffect(() => {\n    if (!isSynced || !activeItem || isLoadingMoreMedia) return;\n    loadMoreItemsIfNeeded(activeItem);\n  }, [activeItem, loadMoreItemsIfNeeded, isSynced, isLoadingMoreMedia]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeItemRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const cActiveItem = activeItemRef.current;\n      if (cActiveItem === undefined) return false;\n      const nextItem = getNextItem(cActiveItem, direction);\n      if (nextItem !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const cActiveItem = activeItemRef.current;\n      const nextItem = cActiveItem && getNextItem(cActiveItem, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (nextItem !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    activeItemRef,\n    clearSwipeDirectionDebounced,\n    clickXThreshold,\n    getNextItem,\n    isFullscreen,\n    isHidden,\n    onClose,\n    selectItemDebounced,\n    setActiveItem,\n    setIsActiveDebounced,\n    setTransform,\n    shouldCloseOnVideo,\n    transformRef,\n    windowHeight,\n    windowWidth,\n    withAnimation,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  const [prevItem, nextItem] = useMemo(() => {\n    if (activeItem === undefined) return [undefined, undefined];\n    return [getNextItem(activeItem, -1), getNextItem(activeItem, 1)];\n  }, [activeItem, getNextItem]);\n\n  if (activeItem === undefined) return undefined;\n\n  const hasPrev = prevItem !== undefined;\n  const hasNext = nextItem !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={prevItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          item={activeItem}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n          onClose={onClose}\n          onFooterClick={onFooterClick}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={nextItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiPeer } from '../../api/types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getSenderTitle, isChatChannel, isChatGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectSender,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dates/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n};\n\ntype StateProps = {\n  owner?: ApiPeer;\n};\n\nconst BULLET = '\\u2022';\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  owner,\n  item,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (item?.type !== 'message') return;\n\n    const message = item.message;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId: message.chatId, messageId: message.id });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId: message.chatId, messageId: message.id });\n    }\n  });\n\n  const lang = useOldLang();\n\n  const subtitle = useMemo(() => {\n    if (!item || item.type === 'standalone') return undefined;\n\n    const avatarOwner = item.type === 'avatar' ? item.avatarOwner : undefined;\n    const profilePhotos = item.type === 'avatar' ? item.profilePhotos : undefined;\n    const avatar = profilePhotos?.photos[item.mediaIndex!];\n    const isFallbackAvatar = avatar?.id === profilePhotos?.fallbackPhoto?.id;\n    const isPersonalAvatar = avatar?.id === profilePhotos?.personalPhoto?.id;\n    const date = item.type === 'message' ? item.message.date : avatar?.date;\n    if (!date) return undefined;\n\n    const formattedDate = formatMediaDateTime(lang, date * 1000, true);\n    const count = profilePhotos?.count\n      && (profilePhotos.count + (profilePhotos?.fallbackPhoto ? 1 : 0));\n    const currentIndex = item.mediaIndex! + 1 + (profilePhotos?.personalPhoto ? -1 : 0);\n    const countText = count && lang('Of', [currentIndex, count]);\n\n    const parts: string[] = [];\n    if (avatar) {\n      const chat = !isUserId(avatarOwner!.id) ? avatarOwner as ApiChat : undefined;\n      const isChannel = chat && isChatChannel(chat);\n      const isGroup = chat && isChatGroup(chat);\n      parts.push(lang(\n        isPersonalAvatar ? 'lng_mediaview_profile_photo_by_you'\n          : isFallbackAvatar ? 'lng_mediaview_profile_public_photo'\n            : isChannel ? 'lng_mediaview_channel_photo'\n              : isGroup ? 'lng_mediaview_group_photo' : 'lng_mediaview_profile_photo',\n      ));\n    }\n\n    if (countText && !isPersonalAvatar && !isFallbackAvatar) {\n      parts.push(countText);\n    }\n\n    parts.push(formattedDate);\n\n    return parts.join(` ${BULLET} `);\n  }, [item, lang]);\n\n  if (!owner) {\n    return undefined;\n  }\n\n  const senderTitle = getSenderTitle(lang, owner);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={owner.id} size=\"medium\" peer={owner} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {subtitle}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const message = item?.type === 'message' ? item.message : undefined;\n    const messageSender = message && selectSender(global, message);\n\n    const owner = item?.type === 'avatar' ? item.avatarOwner : messageSender;\n\n    return {\n      owner,\n    };\n  },\n)(SenderInfo);\n","import React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPeer,\n  ApiPeerPhotos,\n  ApiPhoto,\n  ApiSponsoredMessage,\n} from '../../api/types';\nimport { type MediaViewerMedia, MediaViewerOrigin, type ThreadId } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getChatMediaMessageIds, getMessagePaidMedia, isChatAdmin, isUserId,\n} from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentChatMediaSearch,\n  selectCurrentSharedMediaSearch,\n  selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPeer,\n  selectPeerPhotos,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage, selectSponsoredMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia, { getMediaViewerItem, type MediaViewerItem } from './helpers/getViewableMedia';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: ThreadId;\n  messageId?: number;\n  message?: ApiMessage;\n  collectedMessageIds?: number[];\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatar?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  chatMessages?: Record<number, ApiMessage>;\n  sponsoredMessage?: ApiSponsoredMessage;\n  standaloneMedia?: MediaViewerMedia[];\n  mediaIndex?: number;\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  withDynamicLoading?: boolean;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\nconst AVATAR_LOAD_TRIGGER = 4;\n\nconst MediaViewer = ({\n  chatId,\n  threadId,\n  messageId,\n  message,\n  collectedMessageIds,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatar,\n  avatarOwner,\n  profilePhotos,\n  chatMessages,\n  sponsoredMessage,\n  standaloneMedia,\n  mediaIndex,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n  withDynamicLoading,\n  isLoadingMoreMedia,\n  isSynced,\n}: StateProps) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n    searchChatMediaMessages,\n    loadMoreProfilePhotos,\n    clickSponsoredMessage,\n    openUrl,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || message || standaloneMedia || sponsoredMessage);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const senderId = message?.senderId || avatarOwner?.id || message?.chatId;\n  const prevSenderId = usePreviousDeprecated<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportAvatarModalOpen, openReportAvatarModal, closeReportAvatarModal] = useFlag();\n\n  const currentItem = getMediaViewerItem({\n    message, avatarOwner, standaloneMedia, profilePhotos, mediaIndex, sponsoredMessage,\n  });\n  const { media, isSingle } = getViewableMedia(currentItem) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n  } = useMediaProps({\n    media, isAvatar: Boolean(avatarOwner), origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReportAvatar = (() => {\n    if (isChatWithSelf) return false;\n    if (currentItem?.type !== 'avatar' || !avatarOwner) return false;\n    const info = currentItem.profilePhotos;\n    if (media === info.personalPhoto) return false;\n    return true;\n  })();\n  const isVisible = !isHidden && isOpen;\n\n  const messageMediaIds = useMemo(() => {\n    return withDynamicLoading\n      ? collectedMessageIds\n      : getChatMediaMessageIds(chatMessages || {}, collectedMessageIds || [], isFromSharedMedia);\n  }, [chatMessages, collectedMessageIds, isFromSharedMedia, withDynamicLoading]);\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || animationKey.current === undefined)) {\n    animationKey.current = isSingle ? 0 : (messageId || mediaIndex);\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      requestMutation(() => {\n        document.body.classList.toggle('is-media-viewer-open', isOpen);\n      });\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    mql.addEventListener('change', forceUpdate);\n\n    return () => {\n      mql.removeEventListener('change', forceUpdate);\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePreviousDeprecated<ApiMessage | undefined>(message);\n  const prevIsHidden = usePreviousDeprecated<boolean | undefined>(isHidden);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const prevItem = usePreviousDeprecated(currentItem);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevItem !== currentItem;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (shouldAnimateOpening || !prevItem)) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message, mediaIndex);\n    }\n\n    if (isGhostAnimation && !isOpen && prevItem) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage, prevItem?.mediaIndex);\n    }\n  }, [\n    bestImageData, dimensions, hasFooter, isGhostAnimation, isOpen, isVideo, message, origin,\n    prevBestImageData, prevItem, prevMessage, prevOrigin, shouldAnimateOpening, mediaIndex,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const handleFooterClick = useLastCallback(() => {\n    handleClose();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId });\n    }\n  });\n\n  const handleSponsoredClick = useLastCallback((isFromMedia?: boolean) => {\n    if (!sponsoredMessage || !chatId) return;\n\n    clickSponsoredMessage({ isMedia: isFromMedia, isFullscreen: true, chatId });\n    openUrl({ url: sponsoredMessage!.url });\n    closeMediaViewer();\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [messageId!],\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const loadMoreItemsIfNeeded = useLastCallback((item?: MediaViewerItem) => {\n    if (!item || isLoadingMoreMedia) return;\n\n    if (item.type === 'avatar') {\n      const isNearEnd = item.mediaIndex >= item.profilePhotos.photos.length - AVATAR_LOAD_TRIGGER;\n      if (!isNearEnd) return;\n      loadMoreProfilePhotos({ peerId: item.avatarOwner.id });\n    }\n\n    if (item.type === 'message' && withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: item.message.id });\n    }\n  });\n\n  const getNextItem = useLastCallback((from: MediaViewerItem, direction: number): MediaViewerItem | undefined => {\n    if (direction === 0 || isSingle) return undefined;\n\n    if (from.type === 'standalone') {\n      const { media: fromMedia, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && nextIndex < fromMedia.length) {\n        return { type: 'standalone', media: fromMedia, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'avatar') {\n      const { avatarOwner: fromAvatarOwner, profilePhotos: fromProfilePhotos, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && fromProfilePhotos && nextIndex < fromProfilePhotos.photos.length) {\n        return {\n          type: 'avatar',\n          avatarOwner: fromAvatarOwner,\n          profilePhotos: fromProfilePhotos,\n          mediaIndex: nextIndex,\n        };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'sponsoredMessage') {\n      const { message: fromSponsoredMessage, mediaIndex: fromSponsoredMessageIndex } = from;\n      const nextIndex = fromSponsoredMessageIndex! + direction;\n      if (nextIndex >= 0 && fromSponsoredMessage) {\n        return { type: 'sponsoredMessage', message: fromSponsoredMessage, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    const { message: fromMessage, mediaIndex: fromMediaIndex } = from;\n\n    const paidMedia = getMessagePaidMedia(fromMessage);\n    if (paidMedia) {\n      const nextIndex = fromMediaIndex! + direction;\n\n      if (nextIndex >= 0 && nextIndex < paidMedia.extendedMedia.length) {\n        return { type: 'message', message: fromMessage, mediaIndex: nextIndex };\n      }\n    }\n\n    const index = messageMediaIds?.indexOf(fromMessage.id);\n    if (index === undefined) return undefined;\n    const nextIndex = index + direction;\n    const nextMessageId = messageMediaIds![nextIndex];\n    const nextMessage = chatMessages?.[nextMessageId];\n    if (nextMessage) {\n      return { type: 'message', message: nextMessage };\n    }\n\n    return undefined;\n  });\n\n  const openMediaViewerItem = useLastCallback((item?: MediaViewerItem) => {\n    if (!item) {\n      handleClose();\n      return;\n    }\n\n    const itemChatId = item.type === 'avatar'\n      ? item.avatarOwner.id : item.type === 'message'\n        ? item.message.chatId : undefined;\n    const itemMessageId = item.type === 'message' ? item.message.id : undefined;\n    const itemStandaloneMedia = item.type === 'standalone' ? item.media : undefined;\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: itemChatId,\n      messageId: itemMessageId,\n      standaloneMedia: itemStandaloneMedia,\n      mediaIndex: item.mediaIndex,\n      isAvatarView: item.type === 'avatar',\n      withDynamicLoading,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    const mediaCount = profilePhotos?.photos.length\n      || standaloneMedia?.length || messageMediaIds?.length || 0;\n    if (mediaCount <= 1 || !currentItem) {\n      handleClose();\n      return;\n    }\n    // Before deleting, select previous media\n    const prevMedia = getNextItem(currentItem, -1);\n    if (prevMedia) {\n      openMediaViewerItem(prevMedia);\n      return;\n    }\n\n    if ((currentItem.type === 'avatar' && isUserId(currentItem.avatarOwner.id)) || currentItem.type === 'standalone') {\n      // Keep current item, it'll update when indexes shift\n      return;\n    }\n\n    handleClose();\n  });\n\n  const lang = useOldLang();\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          <SenderInfo\n            key={media?.id}\n            item={currentItem}\n          />\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          item={currentItem}\n          canUpdateMedia={canUpdateMedia}\n          canReportAvatar={canReportAvatar}\n          onBeforeDelete={handleBeforeDelete}\n          onReportAvatar={openReportAvatarModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportModal\n          isOpen={isReportAvatarModalOpen}\n          onClose={closeReportAvatarModal}\n          subject=\"media\"\n          photo={avatar}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        item={currentItem}\n        loadMoreItemsIfNeeded={loadMoreItemsIfNeeded}\n        isLoadingMoreMedia={isLoadingMoreMedia}\n        isSynced={isSynced}\n        getNextItem={getNextItem}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectItem={openMediaViewerItem}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n        handleSponsoredClick={handleSponsoredClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      messageId,\n      origin,\n      isHidden,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isAvatarView,\n      isSponsoredMessage,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId, isSynced } = global;\n    const isChatWithSelf = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    if (isAvatarView) {\n      const peer = selectPeer(global, chatId!);\n      let canUpdateMedia = false;\n      if (peer) {\n        canUpdateMedia = isUserId(peer.id) ? peer.id === currentUserId : isChatAdmin(peer as ApiChat);\n      }\n\n      const profilePhotos = selectPeerPhotos(global, chatId!);\n\n      return {\n        profilePhotos,\n        avatar: profilePhotos?.photos[mediaIndex!],\n        avatarOwner: peer,\n        isLoadingMoreMedia: profilePhotos?.isLoading,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n        standaloneMedia,\n        mediaIndex,\n        isSynced,\n      };\n    }\n\n    let message: ApiMessage | undefined;\n    if (chatId && messageId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        message = selectScheduledMessage(global, chatId, messageId);\n      } else {\n        message = selectChatMessage(global, chatId, messageId);\n      }\n    }\n\n    let sponsoredMessage: ApiSponsoredMessage | undefined;\n    if (isSponsoredMessage && chatId) {\n      if (origin === MediaViewerOrigin.SponsoredMessage) {\n        sponsoredMessage = selectSponsoredMessage(global, chatId);\n      }\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (chatId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        chatMessages = selectChatScheduledMessages(global, chatId);\n      } else {\n        chatMessages = selectChatMessages(global, chatId);\n      }\n    }\n\n    let isLoadingMoreMedia = false;\n    const isOriginInline = origin === MediaViewerOrigin.Inline;\n    const isOriginAlbum = origin === MediaViewerOrigin.Album;\n    let collectedMessageIds: number[] | undefined;\n\n    if (chatId && threadId && messageId) {\n      if (withDynamicLoading && (isOriginInline || isOriginAlbum)) {\n        const currentSearch = selectCurrentChatMediaSearch(global);\n        isLoadingMoreMedia = Boolean(currentSearch?.isLoading);\n        const { foundIds } = (currentSearch?.currentSegment) || {};\n        collectedMessageIds = foundIds;\n      } else if (origin === MediaViewerOrigin.SharedMedia) {\n        const currentSearch = selectCurrentSharedMediaSearch(global);\n        const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n        collectedMessageIds = foundIds;\n      } else if (isOriginInline || isOriginAlbum) {\n        const outlyingList = selectOutlyingListByMessageId(global, chatId, threadId, messageId);\n        collectedMessageIds = outlyingList || selectListedIds(global, chatId, threadId);\n      }\n    }\n\n    return {\n      chatId,\n      threadId,\n      messageId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      sponsoredMessage,\n      collectedMessageIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isLoadingMoreMedia,\n      isSynced,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"bu_hGbaa\",\"fullSize\":\"W9A8SEMl\",\"backdrop\":\"OFh6u50Q\",\"captionBackdrop\":\"Jd1DYS6Y\",\"backdropNonInteractive\":\"xe67dhtF\",\"close\":\"Mye8Dwxa\",\"wrapper\":\"gLHHo5k8\",\"slideAnimation\":\"GJVwqV9e\",\"slideAnimationToActive\":\"_Yn4SWUB\",\"content\":\"hGCH03qc\",\"slideAnimationFromActive\":\"ZecqXqKy\",\"storyHeader\":\"e7HHuS1g\",\"composer\":\"FXineBYO\",\"caption\":\"RKedwa0I\",\"captionGradient\":\"sHNAfxzf\",\"media\":\"PVZ8TOWS\",\"mediaPreview\":\"lQfkulvp\",\"contentInner\":\"Wi0DXPH2\",\"name\":\"Ka1CGfzq\",\"slide\":\"urTtSsk9\",\"mobileSlide\":\"AjXOHOgE\",\"slidePreview\":\"Sef28wEh\",\"activeSlide\":\"uAlXNXJN\",\"slideInner\":\"g8ypsnnC\",\"mediaWrapper\":\"YiuvOPgT\",\"forward\":\"pGKsAszF\",\"storyIndicators\":\"jGDd2sza\",\"sender\":\"eMYhXF_X\",\"senderInfoTransition\":\"PXnfXZur\",\"senderInfo\":\"WpyVfrsc\",\"senderMeta\":\"jmKI_lhC\",\"senderName\":\"H1uod43o\",\"storyMetaRow\":\"zimpR8Hz\",\"storyMeta\":\"hGTnZuar\",\"closeButton\":\"WlLsjJ2Z\",\"actions\":\"GrsJNw3y\",\"active\":\"q756IpZB\",\"visibilityButton\":\"prxptFFf\",\"visibilityButtonSelf\":\"_MVsZpgB\",\"button\":\"TkphaPyQ\",\"buttonMenu\":\"K0_xAdzf\",\"captionInner\":\"D_5mWNmi\",\"captionContent\":\"ilyTRZtw\",\"captionText\":\"hmFA5qb1\",\"hasOverflow\":\"e1gyTmKe\",\"expanded\":\"HIMnUViv\",\"animate\":\"CvnxnCxN\",\"withShowMore\":\"Vq8pl_kQ\",\"captionShowMore\":\"bM5rlQtM\",\"navigate\":\"nZ30pf4g\",\"prev\":\"SXpRZiax\",\"next\":\"twOBFwUE\",\"modal\":\"nLPOogqS\",\"thumbnail\":\"MnNC7VHS\",\"ghost\":\"fME2l_yv\",\"ghost2\":\"TYicp2_K\",\"ghostImage\":\"HjoURJRK\",\"forwardHeader\":\"JJFtefb9\",\"clickable\":\"BsqMBS2I\",\"headerTitle\":\"G8OgmMDJ\",\"forwardInfo\":\"_M8CgT7s\",\"fromPeer\":\"nJr8QgYX\"};","import type { IDimensions } from '../../../global/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n\n    const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--safe-area-bottom');\n    if (safeAreaBottom) {\n      toHeight -= parseFloat(safeAreaBottom);\n    }\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.mobileSlide} .${styles.media}, .${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch--container';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../global/types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nexport const BASE_STORY_WIDTH = 720;\nexport const BASE_STORY_HEIGHT = 1280;\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n  const hasForwardInfo = isLoadedStory && Boolean(story.forwardInfo);\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GrE47IXS\",\"closeButton\":\"NlWSF1pA\",\"stealthIcon\":\"qKi5jsGM\",\"title\":\"BFctFGoT\",\"description\":\"fZIJH4IG\",\"listItem\":\"RGD70uBt\",\"icon\":\"HCYfPccW\",\"button\":\"AM_sxoXP\",\"subtitle\":\"L8oRQyKb\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useOldLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <i className=\"icon icon-eye-closed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-past', styles.icon)} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-future', styles.icon)} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  usersById: Record<string, ApiUser>;\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  usersById,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterUsersByName([...selectedIds || [], ...contactIds], usersById, searchQuery));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds, usersById]);\n\n  return (\n    <PeerPicker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedSelectedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      withDefaultPadding\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n      allowMultiple\n      withStatus\n      itemInputType=\"checkbox\"\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"BDK_pgpt\",\"active\":\"N8ujSwlC\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useOldLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterUsersByName([...closeFriendIds, ...contactIds], usersById, searchQuery));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery, usersById]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <PeerPicker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        withDefaultPadding\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        withStatus\n        itemInputType=\"checkbox\"\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"hz7SomkK\",\"header\":\"NV6Rt2g9\",\"closeButton\":\"SN1GFS6L\",\"headerTitle\":\"gi0Y6Ns6\",\"content\":\"sTaVDkiD\",\"section\":\"eUiuPoEC\",\"title\":\"iPPiw9DI\",\"list\":\"OUP1Ss0W\",\"option\":\"JL33Sa3b\",\"checked\":\"qVPo_cVL\",\"input\":\"zsDaUk0i\",\"icon\":\"AfYCVlys\",\"action\":\"njMeBBwY\",\"optionContent\":\"TUAAnG2w\",\"footer\":\"r24Qz2bf\",\"info\":\"ljeRVBOm\",\"submit\":\"RwNLN_rH\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiUser } from '../../api/types';\nimport type { ApiPrivacySettings, PrivacyVisibility } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getSenderTitle, getUserFullName } from '../../global/helpers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryInProfile } = getActions();\n\n  const lang = useOldLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isInProfile);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isInProfile !== isPinned) {\n      toggleStoryInProfile({ peerId: story!.peerId, storyId: story!.id, isInProfile: isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getSenderTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? convertSecondsToHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <i className={`icon icon-${option.icon}`} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <i className=\"icon icon-next\" aria-hidden />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n\nfunction convertSecondsToHours(seconds: number): number {\n  const secondsInHour = 3600;\n  const minutesInHour = 60;\n\n  const hours = Math.floor(seconds / secondsInHour);\n  const remainingSeconds = seconds % secondsInHour;\n  const remainingMinutes = Math.floor(remainingSeconds / minutesInHour);\n\n  // If remaining minutes are greater than or equal to 30, round up the hours\n  return remainingMinutes >= 30 ? hours + 1 : hours;\n}\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n\n  return enableScrolling;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStoryForwardInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getSenderTitle,\n  isUserId,\n} from '../../../global/helpers';\nimport { selectPeer, selectPeerStory } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  forwardInfo: ApiStoryForwardInfo;\n  className?: string;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  story?: ApiTypeStory;\n};\n\nconst EmbeddedStoryForward: FC<OwnProps & StateProps> = ({\n  className,\n  forwardInfo,\n  sender,\n  story,\n}) => {\n  const { openStoryViewer, loadPeerStoriesByIds, openChat } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!story && forwardInfo.fromPeerId && forwardInfo.storyId) {\n      loadPeerStoriesByIds({\n        peerId: forwardInfo.fromPeerId,\n        storyIds: [forwardInfo.storyId],\n      });\n    }\n  }, [forwardInfo, story]);\n\n  const senderTitle = sender ? getSenderTitle(lang, sender) : forwardInfo.fromName;\n\n  const openOriginalStory = useLastCallback(() => {\n    const { fromPeerId, storyId } = forwardInfo;\n    if (!fromPeerId) return;\n\n    const isStoryReady = story && !('isDeleted' in story && story.isDeleted);\n\n    if (isStoryReady) {\n      openStoryViewer({\n        peerId: fromPeerId,\n        storyId,\n        isSingleStory: true,\n      });\n    } else {\n      openChat({ id: fromPeerId });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(openOriginalStory);\n\n  function renderTextContent() {\n    if (story && 'content' in story && story.content.text) {\n      return (\n        <p className=\"embedded-text-wrapper\">\n          {renderTextWithEntities(story.content.text)}\n        </p>\n      );\n    }\n\n    return undefined;\n  }\n\n  function renderSender() {\n    if (!sender || !senderTitle) {\n      return undefined;\n    }\n\n    const icon: IconName | undefined = !isUserId(sender.id) ? 'channel-filled' : 'user-filled';\n\n    return (\n      <>\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {senderTitle && renderText(senderTitle)}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, true, true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        {renderTextContent()}\n        <div className=\"message-title\">\n          {renderSender()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { forwardInfo }): StateProps => {\n    const sender = forwardInfo.fromPeerId ? selectPeer(global, forwardInfo.fromPeerId) : undefined;\n    const story = forwardInfo.storyId && forwardInfo.fromPeerId\n      ? selectPeerStory(global, forwardInfo.fromPeerId, forwardInfo.storyId) : undefined;\n    return {\n      sender,\n      story,\n    };\n  },\n)(EmbeddedStoryForward));\n","import React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport calcTextLineHeightAndCount from '../../util/element/calcTextLineHeightAndCount';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport EmbeddedStoryForward from '../common/embedded/EmbeddedStoryForward';\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst LINES_TO_SHOW = 3;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n  const renderingStory = useCurrentOrPrev(story, true);\n\n  const caption = renderingStory?.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransitionDeprecated(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useLayoutEffect(() => {\n    requestMeasure(() => {\n      if (!showMoreButtonRef.current) {\n        return;\n      }\n\n      const button = showMoreButtonRef.current;\n\n      const { offsetWidth } = button;\n\n      requestMutation(() => {\n        button.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n      });\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      if (!contentRef.current || !textRef.current) {\n        return undefined;\n      }\n\n      const container = contentRef.current;\n      const textContainer = textRef.current;\n\n      const textOffsetTop = textContainer.offsetTop;\n      const { lineHeight, totalLines } = calcTextLineHeightAndCount(textContainer);\n      const isOverflowing = totalLines > LINES_TO_SHOW;\n      const overflowShift = textOffsetTop + lineHeight * LINES_TO_SHOW;\n\n      return () => {\n        if (isOverflowing) {\n          addExtraClass(container, styles.hasOverflow);\n          setHasOverflow(true);\n        }\n\n        container.style.setProperty('--_overflow-shift', `${overflowShift}px`);\n      };\n    });\n  }, [caption]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          {renderingStory?.forwardInfo && (\n            <EmbeddedStoryForward\n              forwardInfo={renderingStory.forwardInfo}\n              className={styles.forwardInfo}\n            />\n          )}\n          {renderingStory && (\n            <div ref={textRef} className={styles.captionText}>\n              <MessageText\n                messageOrStory={renderingStory}\n                withTranslucentThumbs\n                forcePlayback\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YVD19vOP\",\"viewInfo\":\"cknL5COh\",\"interactive\":\"pJAyeGkG\",\"avatars\":\"Vz_VtJ16\",\"spacer\":\"kKoeDk3Z\",\"reactionCount\":\"sf3u_6Vh\",\"reactionCountHeart\":\"Er2XKRqi\",\"footerItem\":\"vJRk_UUk\",\"views\":\"nIv3YAnZ\",\"viewIcon\":\"WyBiNM6e\",\"reactionButton\":\"lpDXVIuf\",\"reactionHeart\":\"twgMDT1y\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport {\n  getReactionKey, getStoryKey, isSameReaction, isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useOldLang();\n\n  const {\n    views, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const { viewsCount, forwardsCount, reactionsCount } = views || {};\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && isSameReaction(sentReaction, HEART_REACTION);\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = views && 'recentViewerIds' in views ? views.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [views]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n          className={styles.footerItem}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <>\n          {Boolean(forwardsCount) && (\n            <div className={styles.footerItem}>\n              <Button\n                round\n                color=\"translucent\"\n                size=\"smaller\"\n                nonInteractive\n                ariaLabel={lang('PublicShares')}\n              >\n                <Icon name=\"loop\" />\n              </Button>\n              <span>{forwardsCount}</span>\n            </div>\n          )}\n          <div className={styles.footerItem}>\n            <Button\n              round\n              className={styles.reactionButton}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleLikeStory}\n              ariaLabel={lang('AccDescrLike')}\n            >\n              {sentReaction && (\n                <ReactionAnimatedEmoji\n                  key={getReactionKey(sentReaction)}\n                  containerId={containerId}\n                  reaction={sentReaction}\n                  withEffectOnly={isSentStoryReactionHeart}\n                />\n              )}\n              {(!sentReaction || isSentStoryReactionHeart) && (\n                <Icon\n                  name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                  className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n                />\n              )}\n            </Button>\n            {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c1fbGgcx\",\"viewed\":\"xwOKghO2\",\"active\":\"ZuByYcIx\",\"inner\":\"qyBCpJct\",\"progress\":\"XY98E7VM\",\"paused\":\"n9V6B7hP\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMediaAreaChannelPost,\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../global/types';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { getSenderTitle, isChatChannel, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativeTime } from '../../util/dates/dateFormat';\nimport download from '../../util/download';\nimport { round } from '../../util/math';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_SAFARI } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\nimport { BASE_STORY_HEIGHT, BASE_STORY_WIDTH } from './helpers/dimensions';\nimport { PRIMARY_VIDEO_MIME, SECONDARY_VIDEO_MIME } from './helpers/videoFormats';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStreaming } from '../../hooks/useStreaming';\nimport useBackgroundMode from '../../hooks/window/useBackgroundMode';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport Transition from '../ui/Transition';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isReportModalOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  forwardSender?: ApiPeer;\n  fromPeer?: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  areChatSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n  withHeaderAnimation?: boolean;\n}\n\nconst VIDEO_MIN_READY_STATE = IS_SAFARI ? 4 : 3;\nconst SPACEBAR_CODE = 32;\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  forwardSender,\n  fromPeer,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  areChatSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  withHeaderAnimation,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryInProfile,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadChatSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n  const isChangelog = peerId === storyChangelogUserId;\n  const isUserStory = isUserId(peerId);\n  const isChatStory = !isUserStory;\n  const isChannelStory = isChatStory && isChatChannel(peer as ApiChat);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isInProfile : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isInProfile : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : (isLoadedStory && story.forwardInfo?.fromName);\n\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const duration = isLoadedStory && story.content.video?.duration\n    ? story.content.video.duration\n    : undefined;\n\n  const shouldShowComposer = !(isOut && isUserStory) && !isChangelog && !isChannelStory;\n  const shouldShowFooter = isLoadedStory && !shouldShowComposer && (isOut || isChannelStory);\n  const headerAnimation = isMobile && withHeaderAnimation ? 'slideFade' : 'none';\n\n  const {\n    shouldRender: shouldRenderSkeleton,\n    transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransitionDeprecated(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransitionDeprecated(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldShowComposer);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransitionDeprecated(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransitionDeprecated(true);\n  const {\n    shouldRender: shouldRenderCaption,\n    transitionClassNames: captionAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(hasText || hasForwardInfo);\n\n  const isStreamingSupported = useStreaming(videoRef, fullMediaData, PRIMARY_VIDEO_MIME);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !areChatSettingsLoaded) {\n      loadChatSettings({ chatId: peerId });\n    }\n  }, [areChatSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress({\n    onStart: handleLongPressStart,\n    onEnd: handleLongPressEnd,\n  });\n\n  const isUnsupported = useUnsupportedMedia(\n    videoRef,\n    undefined,\n    !isVideo || !fullMediaData || isStreamingSupported,\n  );\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => {\n    if (hasAllData && !isUnsupported) handlePlayStory();\n  }, [hasAllData, isUnsupported]);\n\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isLoadedStory || isDeletedStory || areViewsExpired) return;\n\n    if (!isOut && !isChannelStory) return;\n\n    // Refresh counters each time\n    loadStoryViews({ peerId, storyId });\n  }, [isDeletedStory, areViewsExpired, isLoadedStory, peerId, storyId, isOut, isChannelStory]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) {\n      return;\n    }\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleForwardPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: forwardSender!.id });\n  });\n\n  const handleFromPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: fromPeer!.id });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    openNextStory();\n  });\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      markStoryPlaying();\n    } else {\n      unmarkStoryPlaying();\n    }\n    if (duration && round(video.currentTime, 2) >= round(duration, 2)) {\n      handleOpenNextStory();\n    }\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getSenderTitle(lang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = lang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = lang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = lang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: lang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: lang('StealthModeOn'),\n        message: lang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: lang('StoryNotFound'),\n    });\n  }, [lang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={lang('AccDescrOpenMenu2')}\n        >\n          <i className={buildClassName('icon icon-more')} aria-hidden />\n        </Button>\n      );\n    };\n  }, [isMobile, lang]);\n\n  function renderStoriesTabs() {\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (!isUserStory) return undefined;\n\n    let privacyIcon = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <i className={`icon icon-${privacyIcon}`} aria-hidden />\n        {isOut && <i className=\"icon icon-next\" aria-hidden />}\n      </div>\n    );\n  }\n\n  function renderSenderInfo() {\n    return (\n      <div className={styles.senderInfo}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderMeta}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getSenderTitle(lang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {forwardSenderTitle && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.forwardHeader, forwardSender && styles.clickable,\n                )}\n                onClick={forwardSender ? handleForwardPeerClick : undefined}\n              >\n                <Icon name=\"loop\" />\n                <span className={styles.headerTitle}>\n                  {renderText(forwardSenderTitle)}\n                </span>\n              </span>\n            )}\n            {fromPeer && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.fromPeer,\n                )}\n                onClick={handleFromPeerClick}\n              >\n                <Avatar peer={fromPeer} size=\"micro\" />\n                <span className={styles.headerTitle}>\n                  {renderText(getSenderTitle(lang, fromPeer) || '')}\n                </span>\n              </span>\n            )}\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativeTime(lang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{lang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Transition activeKey={Number(peerId)} name={headerAnimation} className={styles.senderInfoTransition}>\n          {renderSenderInfo()}\n        </Transition>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={lang('Volume')}\n            >\n              <i\n                className={buildClassName(\n                  'icon',\n                  isMuted || noSound ? 'icon-speaker-muted-story' : 'icon-speaker-story',\n                )}\n                aria-hidden\n              />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{lang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>\n                {lang(isUserStory ? 'StorySave' : 'SaveToPosts')}\n              </MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>\n                {lang(isUserStory ? 'ArchiveStory' : 'RemoveFromPosts')}\n              </MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {lang('lng_media_download')}\n              </MenuItem>\n            )}\n            {!isOut && isUserStory && (\n              <MenuItem icon=\"eye-closed-outline\" onClick={handleOpenStealthModal}>\n                {lang('StealthMode')}\n              </MenuItem>\n            )}\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{lang('lng_report_story')}</MenuItem>}\n            {isOut && <MenuItem icon=\"delete\" destructive onClick={handleDeleteStoryClick}>{lang('Delete')}</MenuItem>}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className={buildClassName('icon icon-close')} aria-hidden />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            key={`preview-${storyId}`}\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, styles.mediaPreview, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            key={`video-${storyId}`}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            width={BASE_STORY_WIDTH}\n            height={BASE_STORY_HEIGHT}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            disableRemotePlayback\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={lang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={lang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay\n            key={`area-overlay-${storyId}-${peerId}`}\n            story={story}\n            isActive\n            isStoryPlaying={isDropdownMenuOpen}\n          />\n        )}\n        {!isMobile && (\n          <div className={styles.content}>\n            <div className={styles.contentInner}>\n              <Avatar\n                peer={peer}\n                withStory\n                storyViewerMode=\"disabled\"\n              />\n              <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={lang('Close')}\n        />\n      )}\n      {hasText && <div className={buildClassName(styles.captionGradient, captionAppearanceAnimationClassNames)} />}\n      {shouldRenderCaption && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={captionAppearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={lang(isChatStory ? 'ReplyToGroupStory' : 'ReplyPrivately')}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId,\n  storyId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n      storyList,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const isLoadedStory = story && 'content' in story;\n  const shouldForcePause = Boolean(\n    viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || isReportModalOpen || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal,\n  );\n\n  const forwardInfo = isLoadedStory ? story.forwardInfo : undefined;\n  const mediaAreas = isLoadedStory ? story.mediaAreas : undefined;\n  const forwardSenderId = forwardInfo?.fromPeerId\n    || mediaAreas?.find((area): area is ApiMediaAreaChannelPost => area.type === 'channelPost')?.channelId;\n  const forwardSender = forwardSenderId ? selectPeer(global, forwardSenderId) : undefined;\n  const withHeaderAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  const fromPeer = isLoadedStory && story.fromId ? selectPeer(global, story.fromId) : undefined;\n\n  return {\n    peer: (user || chat)!,\n    forwardSender,\n    fromPeer,\n    story,\n    orderedIds: storyList?.storyIdsByPeerId[peerId],\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    areChatSettingsLoaded: Boolean(chat?.settings),\n    stealthMode: global.stories.stealthMode,\n    withHeaderAnimation,\n  };\n})(Story));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, getStoryMediaHash } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n  storyIdsForViewer?: number[];\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, storyIdsForViewer, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useOldLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId && storyIdsForViewer?.includes(lastViewedId)\n      ? lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1)\n      : -1;\n    const resultId = byId[previewIndexId]?.id || storyIdsForViewer?.[0] || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories, storyIdsForViewer]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <div className={styles.contentInner}>\n          <Avatar\n            peer={peer}\n            withStory\n            storyViewerMode=\"disabled\"\n          />\n          <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n      storyList,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n    storyIdsForViewer: peer?.id ? storyList?.storyIdsByPeerId[peer.id] : undefined,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeer,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport { IS_IOS } from '../../util/windowEnvironment';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isReportModalOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePreviousDeprecated(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    if (!isMobile) return;\n\n    // If animation disabled, set rendering peer id to current peer\n    setRenderingPeerId(currentPeerId);\n  }, [currentPeerId, isMobile]);\n\n  // Handling the flipping of stories from a current user\n  useEffect(() => {\n    if (renderingPeerId === currentPeerId && currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n  }, [currentPeerId, currentStoryId, renderingPeerId, renderingStoryId]);\n\n  useEffect(() => {\n    if (isMobile) return undefined;\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n    }\n\n    return () => {\n      setIsAnimating(false);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, isMobile]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      withWheelDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${offsetY * (isMobile ? 1 : -1)}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, onClose, windowWidth, windowHeight, isMobile, renderingPeerId]);\n\n  useLayoutEffect(() => {\n    if (isMobile) return;\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n        current.style.setProperty('--slide-content-scale', String(slideSizes.toActiveScale));\n\n        return;\n      }\n\n      const getScale = () => {\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, slideSizes, isMobile]);\n\n  const handleTransitionEnd = useLastCallback((event: React.TransitionEvent<HTMLDivElement>) => {\n    // It is `target` that is needed here, not `currentTarget`\n    const target = event.target as HTMLDivElement | null;\n\n    if (!target || !target.classList.contains(styles.activeSlide)) return;\n\n    if (renderingPeerId !== currentPeerId) {\n      setRenderingPeerId(currentPeerId);\n      setRenderingStoryId(currentStoryId);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n    setIsAnimating(false);\n  });\n\n  if (isMobile) {\n    return (\n      <div className={styles.wrapper} ref={containerRef}>\n        <div\n          className={styles.mobileSlide}\n          ref={(ref) => setRef(ref, renderingPeerId!)}\n        >\n          <Story\n            peerId={renderingPeerId!}\n            storyId={renderingStoryId!}\n            onDelete={onDelete}\n            dimensions={slideSizes.activeSlide}\n            isPrivateStories={renderingIsPrivate}\n            isArchivedStories={renderingIsArchive}\n            isReportModalOpen={isReportModalOpen}\n            isDeleteModalOpen={isDeleteModalOpen}\n            isSingleStory={isSingleStory}\n            getIsAnimating={getIsAnimating}\n            onClose={onClose}\n            onReport={onReport}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = isMobile ? undefined : buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isReportModalOpen={isReportModalOpen}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n      onTransitionEnd={handleTransitionEnd}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive, storyList,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { active } } = global.stories;\n\n  return {\n    byPeerId,\n    peerIds: storyList?.peerIds ?? active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"gpDY8bos\",\"viewsList\":\"gpDY8bos\",\"views-list-loading\":\"vuRAfQ5v\",\"viewsListLoading\":\"vuRAfQ5v\",\"info\":\"AOSUIChK\",\"centeredInfo\":\"oGLhkkS7\",\"view-reaction\":\"MLaabS6n\",\"viewReaction\":\"MLaabS6n\",\"header\":\"d3N2bktu\",\"content\":\"QmRA3HZK\",\"top-button\":\"Dkv8GAxf\",\"topButton\":\"Dkv8GAxf\",\"contact-filter\":\"YpB_9VxE\",\"contactFilter\":\"YpB_9VxE\",\"selected\":\"DoUlpdZJ\",\"sort\":\"axDpgq9G\",\"sort-button\":\"Bm5VA66f\",\"sortButton\":\"Bm5VA66f\",\"icon-sort\":\"YVQiH93R\",\"iconSort\":\"YVQiH93R\",\"icon-down\":\"NXP9aMD0\",\"iconDown\":\"NXP9aMD0\",\"search\":\"QQQqBLK6\",\"bottom-info\":\"_CSv6suH\",\"bottomInfo\":\"_CSv6suH\",\"scrolled\":\"RYQ0liYe\",\"footer\":\"dUK7rP37\",\"closeButton\":\"abPzLiCH\",\"opacity-fade-in\":\"cX8oY3zb\",\"opacityFadeIn\":\"cX8oY3zb\",\"fadeIn\":\"Sx_aeh1o\",\"blocked\":\"L82sciL8\",\"check\":\"UqGBKwjg\",\"menuBubble\":\"dRqemuTA\",\"with-colored-status\":\"GQ96fta9\",\"withColoredStatus\":\"GQ96fta9\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiPeer, ApiTypeStoryView, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName, isUserId } from '../../global/helpers';\nimport { selectPeer } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiTypeStoryView;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\nconst BULLET = '\\u2022';\n\nconst StoryView = ({\n  storyView,\n  peer,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat,\n    closeStoryViewer,\n    unblockUser,\n    blockUser,\n    deleteContact,\n    updateStoryView,\n    focusMessage,\n    openStoryViewer,\n    closeStoryViewModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleClick = useLastCallback(() => {\n    const { type } = storyView;\n\n    if (type === 'repost') {\n      closeStoryViewModal();\n      openStoryViewer({\n        peerId: storyView.peerId,\n        storyId: storyView.storyId,\n      });\n      return;\n    }\n\n    closeStoryViewer();\n\n    setTimeout(() => {\n      if (type === 'user') {\n        openChat({ id: storyView.peerId });\n      } else if (type === 'forward') {\n        focusMessage({ chatId: storyView.peerId, messageId: storyView.messageId });\n      }\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    if (!isUserId(storyView.peerId)) return undefined;\n    const { peerId, areStoriesBlocked, isUserBlocked } = storyView;\n    const user = peer as ApiUser;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId: peerId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: false });\n          } else {\n            blockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, peer]);\n\n  const statusIcon: IconName = storyView.type === 'user' ? 'message-read'\n    : storyView.type === 'forward' ? 'forward' : 'loop';\n  const shouldColorStatus = storyView.type === 'forward' || storyView.type === 'repost';\n\n  const status = useMemo(() => {\n    const isModified = storyView.type === 'repost' && storyView.story.forwardInfo?.isModified;\n    const parts = [formatDateAtTime(lang, storyView.date * 1000)];\n    if (isModified) {\n      parts.push(lang('lng_edited'));\n    }\n\n    return parts.join(` ${BULLET} `);\n  }, [lang, storyView]);\n\n  return (\n    <ListItem\n      key={storyView.peerId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      onClick={handleClick}\n      rightElement={storyView.type === 'user' && storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      {isUserId(storyView.peerId) ? (\n        <PrivateChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          userId={storyView.peerId}\n          noStatusOrTyping\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n          forceShowSelf\n        />\n      ) : (\n        <GroupChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          chatId={storyView.peerId}\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const peer = selectPeer(global, storyView.peerId);\n\n  return {\n    peer,\n    availableReactions: global.reactions.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiTypeStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  views?: ApiTypeStoryView[];\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  views,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViewList, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const { viewsCount = 0, reactionsCount = 0 } = story?.views || {};\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViews = useMemo(() => {\n    return views?.sort(prepareComparator(areReactionsFirst));\n  }, [areReactionsFirst, views]);\n\n  const placeholderCount = !sortedViews?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViews?.length) && sortedViews!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViewList({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <i className={buildClassName(\n          'icon',\n          areReactionsFirst ? 'icon-heart-outline' : 'icon-recent',\n          styles.iconSort,\n        )}\n        />\n        <i className={buildClassName('icon icon-down', styles.iconDown)} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViews?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViews?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViews}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViews?.map((view) => {\n            const additionalKeyId = view.type === 'forward' ? view.messageId\n              : view.type === 'repost' ? view.storyId : 'user';\n            return (\n              <StoryView key={`${view.peerId}-${view.date}-${additionalKeyId}`} storyView={view} />\n            );\n          })}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiTypeStoryView, b: ApiTypeStoryView) => {\n    if (areReactionsFirst) {\n      const reactionA = a.type === 'user' && a.reaction;\n      const reactionB = b.type === 'user' && b.reaction;\n      if (reactionA && !reactionB) {\n        return -1;\n      }\n      if (!reactionA && reactionB) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, views, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    views,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.reactions.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  beginHeavyAnimation,\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor } = getActions();\n\n  const lang = useOldLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePreviousDeprecated(isOpen);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const prevPeerId = usePreviousDeprecated(peerId);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeReportModal();\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  }, []);\n\n  const handleCloseDeleteModal = useCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  }, []);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className={buildClassName('icon icon-close')} aria-hidden />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isReportModalOpen={isReportModalOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openReportModal}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        subject=\"story\"\n        peerId={peerId!}\n        storyId={storyId}\n      />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    },\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\n\nimport { PEER_PICKER_ITEM_HEIGHT_PX } from '../../../config';\nimport {\n  getCanPostInChat, getGroupStatus, getUserStatus, isUserOnline,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectTopics, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport useSelector from '../../../hooks/data/useSelector';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport TopicIcon from '../TopicIcon';\nimport PickerItem from './PickerItem';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\nconst ITEM_CLASS_NAME = 'ChatOrUserPicker-item';\nconst TOPIC_ITEM_HEIGHT_PX = 56;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const selectTopicsById = useLastCallback((global: GlobalState) => {\n    if (!forumId) {\n      return undefined;\n    }\n\n    return selectTopics(global, forumId);\n  });\n\n  const forumTopicsById = useSelector(selectTopicsById);\n\n  const [topicIds, topics] = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chat = chatsById[forumId!];\n\n    if (!chat || !forumTopicsById) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = forumTopicsById\n      ? Object.values(forumTopicsById).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chat, topic, undefined, chatFullInfoById[forumId!])\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : forumTopicsById;\n\n    return [Object.keys(result).map(Number), result];\n  }, [forumId, topicSearch, forumTopicsById]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatsById = getGlobal().chats.byId;\n\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById[chatId];\n      if (chat?.isForum) {\n        if (!forumTopicsById) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleClick = useLastCallback((chatId: string) => {\n    const chatsById = getGlobal().chats.byId;\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!forumTopicsById) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const renderChatItem = useCallback((id: string, index: number) => {\n    const global = getGlobal();\n    const peer = selectPeer(global, id);\n    if (!peer) {\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? peer.isSelf : undefined;\n\n    function getSubtitle() {\n      if (!peer) return undefined;\n      if (peer.id === currentUserId) return [lang('SavedMessagesInfo')];\n      if (isApiPeerChat(peer)) {\n        return [getGroupStatus(lang, peer)];\n      }\n\n      const userStatus = selectUserStatus(global, peer.id);\n      return [\n        getUserStatus(lang, peer, userStatus),\n        buildClassName(isUserOnline(peer, userStatus, true) && 'online'),\n      ];\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={ITEM_CLASS_NAME}\n        title={<FullNameTitle peer={peer} isSavedMessages={isSelf} />}\n        avatarElement={(\n          <Avatar\n            peer={peer}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        ripple\n        style={`top: ${(viewportOffset + index) * PEER_PICKER_ITEM_HEIGHT_PX}px;`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleClick(id)}\n      />\n    );\n  }, [currentUserId, lang, viewportOffset]);\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={(topicIds?.length || 0) * TOPIC_ITEM_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {!topicIds && <Loading />}\n          {topicIds?.map((topicId, i) => (\n            <PickerItem\n              key={`${forumId}_${topicId}`}\n              className={ITEM_CLASS_NAME}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onSelectChatOrUser(forumId!, topicId)}\n              style={`top: ${(viewportOffset + i) * TOPIC_ITEM_HEIGHT_PX}px;`}\n              avatarElement={(\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n              )}\n              title={renderText(topics[topicId].title)}\n            />\n          ))}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            itemSelector={`.${ITEM_CLASS_NAME}`}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * PEER_PICKER_ITEM_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map(renderChatItem)}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChatType } from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  getCanPostInChat,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { filterChatIdsByType } from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from './helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ChatOrUserPicker from './pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chatIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = chatsById[id];\n      const user = usersById[id];\n      if (user && isDeletedUser(user)) return false;\n\n      return chat && getCanPostInChat(chat, undefined, undefined, chatFullInfoById[id]);\n    });\n\n    const sorted = sortChatIds(\n      unique([\n        ...(currentUserId ? [currentUserId] : []),\n        ...filterChatsByName(lang, chatIds, chatsById, search, currentUserId),\n        ...(contactIds && filter.includes('users') ? filterUsersByName(contactIds, usersById, search) : []),\n      ]),\n      undefined,\n      priorityIds,\n      currentUserId,\n    );\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, lang, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      currentUserId={currentUserId}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ThreadId } from '../../types';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n  isForwarding?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n  isForwarding,\n}) => {\n  const {\n    openChatOrTopicWithReplyInDraft,\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingIsStory = usePreviousDeprecated(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      const chatId = recipientId;\n      const topicId = threadId ? Number(threadId) : undefined;\n      if (isForwarding) {\n        setForwardChatOrTopic({ chatId, topicId });\n      } else {\n        openChatOrTopicWithReplyInDraft({ chatId, topicId });\n      }\n    }\n  }, [currentUserId, isManyMessages, isStory, lang, isForwarding]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang(isForwarding ? 'ForwardTo' : 'ReplyToDialog')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  const isForwarding = (messageIds && messageIds.length > 0);\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n    isForwarding,\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\nimport type { ThreadId } from '../../types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError,\n} from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    sendMessage,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: pick(contactRequest, ['firstName', 'lastName', 'phoneNumber']),\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiContact) => {\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  const { dismissNotification } = getActions();\n\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map((notification) => (\n        <Notification\n          key={notification.localId}\n          title={notification.title\n            ? renderText(notification.title, ['simple_markdown', 'emoji', 'br', 'links']) : undefined}\n          action={notification.action}\n          actionText={notification.actionText}\n          className={notification.className}\n          duration={notification.duration}\n          icon={notification.icon}\n          cacheBreaker={notification.cacheBreaker}\n          message={renderText(notification.message, ['simple_markdown', 'emoji', 'br', 'links'])}\n          shouldDisableClickDismiss={notification.disableClickDismiss}\n          dismissAction={notification.dismissAction}\n          shouldShowTimer={notification.shouldShowTimer}\n          // eslint-disable-next-line react/jsx-no-bind\n          onDismiss={() => dismissNotification({ localId: notification.localId })}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/ensureProtocol';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    window.open(ensureProtocol(url), '_blank', 'noopener');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlAlert2', renderingUrl), ['links'])}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VJDwJpsF\",\"buttons\":\"aYO2C2Hx\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { prepareMapUrl } from '../../../util/map';\nimport { IS_IOS, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['mapModal'];\n};\n\nconst OpenMapModal = ({ modal }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const { point: geoPoint, zoom } = modal || {};\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          OpenStreetMap\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkbox\":\"eha3Z6eU\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nimport styles from './UrlAuthModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['urlAuth'];\n};\n\ntype StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst UrlAuthModal: FC<OwnProps & StateProps> = ({\n  modal, currentUser,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(modal, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    if (modal?.url && isLoginChecked) {\n      const acceptAction = modal.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else {\n      window.open(ensureProtocol(currentAuth?.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    modal, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(modal?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, getUserFullName(currentUser)]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    return {\n      currentUser,\n    };\n  },\n)(UrlAuthModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { LangFn } from '../../hooks/useOldLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dates/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useOldLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  const isDisabled = (isFutureMode && selectedDate.getTime() < minDate.getTime())\n    || (isPastMode && selectedDate.getTime() > maxDate.getTime());\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    if (isFutureMode && selectedDate < minDate) {\n      onSubmit(minDate);\n    } else if (isPastMode && selectedDate > maxDate) {\n      onSubmit(maxDate);\n    } else {\n      onSubmit(selectedDate);\n    }\n  }, [isFutureMode, isPastMode, minDate, maxDate, onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <i className=\"icon icon-previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <i className=\"icon icon-next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <div className=\"footer\">\n          <Button\n            onClick={handleSubmit}\n            disabled={isDisabled}\n          >\n            {submitLabel}\n          </Button>\n          {secondButtonLabel && (\n            <Button onClick={onSecondButtonClick} isText>\n              {secondButtonLabel}\n            </Button>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: LangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.getTime() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useOldLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useOldLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import type { RefObject } from 'react';\nimport { useEffect, useSignal, useState } from '../lib/teact/teact';\n\nimport buildStyle from '../util/buildStyle';\nimport { captureEvents } from '../util/captureEvents';\nimport useFlag from './useFlag';\nimport useLastCallback from './useLastCallback';\n\nexport interface Size {\n  width: number;\n  height: number;\n}\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nlet resizeTimeout: number | undefined;\n\nexport default function useDraggable(\n  ref: RefObject<HTMLElement>,\n  dragHandleElementRef: RefObject<HTMLElement>,\n  isEnabled: boolean = true,\n  originalSize: Size,\n) {\n  const [elementCurrentPosition, setElementCurrentPosition] = useState<Point | undefined>(undefined);\n  const [elementCurrentSize, setElementCurrentSize] = useState<Size | undefined>(undefined);\n\n  const [getElementPositionOnStartDrag, setElementPositionOnStartDrag] = useSignal({ x: 0, y: 0 });\n  const [getDragStartPoint, setDragStartPoint] = useSignal({ x: 0, y: 0 });\n\n  const elementPositionOnStartDrag = getElementPositionOnStartDrag();\n  const dragStartPoint = getDragStartPoint();\n\n  const element = ref.current;\n  const dragHandleElement = dragHandleElementRef.current;\n\n  const [isInitiated, setIsInitiated] = useFlag(false);\n  const [wasElementShown, setWasElementShown] = useFlag(false);\n  const [isDragging, startDragging, stopDragging] = useFlag(false);\n  const [isWindowsResizing, startWindowResizing, stopWindowResizing] = useFlag(false);\n\n  function getVisibleArea() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n  }\n\n  const getCenteredPosition = useLastCallback(() => {\n    if (!elementCurrentSize) return undefined;\n    const { width, height } = elementCurrentSize;\n\n    const visibleArea = getVisibleArea();\n    const viewportWidth = visibleArea.width;\n    const viewportHeight = visibleArea.height;\n\n    const centeredX = (viewportWidth - width) / 2;\n    const centeredY = (viewportHeight - height) / 2;\n\n    return { x: centeredX, y: centeredY };\n  });\n\n  useEffect(() => {\n    if (element) setWasElementShown();\n  }, [element]);\n\n  useEffect(() => {\n    if (!isInitiated && elementCurrentSize) {\n      const centeredPosition = getCenteredPosition();\n      if (!centeredPosition) return;\n\n      setElementCurrentPosition({ x: centeredPosition.x, y: centeredPosition.y });\n      setIsInitiated();\n    }\n  }, [elementCurrentSize, isInitiated, element]);\n\n  const handleStartDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    const targetElement = event.target as HTMLElement;\n    if (targetElement.closest('.no-drag') || !element) {\n      return;\n    }\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const { left, top } = element.getBoundingClientRect();\n    setElementPositionOnStartDrag({ x: left, y: top });\n    setDragStartPoint({ x: pageX, y: pageY });\n\n    startDragging();\n  });\n\n  const handleRelease = useLastCallback(() => {\n    stopDragging();\n  });\n\n  useEffect(() => {\n    if (!isEnabled) {\n      stopDragging();\n    }\n  }, [isEnabled]);\n\n  const ensurePositionInVisibleArea = (x: number, y: number) => {\n    const visibleArea = getVisibleArea();\n\n    const visibleAreaWidth = visibleArea.width;\n    const visibleAreaHeight = visibleArea.height;\n\n    const componentWidth = elementCurrentSize!.width;\n    const componentHeight = elementCurrentSize!.height;\n\n    let newX = x;\n    let newY = y;\n\n    if (newX < 0) newX = 0;\n    if (newY < 0) newY = 0;\n    if (newX + componentWidth > visibleAreaWidth) newX = visibleAreaWidth - componentWidth;\n    if (newY + componentHeight > visibleAreaHeight) newY = visibleAreaHeight - componentHeight;\n\n    return { x: newX, y: newY };\n  };\n\n  const adjustPositionWithinBounds = useLastCallback(() => {\n    const position = !wasElementShown ? getCenteredPosition() : elementCurrentPosition;\n    if (!elementCurrentSize || !position) return;\n    const newPosition = ensurePositionInVisibleArea(position.x, position.y);\n    setElementCurrentPosition(newPosition);\n  });\n\n  const ensureSizeInVisibleArea = useLastCallback((sizeForCheck: Size) => {\n    const newSize = sizeForCheck;\n\n    const visibleArea = getVisibleArea();\n\n    newSize.width = Math.min(visibleArea.width, Math.max(originalSize.width, newSize.width));\n    newSize.height = Math.min(visibleArea.height, Math.max(originalSize.height, newSize.height));\n\n    return newSize;\n  });\n\n  useEffect(() => {\n    const newSize = ensureSizeInVisibleArea({ width: originalSize.width, height: originalSize.height });\n    if (newSize) setElementCurrentSize(newSize);\n  }, [originalSize]);\n\n  const adjustSizeWithinBounds = useLastCallback(() => {\n    if (!elementCurrentSize) return;\n    const newSize = ensureSizeInVisibleArea(elementCurrentSize);\n    if (newSize) setElementCurrentSize(newSize);\n  });\n\n  useEffect(() => {\n    adjustPositionWithinBounds();\n  }, [elementCurrentSize]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      startWindowResizing();\n      adjustSizeWithinBounds();\n      adjustPositionWithinBounds();\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = undefined;\n      }\n      resizeTimeout = window.setTimeout(() => {\n        resizeTimeout = undefined;\n        stopWindowResizing();\n      }, 250);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      clearTimeout(resizeTimeout);\n      resizeTimeout = undefined;\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [adjustPositionWithinBounds]);\n\n  const handleDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isDragging || !element) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const offsetX = pageX - dragStartPoint.x;\n    const offsetY = pageY - dragStartPoint.y;\n\n    const newX = elementPositionOnStartDrag.x + offsetX;\n    const newY = elementPositionOnStartDrag.y + offsetY;\n\n    if (elementCurrentSize) setElementCurrentPosition(ensurePositionInVisibleArea(newX, newY));\n  });\n\n  useEffect(() => {\n    let cleanup: NoneToVoidFunction | undefined;\n    if (dragHandleElement && isEnabled) {\n      cleanup = captureEvents(dragHandleElement, {\n        onCapture: handleStartDrag,\n        onDrag: handleDrag,\n        onRelease: handleRelease,\n        onClick: handleRelease,\n        onDoubleClick: handleRelease,\n      });\n    }\n    return cleanup;\n  }, [handleDrag, handleStartDrag, isEnabled, dragHandleElement]);\n\n  const cursorStyle = isDragging ? 'cursor: grabbing !important; ' : '';\n\n  if (!isInitiated || !elementCurrentSize || !elementCurrentPosition) {\n    return {\n      isDragging: false,\n      style: cursorStyle,\n    };\n  }\n\n  const style = buildStyle(\n    `left: ${elementCurrentPosition.x}px;`,\n    `top: ${elementCurrentPosition.y}px;`,\n    `width: ${elementCurrentSize.width}px;`,\n    `height: ${elementCurrentSize.height}px;`,\n    'position: fixed;',\n    (isDragging || isWindowsResizing) && 'transition: none !important;',\n    cursorStyle,\n  );\n\n  return {\n    position: elementCurrentPosition,\n    size: elementCurrentSize,\n    isDragging,\n    style,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kUZmBlnN\",\"window-state-button\":\"Rax9j_TK\",\"windowStateButton\":\"Rax9j_TK\",\"button\":\"SMRJmUuE\",\"avatars\":\"GP17QhNN\",\"state-icon\":\"sdbTXCxq\",\"stateIcon\":\"sdbTXCxq\",\"icon\":\"P0P4gW6a\",\"title\":\"TZFjRaG4\"};","import React, {\n  memo, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { WebApp } from '../../../global/types';\n\nimport { selectTabState, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MinimizedWebAppModal.module.scss';\n\ntype StateProps = {\n  activeTabBot?: ApiUser;\n  isMinimizedState?: boolean;\n  openedWebApps?: Record<string, WebApp>;\n};\n\nconst MinimizedWebAppModal = ({\n  activeTabBot, isMinimizedState, openedWebApps,\n}: StateProps) => {\n  const {\n    changeWebAppModalState,\n    closeWebAppModal,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const openedWebAppsValues = useMemo(() => {\n    return openedWebApps && Object.values(openedWebApps);\n  }, [openedWebApps]);\n\n  const openedTabsCount = openedWebAppsValues?.length;\n\n  const peers = useMemo(() => {\n    if (!openedTabsCount) return [];\n\n    const global = getGlobal();\n    const activeTabBotId = activeTabBot?.id;\n    const openedApps = unique([activeTabBotId, ...openedWebAppsValues.map((app) => app.botId)]);\n    const bots = openedApps.map((id) => id && selectUser(global, id)).filter(Boolean).slice(0, 3);\n    return bots;\n  }, [openedTabsCount, activeTabBot, openedWebAppsValues]);\n\n  const handleCloseClick = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleExpandClick = useLastCallback(() => {\n    changeWebAppModalState();\n  });\n\n  if (!isMinimizedState) return undefined;\n\n  function renderTitle() {\n    const activeTabName = activeTabBot?.firstName;\n    const title = openedTabsCount && activeTabName && openedTabsCount > 1\n      ? `${lang('MiniAppsMoreTabs',\n        {\n          botName: activeTabName,\n          count: openedTabsCount - 1,\n        })}`\n      : activeTabName;\n\n    return (\n      <div className={styles.title}>\n        {title}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n      )}\n    >\n      <Button\n        className={styles.button}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        ariaLabel={oldLang('Close')}\n        onClick={handleCloseClick}\n      >\n        <Icon className={styles.icon} name=\"close\" />\n      </Button>\n      <AvatarList className={styles.avatars} size=\"mini\" peers={peers} />\n      {renderTitle()}\n      <Button\n        className={buildClassName(\n          styles.windowStateButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleExpandClick}\n      >\n        <Icon className={styles.stateIcon} name=\"expand-modal\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const webApps = tabState.webApps;\n\n    const { botId } = webApps?.activeWebApp || {};\n    const { modalState, openedWebApps } = webApps || {};\n    const isMinimizedState = modalState === 'minimized';\n    const activeTabBot = botId ? selectUser(global, botId) : undefined;\n\n    return {\n      activeTabBot,\n      isMinimizedState,\n      openedWebApps,\n    };\n  },\n)(MinimizedWebAppModal));\n","import { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebApp } from '../../../../global/types';\nimport type { WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst RELOAD_TIMEOUT = 500;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  webApp?: WebApp,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n  } = getActions();\n\n  const isReloadSupported = useRef<boolean>(false);\n  const reloadTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const forceReloadFrame = useLastCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  });\n\n  const reloadFrame = useCallback((url: string) => {\n    if (isReloadSupported.current) {\n      sendEvent({\n        eventType: 'reload_iframe',\n      });\n      reloadTimeout.current = setTimeout(() => {\n        forceReloadFrame(url);\n      }, RELOAD_TIMEOUT);\n      return;\n    }\n\n    forceReloadFrame(url);\n  }, [sendEvent]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n    const contentWindow = ref.current?.contentWindow;\n    const sourceWindow = event.source as Window;\n\n    if (contentWindow !== sourceWindow) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        if (webApp) closeWebApp({ webApp, skipClosingConfirmation: true });\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n        isReloadSupported.current = Boolean(eventData.reload_supported);\n      }\n\n      if (eventType === 'iframe_will_reload') {\n        clearTimeout(reloadTimeout.current);\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n\n        // showNotification({\n        //   message: 'Clipboard access is not supported in this client yet',\n        // });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          type: 'slug',\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      if (eventType === 'web_app_biometry_get_info') {\n        sendEvent({\n          eventType: 'biometry_info_received',\n          eventData: {\n            available: false,\n          },\n        });\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [\n    isSimpleView, sendEvent, onEvent, sendCustomStyle, webApp,\n    sendTheme, sendViewport, onLoad, windowSize.isResizing, ref,\n  ]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, windowSize]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage, ref]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, sendViewport, ref]);\n\n  return {\n    sendEvent, reloadFrame, sendViewport, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LeeJZdwH\",\"multi-tab\":\"ESsGT5OD\",\"multiTab\":\"ESsGT5OD\",\"loading-spinner\":\"ix5_w9MK\",\"loadingSpinner\":\"ix5_w9MK\",\"hide\":\"Wrl63uWL\",\"frame\":\"OmY14FFl\",\"with-button\":\"liDRl1xT\",\"withButton\":\"liDRl1xT\",\"hidden\":\"vOFiAq3l\",\"main-button\":\"U_ggDKn1\",\"mainButton\":\"U_ggDKn1\",\"visible\":\"KwI4XdkC\",\"main-button-spinner\":\"oq6HKJur\",\"mainButtonSpinner\":\"oq6HKJur\",\"web-app-popup\":\"YEOURXza\",\"webAppPopup\":\"YEOURXza\",\"without-title\":\"gvljUzY9\",\"withoutTitle\":\"gvljUzY9\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState, WebApp } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport type { PopupOptions, WebAppInboundEvent, WebAppOutboundEvent } from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectCurrentChat, selectTabState, selectTheme, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\n\nimport styles from './WebAppModalTabContent.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n  webApp?: WebApp;\n  registerSendEventCallback: (callback: (event: WebAppOutboundEvent) => void) => void;\n  registerReloadFrameCallback: (callback: (url: string) => void) => void;\n  isDragging?: boolean;\n  frameSize?: { width: number; height: number };\n  isMultiTabSupported? : boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n  isMaximizedState: boolean;\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst ANIMATION_WAIT = 400;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModalTabContent: FC<OwnProps & StateProps> = ({\n  modal,\n  webApp,\n  bot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n  registerSendEventCallback,\n  registerReloadFrameCallback,\n  isDragging,\n  isMaximizedState,\n  frameSize,\n  isMultiTabSupported,\n}) => {\n  const {\n    closeActiveWebApp,\n    sendWebViewData,\n    toggleAttachBot,\n    openTelegramLink,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n    updateWebApp,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequestingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  const activeWebApp = modal?.activeWebApp;\n  const {\n    url, buttonText, headerColor, serverHeaderColorKey, serverHeaderColor,\n  } = webApp || {};\n  const isCloseModalOpen = Boolean(webApp?.isCloseModalOpen);\n  const isRemoveModalOpen = Boolean(webApp?.isRemoveModalOpen);\n\n  const webAppKey = webApp && getWebAppKey(webApp);\n  const activeWebAppKey = activeWebApp && getWebAppKey(activeWebApp);\n\n  const isActive = (activeWebApp && webApp) && activeWebAppKey === webAppKey;\n\n  const updateCurrentWebApp = useLastCallback((updatedPartialWebApp: Partial<WebApp>) => {\n    if (!webApp) return;\n    const updatedWebApp = {\n      ...webApp,\n      ...updatedPartialWebApp,\n    };\n    webApp = updatedWebApp;\n    updateWebApp({ webApp: updatedWebApp });\n  });\n\n  useEffect(() => {\n    const themeParams = extractCurrentThemeParams();\n    updateCurrentWebApp({ headerColor: themeParams.bg_color, backgroundColor: themeParams.bg_color });\n  }, []);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const lang = useOldLang();\n  const isOpen = modal?.isModalOpen || false;\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendViewport, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isSimple, handleEvent, webApp, markLoaded);\n\n  useEffect(() => {\n    if (isActive) registerSendEventCallback(sendEvent);\n  }, [sendEvent, registerSendEventCallback, isActive]);\n\n  useEffect(() => {\n    if (isActive) registerReloadFrameCallback(reloadFrame);\n  }, [reloadFrame, registerReloadFrameCallback, isActive]);\n\n  const shouldShowMainButton = mainButton?.isVisible && mainButton.text.trim().length > 0;\n\n  const handleHideCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ isCloseModalOpen: false });\n  });\n  const handleConfirmCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ shouldConfirmClosing: false, isCloseModalOpen: false });\n    setTimeout(() => {\n      closeActiveWebApp();\n    }, ANIMATION_WAIT);\n  });\n\n  const handleHideRemoveModal = useLastCallback(() => {\n    updateCurrentWebApp({ isRemoveModalOpen: false });\n  });\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  const calculateHeaderColor = useLastCallback(\n    (serverColorKey? : 'bg_color' | 'secondary_bg_color', serverColor? : string) => {\n      if (serverColorKey) {\n        const themeParams = extractCurrentThemeParams();\n        const key = serverColorKey;\n        const newColor = themeParams[key];\n        const color = validateHexColor(newColor) ? newColor : headerColor;\n        updateCurrentWebApp({ headerColor: color, serverHeaderColorKey: key });\n      }\n\n      if (serverColor) {\n        const color = validateHexColor(serverColor) ? serverColor : headerColor;\n        updateCurrentWebApp({ headerColor: color, serverHeaderColor: serverColor });\n      }\n    },\n  );\n\n  const updateHeaderColor = useLastCallback(\n    () => {\n      calculateHeaderColor(serverHeaderColorKey, serverHeaderColor);\n    },\n  );\n\n  const sendThemeCallback = useLastCallback(() => {\n    sendTheme();\n    updateHeaderColor();\n  });\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendThemeCallback();\n    }, ANIMATION_WAIT);\n  }, [theme]);\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n    }, ANIMATION_WAIT);\n  }, [mainButton?.isVisible, sendViewport]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (webApp?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: webApp.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, webApp?.slug]);\n\n  const handleRemoveAttachBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: false,\n    });\n    closeActiveWebApp();\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    const result = await callApi('allowBotSendMessages', { bot: bot! });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot: bot!,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  useEffect(() => {\n    if (!isOpen) {\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      updateCurrentWebApp({\n        isSettingsButtonVisible: false,\n        shouldConfirmClosing: false,\n        isBackButtonVisible: false,\n        isCloseModalOpen: false,\n        isRemoveModalOpen: false,\n      });\n      markUnloaded();\n    }\n  }, [isOpen]);\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n    if (eventType === 'web_app_open_tg_link' && !isPaymentModalOpen) {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl });\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      updateCurrentWebApp({ isBackButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_setup_settings_button') {\n      updateCurrentWebApp({ isSettingsButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.bg_color;\n      updateCurrentWebApp({ backgroundColor: color });\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      calculateHeaderColor(eventData.color_key, eventData.color);\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeActiveWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.button_color;\n      const textColor = validateHexColor(eventData.text_color) ? eventData.text_color : themeParams.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text || '',\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      updateCurrentWebApp({ shouldConfirmClosing: true });\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n      || eventData.buttons.length > 3 || isRequestingPhone || isRequestingWriteAccess\n      || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequestingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n  }\n\n  const prevMainButtonColor = usePreviousDeprecated(mainButton?.color, true);\n  const prevMainButtonTextColor = usePreviousDeprecated(mainButton?.textColor, true);\n  const prevMainButtonIsActive = usePreviousDeprecated(mainButton && Boolean(mainButton.isActive), true);\n  const prevMainButtonText = usePreviousDeprecated(mainButton?.text, true);\n\n  const mainButtonCurrentColor = mainButton?.color || prevMainButtonColor;\n  const mainButtonCurrentTextColor = mainButton?.textColor || prevMainButtonTextColor;\n  const mainButtonCurrentIsActive = mainButton?.isActive !== undefined ? mainButton.isActive : prevMainButtonIsActive;\n  const mainButtonCurrentText = mainButton?.text || prevMainButtonText;\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideButton, setShouldHideButton] = useState(true);\n\n  const buttonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (buttonChangeTimeout.current) clearTimeout(buttonChangeTimeout.current);\n    if (!shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldHideButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    } else {\n      setShouldHideButton(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowMainButton]);\n\n  const frameWidth = frameSize?.width || 0;\n  let frameHeight = frameSize?.height || 0;\n  if (shouldDecreaseWebFrameSize) { frameHeight -= 3.5 * REM; }\n  const frameStyle = buildStyle(\n    `left: ${0}px;`,\n    `top: ${0}px;`,\n    `width: ${frameWidth}px;`,\n    `height: ${frameHeight}px;`,\n    isDragging ? 'pointer-events: none;' : '',\n  );\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        !isActive && styles.hidden,\n        isMultiTabSupported && styles.multiTab,\n      )}\n    >\n      {isMaximizedState && <Spinner className={buildClassName(styles.loadingSpinner, isLoaded && styles.hide)} />}\n      <iframe\n        className={buildClassName(\n          styles.frame,\n          shouldDecreaseWebFrameSize && styles.withButton,\n          !isLoaded && styles.hide,\n        )}\n        style={frameSize ? frameStyle : undefined}\n        src={url}\n        title={`${bot?.firstName} Web App`}\n        sandbox={SANDBOX_ATTRIBUTES}\n        allow=\"camera; microphone; geolocation;\"\n        allowFullScreen\n        ref={frameRef}\n      />\n      {isMaximizedState && (\n        <Button\n          className={buildClassName(\n            styles.mainButton,\n            shouldShowMainButton && styles.visible,\n            shouldHideButton && styles.hidden,\n          )}\n          style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n          disabled={!mainButtonCurrentIsActive}\n          onClick={handleMainButtonClick}\n        >\n          {mainButtonCurrentText}\n          {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n        </Button>\n      ) }\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={lang('ShareYouPhoneNumberTitle')}\n        text={lang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={lang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequestingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={lang('lng_bot_allow_write_title')}\n        text={lang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={lang('lng_bot_allow_write_confirm')}\n      />\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || lang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={handleHideCloseModal}\n        title={lang('lng_bot_close_warning_title')}\n        text={lang('lng_bot_close_warning')}\n        confirmHandler={handleConfirmCloseModal}\n        confirmIsDestructive\n        confirmLabel={lang('lng_bot_close_warning_sure')}\n      />\n      <ConfirmDialog\n        isOpen={isRemoveModalOpen}\n        onClose={handleHideRemoveModal}\n        title={lang('BotRemoveFromMenuTitle')}\n        textParts={renderText(lang('BotRemoveFromMenu', bot?.firstName), ['simple_markdown'])}\n        confirmHandler={handleRemoveAttachBot}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { botId: activeBotId } = modal?.activeWebApp || {};\n    const isMaximizedState = modal?.modalState === 'maximized';\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status } = selectTabState(global).payment;\n    const { isStarPaymentModalOpen } = selectTabState(global);\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      isPaymentModalOpen: isPaymentModalOpen || isStarPaymentModalOpen,\n      paymentStatus: status,\n      isMaximizedState,\n    };\n  },\n)(WebAppModalTabContent));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"XWfkIDLY\",\"multi-tab\":\"gBVR7Hec\",\"multiTab\":\"gBVR7Hec\",\"close-icon\":\"RuJ3d9N6\",\"closeIcon\":\"RuJ3d9N6\",\"minimized\":\"dJ1Ld_PX\",\"tabs\":\"X18WbDa5\",\"tab-button-wrapper\":\"oHX2d8Or\",\"tabButtonWrapper\":\"oHX2d8Or\",\"tab-button\":\"O4NxErFX\",\"tabButton\":\"O4NxErFX\",\"tab-right-mask\":\"dgdyQDsZ\",\"tabRightMask\":\"dgdyQDsZ\",\"tab-close-button\":\"xGefqS93\",\"tabCloseButton\":\"xGefqS93\",\"tab-button-curve-path\":\"bOuMHiVw\",\"tabButtonCurvePath\":\"bOuMHiVw\",\"tab-button-left-curve\":\"f7EicoVH\",\"tabButtonLeftCurve\":\"f7EicoVH\",\"tab-button-right-curve\":\"s6pBIYMI\",\"tabButtonRightCurve\":\"s6pBIYMI\",\"avatar-container\":\"z39ojrWc\",\"avatarContainer\":\"z39ojrWc\",\"web-app-tab-more-menu\":\"txS0KiU0\",\"webAppTabMoreMenu\":\"txS0KiU0\",\"more-button\":\"kKPD09tc\",\"moreButton\":\"kKPD09tc\",\"tab-more-button\":\"gkji2_RB\",\"tabMoreButton\":\"gkji2_RB\",\"window-state-button\":\"XpHR_yo0\",\"windowStateButton\":\"XpHR_yo0\",\"header-button\":\"GE5AkJOU\",\"headerButton\":\"GE5AkJOU\",\"tab-close-icon\":\"DoeOewUR\",\"tabCloseIcon\":\"DoeOewUR\",\"state-icon\":\"YRMGpqUS\",\"stateIcon\":\"YRMGpqUS\",\"icon\":\"b13oE9uA\",\"tab-avatar\":\"tI6TE6HP\",\"tabAvatar\":\"tI6TE6HP\",\"state-back\":\"IWA50OWU\",\"stateBack\":\"IWA50OWU\",\"loading-spinner\":\"ZvO65ZK4\",\"loadingSpinner\":\"ZvO65ZK4\",\"hide\":\"_90e04Jo\",\"frame\":\"zA1w1IOq\",\"with-button\":\"XsPaFD9G\",\"withButton\":\"XsPaFD9G\",\"main-button\":\"Os96PEjQ\",\"mainButton\":\"Os96PEjQ\",\"visible\":\"C8aMayAw\",\"hidden\":\"GllU9an9\",\"main-button-spinner\":\"nYSFrf_X\",\"mainButtonSpinner\":\"nYSFrf_X\",\"web-app-popup\":\"cTVKrIjM\",\"webAppPopup\":\"cTVKrIjM\",\"without-title\":\"d0DG1SkF\",\"withoutTitle\":\"d0DG1SkF\"};","import { type MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo, useRef,\n  useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState, WebApp } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport type { WebAppOutboundEvent } from '../../../types/webapp';\n\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectCurrentChat, selectTabState, selectTheme, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDraggable from '../../../hooks/useDraggable';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport MinimizedWebAppModal from './MinimizedWebAppModal';\nimport WebAppModalTabContent from './WebAppModalTabContent';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppModalTab = {\n  bot?: ApiUser;\n  webApp: WebApp;\n  isOpen: boolean;\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n};\n\nconst PROLONG_INTERVAL = 45000; // 45s\nconst LUMA_THRESHOLD = 128;\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n  bot,\n  attachBot,\n  theme,\n}) => {\n  const {\n    closeActiveWebApp,\n    closeWebAppModal,\n    prolongWebView,\n    toggleAttachBot,\n    openChat,\n    changeWebAppModalState,\n    openWebAppTab,\n    updateWebApp,\n  } = getActions();\n\n  const maximizedStateSize = useMemo(() => {\n    return { width: 420, height: 730 };\n  }, []);\n  const minimizedStateSize = useMemo(() => {\n    return { width: 300, height: 40 };\n  }, []);\n  const [getFrameSize, setFrameSize] = useSignal(\n    { width: maximizedStateSize.width, height: maximizedStateSize.height - minimizedStateSize.height },\n  );\n\n  function getSize() {\n    return modal?.modalState === 'maximized' ? maximizedStateSize : minimizedStateSize;\n  }\n\n  const {\n    openedWebApps, activeWebApp, openedOrderedKeys, sessionKeys,\n  } = modal || {};\n  const {\n    isBackButtonVisible, headerColor, backgroundColor, isSettingsButtonVisible,\n  } = activeWebApp || {};\n\n  const tabs = useMemo(() => {\n    return openedOrderedKeys?.map((key) => {\n      const webApp = openedWebApps![key];\n      return {\n        bot: getGlobal().users.byId[webApp.botId],\n        webApp,\n        isOpen: Boolean(activeWebApp && (key === getWebAppKey(activeWebApp))),\n      };\n    });\n  }, [openedOrderedKeys, openedWebApps, activeWebApp]);\n\n  const { isMobile } = useAppLayout();\n  const isOpen = modal?.isModalOpen || false;\n  const isMaximizedState = modal?.modalState === 'maximized';\n\n  const supportMultiTabMode = !isMobile;\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const getTriggerElement = useLastCallback(() => ref.current!);\n\n  const getRootElement = useLastCallback(\n    () => ref.current!,\n  );\n\n  const getMenuElement = useLastCallback(\n    () => menuRef.current!,\n  );\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const [isDraggingEnabled, setIsDraggingEnabled] = useState(false);\n\n  const headerElement = headerRef.current;\n  const containerElement = ref.current;\n\n  useEffect(() => {\n    setIsDraggingEnabled(Boolean(supportMultiTabMode && headerElement && containerElement));\n  }, [supportMultiTabMode, headerElement, containerElement]);\n\n  const {\n    isDragging,\n    style: draggableStyle,\n    size,\n  } = useDraggable(ref, headerRef, isDraggingEnabled, getSize());\n\n  const currentSize = size || getSize();\n\n  const currentWidth = currentSize.width;\n  const currentHeight = currentSize.height;\n  useEffect(() => {\n    if (currentHeight === minimizedStateSize.height && currentWidth === minimizedStateSize.width) return;\n    if (isMaximizedState) {\n      const height = currentHeight - minimizedStateSize.height;\n      setFrameSize({ width: currentWidth, height });\n    }\n  }, [currentWidth, currentHeight, isMaximizedState, minimizedStateSize, setFrameSize]);\n\n  const lang = useOldLang();\n  const {\n    queryId,\n  } = activeWebApp || {};\n\n  const openTabsCount = openedWebApps ? Object.values(openedWebApps).length : 0;\n\n  useInterval(() => {\n    if (!openedWebApps) return;\n    Object.keys(openedWebApps).forEach((key) => {\n      const webApp = openedWebApps[key];\n      if (webApp.queryId) {\n        prolongWebView({\n          botId: webApp.botId,\n          queryId: webApp.queryId,\n          peerId: webApp.peerId || chat!.id,\n          replyInfo: webApp.replyInfo,\n        });\n      }\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  // eslint-disable-next-line no-null/no-null\n  const sendEventCallback = useRef<((event: WebAppOutboundEvent) => void) | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const reloadFrameCallback = useRef<((url: string) => void) | null>(null);\n\n  const registerSendEventCallback = useLastCallback((callback: (event: WebAppOutboundEvent) => void) => {\n    sendEventCallback.current = callback;\n  });\n\n  const sendEvent = useLastCallback((event: WebAppOutboundEvent) => {\n    if (sendEventCallback.current) {\n      sendEventCallback.current(event);\n    }\n  });\n\n  const registerReloadFrameCallback = useLastCallback((callback: (url: string) => void) => {\n    reloadFrameCallback.current = callback;\n  });\n\n  const reloadFrame = useLastCallback((url: string) => {\n    if (reloadFrameCallback.current) {\n      reloadFrameCallback.current(url);\n    }\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(activeWebApp!.url);\n  });\n\n  const handleModalClose = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleTabClose = useLastCallback(() => {\n    if (openTabsCount > 1) {\n      closeActiveWebApp();\n    } else {\n      closeWebAppModal();\n    }\n  });\n\n  const handleToggleClick = useLastCallback(() => {\n    if (attachBot) {\n      updateWebApp({\n        webApp: {\n          ...activeWebApp!,\n          isRemoveModalOpen: true,\n        },\n      });\n      return;\n    }\n\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: true,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleModalClose();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    changeWebAppModalState();\n  });\n\n  const handleTabClick = useLastCallback((tab: WebAppModalTab) => {\n    openWebAppTab({ webApp: tab.webApp });\n  });\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n  });\n\n  const MoreMenuButton:\n  FC<{ onTrigger: (e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        className={\n          buildClassName(\n            supportMultiTabMode ? styles.tabMoreButton : styles.moreButton,\n            isMenuOpen && 'active',\n          )\n        }\n        round\n        ripple={!isMobile}\n        size={supportMultiTabMode ? 'tiny' : 'smaller'}\n        color=\"translucent\"\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, supportMultiTabMode]);\n\n  function renderMenuItems() {\n    return (\n      <>\n        {chat && bot && chat.id !== bot.id && (\n          <MenuItem icon=\"bots\" onClick={openBotChat}>{lang('BotWebViewOpenBot')}</MenuItem>\n        )}\n        <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{lang('WebApp.ReloadPage')}</MenuItem>\n        {isSettingsButtonVisible && (\n          <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n            {lang('Settings')}\n          </MenuItem>\n        )}\n        {bot?.isAttachBot && (\n          <MenuItem\n            icon={attachBot ? 'stop' : 'install'}\n            onClick={handleToggleClick}\n            destructive={Boolean(attachBot)}\n          >\n            {lang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n          </MenuItem>\n        )}\n      </>\n    );\n  }\n\n  function renderMoreMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        ref={menuRef}\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        getTriggerElement={getTriggerElement}\n        getMenuElement={getMenuElement}\n        getRootElement={getRootElement}\n        autoClose\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n      >\n        {renderMenuItems()}\n      </Menu>\n    );\n  }\n\n  function renderDropdownMoreMenu() {\n    return (\n      <DropdownMenu\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        trigger={MoreMenuButton}\n        positionX={supportMultiTabMode ? 'left' : 'right'}\n      >\n        {renderMenuItems()}\n      </DropdownMenu>\n    );\n  }\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme]);\n\n  function renderTabCurveBorder(className: string) {\n    return (\n      <svg\n        className={className}\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 16 16\"\n        fill=\"none\"\n      >\n        <path\n          className={styles.tabButtonCurvePath}\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M16 16V0C16 12 12 16 0 16H16Z\"\n        />\n      </svg>\n    );\n  }\n\n  function renderActiveTab() {\n    const style = buildStyle(\n      headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n      headerColor && `--active-tab-background: ${headerColor}`,\n    );\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n        style={style}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.avatarContainer}>\n            <Avatar\n              size=\"mini\"\n              peer={bot}\n            />\n            <MoreMenuButton onTrigger={handleContextMenu} isOpen={isContextMenuOpen} />\n          </div>\n          {attachBot?.shortName ?? bot?.firstName}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={lang('Close')}\n            onClick={handleTabClose}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  useHorizontalScroll(containerRef, !isOpen || !isMaximizedState || !(containerRef.current));\n\n  function renderTabs() {\n    return (\n      <div\n        className={styles.tabs}\n        ref={containerRef}\n      >\n        {tabs?.map((tab) => (\n          tab.isOpen ? (\n            renderActiveTab()\n          ) : (\n            <Avatar\n              className={styles.tabAvatar}\n              size=\"mini\"\n              peer={tab.bot}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleTabClick(tab)}\n            />\n          )\n        ))}\n      </div>\n    );\n  }\n\n  function renderHeader() {\n    return (\n      <div\n        ref={headerRef}\n      >\n        {!supportMultiTabMode\n          ? renderSinglePageModeHeader()\n          : (isMaximizedState ? renderMultiTabHeader() : <MinimizedWebAppModal />)}\n      </div>\n    );\n  }\n\n  function renderMultiTabHeader() {\n    return (\n      <div\n        className={buildClassName(\n          'modal-header',\n          'multiTab',\n        )}\n        style={buildStyle(\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          className={styles.headerButton}\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n          ariaLabel={lang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        {renderTabs()}\n        {renderMoreMenu()}\n\n        {/* <Button\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n        >\n          <Icon className={styles.icon} name=\"add\" />\n        </Button>\n        */}\n\n        <Button\n          className={buildClassName(\n            styles.windowStateButton,\n            'no-drag',\n          )}\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n          onClick={handleCollapseClick}\n        >\n          <Icon className={styles.stateIcon} name=\"collapse-modal\" />\n        </Button>\n      </div>\n    );\n  }\n\n  function renderSinglePageModeHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{attachBot?.shortName ?? bot?.firstName}</div>\n        {renderDropdownMoreMenu()}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={ref}\n      className={buildClassName(\n        styles.root,\n        supportMultiTabMode && styles.multiTab,\n        !isMaximizedState && styles.minimized,\n      )}\n      dialogStyle={supportMultiTabMode ? draggableStyle : undefined}\n      isOpen={isOpen}\n      isLowStackPriority\n      onClose={handleModalClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor || 'var(--color-background)'}`}\n      noBackdrop\n      noBackdropClose\n    >\n      {openedWebApps && sessionKeys?.map((key) => (\n        <WebAppModalTabContent\n          key={key}\n          modal={modal}\n          registerSendEventCallback={registerSendEventCallback}\n          registerReloadFrameCallback={registerReloadFrameCallback}\n          webApp={openedWebApps[key]}\n          isDragging={isDragging}\n          frameSize={supportMultiTabMode ? getFrameSize() : undefined}\n          isMultiTabSupported={supportMultiTabMode}\n        />\n      ))}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { botId: activeBotId } = modal?.activeWebApp || {};\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status } = selectTabState(global).payment;\n    const { isStarPaymentModalOpen } = selectTabState(global);\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      isPaymentModalOpen: isPaymentModalOpen || isStarPaymentModalOpen,\n      paymentStatus: status,\n    };\n  },\n)(WebAppModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useOldLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['requestedAttachBotInstall'];\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  modal,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const bot = modal?.bot;\n\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useOldLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wn7D2H1e\",\"text\":\"IQ1U2TrZ\",\"header\":\"F6qqXRvD\",\"description\":\"ILLaH6qQ\",\"icon\":\"DzGwbpu5\",\"font-icon\":\"Pa9h5mh3\",\"fontIcon\":\"Pa9h5mh3\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps<T> = {\n  icon: string;\n  isFontIcon?: boolean;\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  section: T;\n  onClick?: (section: T) => void;\n};\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PremiumFeatureItem = <T,>({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  section,\n  onClick,\n}: OwnProps<T>) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(section);\n  });\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={handleClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <i\n          className={buildClassName(styles.fontIcon, `icon icon-${icon}`)}\n          aria-hidden\n          style={`--item-color: rgb(${r},${g},${b})`}\n        />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HmY1pYD9\",\"arrow\":\"cqNhvdib\",\"right\":\"hIgQCprt\",\"arrow-hidden\":\"wDzTWXzO\",\"arrowHidden\":\"wDzTWXzO\",\"dot\":\"Ac0pMX9w\",\"medium\":\"yDo_8Y7X\",\"small\":\"bhODNwmU\",\"invisible\":\"O9pyrgj0\",\"active\":\"NYDxCNdz\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport Button from '../ui/Button';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <i className=\"icon icon-previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst || isInvisible) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <i className=\"icon icon-next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u84X0r2z\",\"floating-badge\":\"hPi4fICJ\",\"floatingBadge\":\"hPi4fICJ\",\"floating-badge-triangle\":\"jufjjcX9\",\"floatingBadgeTriangle\":\"jufjjcX9\",\"floating-badge-icon\":\"XkiOXdMP\",\"floatingBadgeIcon\":\"XkiOXdMP\",\"text\":\"YaiSoFKE\",\"floating-badge-value\":\"iC3LJrvy\",\"floatingBadgeValue\":\"iC3LJrvy\",\"left-text\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"leftText\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"right-text\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"rightText\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"right-value\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"rightValue\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"left-value\":\"RJosx238 YaiSoFKE\",\"leftValue\":\"RJosx238 YaiSoFKE\",\"line\":\"Hy5kWx0p\",\"left\":\"scGr4JS9\",\"right\":\"nPaUalQf\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <i className={buildClassName(styles.floatingBadgeIcon, `icon-${floatingBadgeIcon}`, 'icon')} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZXp65Wgy\",\"title\":\"W1xG3pjS\",\"description\":\"b_CBXIkT\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O1fqNCy0\",\"sticker\":\"ogaoEAcn\",\"effect-sticker\":\"Stdz4UIW ogaoEAcn\",\"effectSticker\":\"Stdz4UIW ogaoEAcn\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: (index: number) => void;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useLastCallback(() => {\n    onClick(realIndex);\n  });\n\n  const handleEnded = useLastCallback(() => {\n    inanimate();\n    onEnded(realIndex);\n  });\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useLastCallback((i: number) => {\n    setOffset(-i);\n  });\n\n  const handleEnded = useLastCallback((i: number) => {\n    const displayIndex = cycleRestrict(renderedStickers.length, i + offset);\n    if (displayIndex !== 0) return;\n\n    setTimeout(() => {\n      setOffset((current) => {\n        return cycleRestrict(renderedStickers.length, current + 1);\n      });\n    }, ENDED_DELAY);\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((sticker, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={sticker}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mFElmm7a\",\"header\":\"Jjbochk6\",\"circle\":\"ChteQ9C3\",\"title\":\"d2ayix6L\",\"features\":\"ensyCeMe\",\"mobile\":\"DFbZJafh\",\"scrolled\":\"iN1T0a2Y\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useOldLang from '../../../../hooks/useOldLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-closed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = 5.25 * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const dpr = useDevicePixelRatio();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE * dpr,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n      dpr,\n    });\n  }, [dpr]);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n              section={section}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ot0dA1yZ\",\"wrapper\":\"yxSAGAc1\",\"down\":\"Jcy6cDoc\",\"frame\":\"Vn81yTTJ\",\"video\":\"rrVJClLL\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oyUTEj8I\",\"button\":\"EPfM7AgT\",\"button-content\":\"GysZk2mF\",\"buttonContent\":\"GysZk2mF\",\"back-button\":\"njYoMrKM\",\"backButton\":\"njYoMrKM\",\"white-back-button\":\"SB4pczOo\",\"whiteBackButton\":\"SB4pczOo\",\"content\":\"sJubG84j\",\"frame\":\"a7IoUtQG\",\"slide\":\"gubS9KP1\",\"limits\":\"U7ePgVBR\",\"stories\":\"J1M6fEdo\",\"limits-content\":\"n_rowVPI\",\"limitsContent\":\"n_rowVPI\",\"header\":\"mz2Hmd83\",\"no-header-border\":\"AgmNOqi7\",\"noHeaderBorder\":\"AgmNOqi7\",\"preview\":\"dIVBSdWi\",\"title\":\"iZLwcL8v\",\"description\":\"A7YHY8qF\",\"footer\":\"yN2611rA\",\"no-footer-border\":\"rCHMABcD\",\"noFooterBorder\":\"rCHMABcD\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { toggleExtraClass } from '../../../lib/teact/teact-dom';\n\nimport type { ApiPremiumPromo, ApiPremiumSubscriptionOption } from '../../../api/types';\nimport type { ApiLimitTypeForPromo, ApiPremiumSection, GlobalState } from '../../../global/types';\n\nimport { PREMIUM_BOTTOM_VIDEOS, PREMIUM_FEATURE_SECTIONS, PREMIUM_LIMITS_ORDER } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n  saved_tags: 'PremiumPreviewTags2',\n  last_seen: 'PremiumPreviewLastSeen',\n  message_privacy: 'PremiumPreviewMessagePrivacy',\n  effects: 'Premium.MessageEffects',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n  saved_tags: 'PremiumPreviewTagsDescription2',\n  last_seen: 'PremiumPreviewLastSeenDescription',\n  message_privacy: 'PremiumPreviewMessagePrivacyDescription',\n  effects: 'Premium.MessageEffectsInfo',\n};\n\nconst LIMITS_TITLES: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n  recommendedChannels: 'SimilarChannelsLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n  recommendedChannels: 'SimilarChannelsLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  initialSection: ApiPremiumSection;\n  promo: ApiPremiumPromo;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumPromoOrder?: ApiPremiumSection[];\n  subscriptionOption?: ApiPremiumSubscriptionOption;\n  onBack: VoidFunction;\n  onClickSubscribe: (startParam?: string) => void;\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  isPremium,\n  limits,\n  premiumPromoOrder,\n  subscriptionOption,\n  onBack,\n  onClickSubscribe,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePreviousDeprecated(initialSection);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  const subscriptionButtonText = useMemo(() => {\n    if (!subscriptionOption) return undefined;\n\n    const { amount, months, currency } = subscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n\n    return isPremium ? lang('OK') : lang('SubscribeToPremium', formatCurrency(perMonthPrice, currency, lang.code));\n  }, [isPremium, lang, subscriptionOption]);\n\n  const handleClick = useLastCallback(() => {\n    onClickSubscribe(initialSection);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const target = e.currentTarget;\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = target;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex}`);\n\n    requestMutation(() => {\n      target.style.setProperty('--scroll-progress', progress.toString());\n      target.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n\n      if (prevElement) toggleExtraClass(prevElement, 'reverse', false);\n      if (reverseElement) toggleExtraClass(reverseElement, 'reverse', true);\n    });\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = filteredSections.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, filteredSections, initialSection, prevInitialSection]);\n\n  const handleSelectSlide = useLastCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  });\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, currentSlideIndex !== 0 && styles.whiteBackButton)}\n        color={currentSlideIndex === 0 ? 'translucent' : 'translucent-white'}\n        onClick={onBack}\n        ariaLabel={lang('Back')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {filteredSections.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {lang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {PREMIUM_LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={lang(LIMITS_TITLES[limit])}\n                        description={lang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (PREMIUM_LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {lang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {lang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        {subscriptionButtonText && (\n          <Button\n            className={buildClassName(styles.button)}\n            isShiny={!isPremium}\n            withPremiumGradient={!isPremium}\n            onClick={isPremium ? onBack : handleClick}\n          >\n            {subscriptionButtonText}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiPremiumGiftCodeOption, ApiPremiumGiftOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './PremiumSubscriptionOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumGiftOption | ApiPremiumGiftCodeOption;\n  isGiveaway?: boolean;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  className?: string;\n  onChange: (month: number) => void;\n};\n\nconst PremiumSubscriptionOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount,\n  onChange, className, isGiveaway,\n}) => {\n  const lang = useOldLang();\n\n  const {\n    months, amount, currency,\n  } = option;\n  const users = 'users' in option ? option.users : undefined;\n  const perMonth = Math.floor(amount / months);\n  const isUserCountPlural = users ? users > 1 : undefined;\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label\n      className={buildClassName(\n        isGiveaway ? styles.giveawayWrapper : styles.wrapper,\n        (checked && !isGiveaway) && styles.active,\n        className,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"subscription_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>\n          {Boolean(discount) && (\n            <span\n              className={buildClassName(styles.giveawayDiscount, styles.discount)}\n              title={lang('GiftDiscount')}\n            > &minus;{discount}%\n            </span>\n          )}\n          {lang('Months', months)}\n        </div>\n        <div className={styles.perMonth}>\n          {(isGiveaway || isUserCountPlural) ? `${formatCurrency(amount, currency, lang.code)} x ${users!}`\n            : lang('PricePerMonth', formatCurrency(perMonth, currency, lang.code))}\n        </div>\n        <div className={styles.amount}>\n          {formatCurrency(amount, currency, lang.code)}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(PremiumSubscriptionOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"qZA6S2kc\",\"giveawayWrapper\":\"PkseWxFK\",\"active\":\"EJOQwnRj\",\"input\":\"WOEkhx6R\",\"content\":\"BHUCScsU\",\"month\":\"DfYCMUkL\",\"perMonth\":\"poxOXJ2o\",\"amount\":\"IGMrERf_\",\"discount\":\"uqDlP3Zt\",\"giveawayDiscount\":\"ublijP0j\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sfbpMFHM\",\"transition\":\"ELNkgPve\",\"button\":\"c1tMxuFH\",\"main\":\"ZpOIPrhp\",\"logo\":\"mlMezt6b\",\"status-emoji\":\"mQwvY9LA\",\"statusEmoji\":\"mQwvY9LA\",\"header-text\":\"y71v6ECL\",\"headerText\":\"y71v6ECL\",\"description\":\"cUcKXV3j\",\"list\":\"c3Ee2oSo\",\"no-button\":\"yWEHoJOL\",\"noButton\":\"yWEHoJOL\",\"header\":\"Bc_F0RKb\",\"hidden-header\":\"ltXo0Xi7\",\"hiddenHeader\":\"ltXo0Xi7\",\"close-button\":\"XyN3eWog\",\"closeButton\":\"XyN3eWog\",\"premium-header-text\":\"xysPdANX\",\"premiumHeaderText\":\"xysPdANX\",\"footer-text\":\"yKm9hKQP\",\"footerText\":\"yKm9hKQP\",\"primary-footer-text\":\"l1WlNpmu\",\"primaryFooterText\":\"l1WlNpmu\",\"footer\":\"nCnlO9UZ\",\"stickerSetText\":\"xw_GbDj7\",\"stickerSetLink\":\"FLzl2ng5\",\"stickerSetLinkIcon\":\"Y0jTcadE\",\"subscriptionOptions\":\"xZC_Oajr\",\"subscriptionOption\":\"gygsbDbE\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiPremiumSubscriptionOption, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { ApiPremiumSection, GlobalState } from '../../../global/types';\n\nimport { PREMIUM_FEATURE_SECTIONS, TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEffects from '../../../assets/premium/PremiumEffects.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLastSeen from '../../../assets/premium/PremiumLastSeen.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumMessagePrivacy from '../../../assets/premium/PremiumMessagePrivacy.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTags from '../../../assets/premium/PremiumTags.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<ApiPremiumSection, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n  saved_tags: PremiumTags,\n  last_seen: PremiumLastSeen,\n  message_privacy: PremiumMessagePrivacy,\n  effects: PremiumEffects,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: ApiPremiumSection;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: ApiPremiumSection[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<ApiPremiumSection | undefined>(initialSection);\n  const [selectedSubscriptionOption, setSubscriptionOption] = useState<ApiPremiumSubscriptionOption>();\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setCurrentSection(undefined);\n    }\n  }, [isOpen]);\n\n  const handleOpenSection = useLastCallback((section: ApiPremiumSection) => {\n    setCurrentSection(section);\n  });\n\n  const handleResetSection = useLastCallback(() => {\n    setCurrentSection(undefined);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClickWithStartParam = useLastCallback((startParam?: string) => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        type: 'slug',\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (selectedSubscriptionOption) {\n      handleClickWithStartParam(String(selectedSubscriptionOption.months));\n    } else {\n      handleClickWithStartParam();\n    }\n  });\n\n  const handleChangeSubscriptionOption = useLastCallback((months: number) => {\n    const foundOption = promo?.options.find((option) => option.months === months);\n    setSubscriptionOption(foundOption);\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  useEffect(() => {\n    const [defaultOption] = promo?.options ?? [];\n    setSubscriptionOption(defaultOption);\n  }, [promo]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const stickerSetTitle = useMemo(() => {\n    if (!fromUserStatusSet || !fromUser) return undefined;\n\n    const template = lang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n    const [first, second] = template.split('{link}');\n\n    const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n      <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n    ) : undefined;\n    const link = (\n      <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n        {emoji}{renderText(fromUserStatusSet.title)}\n      </span>\n    );\n    return [renderText(first), link, renderText(second)];\n  }, [fromUser, fromUserStatusSet, lang]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const monthOption = promo?.options.find((option) => option.months === 1);\n    if (!monthOption) {\n      return undefined;\n    }\n    return Number(monthOption.amount);\n  }, [promo]);\n\n  const subscribeButtonText = useMemo(() => {\n    if (!selectedSubscriptionOption) {\n      return undefined;\n    }\n    const { amount, months, currency } = selectedSubscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n    return formatCurrency(\n      perMonthPrice,\n      currency,\n      lang.code,\n    );\n  }, [selectedSubscriptionOption, lang.code]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  function getHeaderText() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n        : lang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]);\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n      : lang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium');\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : lang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return lang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogSubtitle')\n      : lang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={lang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {promo?.options\n          .map((option) => (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={option.amount}\n              option={option}\n              onChange={handleChangeSubscriptionOption}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={selectedSubscriptionOption?.months === option.months}\n            />\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={closePremiumModal}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={lang('Close')}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n            {fromUserStatusEmoji ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            )}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {fromUserStatusSet ? stickerSetTitle : renderText(getHeaderText(), ['simple_markdown', 'emoji'])}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            {!isPremium && !isGift && renderSubscriptionOptions()}\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {lang('TelegramPremium')}\n              </h2>\n            </div>\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={lang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? lang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : lang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    section={section}\n                    onClick={handleOpenSection}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(lang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(lang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && selectedSubscriptionOption && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {lang('SubscribeToPremium', subscribeButtonText)}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleResetSection}\n            promo={promo}\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n            premiumPromoOrder={premiumPromoOrder}\n            subscriptionOption={selectedSubscriptionOption}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDialog\":\"GB3KpHga\",\"root\":\"bv742cLK\",\"transition\":\"M6awemqC\",\"content\":\"ahnxTv9t\",\"main\":\"DC9KsF8l\",\"giftSection\":\"OK5knwl3\",\"section\":\"U4wtCtMj\",\"header\":\"BFRxuPRK\",\"starHeaderText\":\"pOrYpnEf\",\"hiddenHeader\":\"x0wO46Uz\",\"closeButton\":\"lF9a9DcG\",\"avatars\":\"yUYDzqjs\",\"center\":\"ikfz9iTG\",\"description\":\"zoIZUqey\",\"premiumFeatures\":\"LzTgfZVa\",\"boostIcon\":\"jrg2ik9Z\",\"optionBottom\":\"s0ze_M5B\",\"secondaryInfo\":\"ML7Glpia\",\"footer\":\"MQ2XTHHM\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumGiftCodeOption,\n} from '../../../api/types';\n\nimport { BOOST_PER_SENT_GIFT } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport Modal from '../../ui/Modal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumGiftModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  isCompleted?: boolean;\n  gifts?: ApiPremiumGiftCodeOption[] | undefined;\n  forUserIds?: string[];\n  boostPerSentGift?: number;\n};\n\nconst PremiumGiftModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isCompleted,\n  gifts,\n  boostPerSentGift = BOOST_PER_SENT_GIFT,\n  forUserIds,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n\n  const {\n    openPremiumModal, closePremiumGiftModal, openInvoice, requestConfetti,\n  } = getActions();\n\n  const oldLang = useOldLang();\n\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n\n  const selectedUserQuantity = forUserIds && forUserIds.length * boostPerSentGift;\n\n  useEffect(() => {\n    if (forUserIds?.length) {\n      setSelectedMonthOption(gifts?.[0].months);\n    }\n  }, [gifts, forUserIds]);\n\n  const giftingUserList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return forUserIds?.map((userId) => usersById[userId]).filter(Boolean);\n  }, [forUserIds]);\n\n  const selectedGift = useMemo(() => {\n    return gifts?.find((gift) => gift.months === selectedMonthOption && gift.users === forUserIds?.length);\n  }, [gifts, selectedMonthOption, forUserIds?.length]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users\n      === forUserIds?.length);\n  }, [gifts, forUserIds?.length]);\n\n  const fullMonthlyGiftAmount = useMemo(() => {\n    if (!filteredGifts?.length) {\n      return undefined;\n    }\n\n    const basicGift = filteredGifts.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    });\n\n    return Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const handleSubmit = useLastCallback(() => {\n    if (!selectedGift) {\n      return;\n    }\n\n    openInvoice({\n      type: 'giftcode',\n      userIds: forUserIds!,\n      currency: selectedGift!.currency,\n      amount: selectedGift!.amount,\n      option: selectedGift!,\n    });\n  });\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isCompleted) {\n      showConfetti();\n    }\n  }, [isCompleted, showConfetti]);\n\n  const userNameList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return forUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [forUserIds]);\n\n  function renderGiftTitle() {\n    if (isCompleted) {\n      return renderText(oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle',\n        [userNameList, selectedGift?.months]), ['simple_markdown']);\n    }\n\n    return oldLang('GiftTelegramPremiumTitle');\n  }\n\n  function renderGiftText() {\n    if (isCompleted) {\n      return renderText(oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', userNameList),\n        ['simple_markdown']);\n    }\n    return renderText(oldLang('GiftPremiumUsersGiveAccessManyZero', userNameList), ['simple_markdown']);\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = oldLang('GiftPremiumListFeaturesAndTerms');\n    // Translation hack for rendering component inside string\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={buildClassName(styles.premiumFeatures, styles.center)}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function renderBoostsPluralText() {\n    const giftParts = renderText(oldLang('GiftPremiumWillReceiveBoostsPlural',\n      selectedUserQuantity), ['simple_markdown']);\n    return giftParts.map((part) => {\n      if (typeof part === 'string') {\n        return part.split(/(⚡)/g).map((subpart) => {\n          if (subpart === '⚡') {\n            return <Icon name=\"boost\" className={styles.boostIcon} />;\n          }\n          return subpart;\n        });\n      }\n      return part;\n    });\n  }\n\n  function renderSubscriptionGiftOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {filteredGifts?.map((gift) => {\n          return (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={gift.months}\n              option={gift}\n              fullMonthlyAmount={fullMonthlyGiftAmount}\n              checked={gift.months === selectedMonthOption}\n              onChange={setSelectedMonthOption}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={dialogRef}\n      onClose={closePremiumGiftModal}\n      isOpen={isOpen}\n      contentClassName={styles.content}\n      className={buildClassName(styles.modalDialog, styles.root)}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closePremiumGiftModal()}\n          ariaLabel={oldLang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className={styles.avatars}>\n          <AvatarList\n            size=\"large\"\n            peers={giftingUserList}\n          />\n        </div>\n        <h2 className={buildClassName(styles.headerText, styles.center)}>\n          {renderGiftTitle()}\n        </h2>\n        <p className={buildClassName(styles.description, styles.center)}>\n          {renderGiftText()}\n        </p>\n        {!isCompleted && (\n          <>\n            <p className={styles.description}>\n              {renderText(renderBoostsPluralText(), ['simple_markdown', 'emoji'])}\n            </p>\n\n            <div className={styles.giftSection}>\n              {renderSubscriptionGiftOptions()}\n            </div>\n          </>\n        )}\n        {renderPremiumFeaturesLink()}\n      </div>\n\n      {!isCompleted && (\n        <div className={styles.footer}>\n          <Button withPremiumGradient isShiny disabled={!selectedGift} onClick={handleSubmit}>\n            {oldLang(\n              'GiftSubscriptionFor', selectedGift\n              && formatCurrency(selectedGift!.amount, selectedGift.currency, oldLang.code),\n            )}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    gifts, forUserIds, isCompleted,\n  } = selectTabState(global).giftModal || {};\n\n  return {\n    isCompleted,\n    gifts,\n    boostPerSentGift: global.appConfig?.boostsPerSentGift,\n    forUserIds,\n  };\n})(PremiumGiftModal));\n","import type { TeactNode } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Icon from '../icons/Icon';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\nexport type ItemPickerOption = {\n  label: TeactNode;\n  subLabel?: string;\n  disabled?: boolean;\n  isLoading?: boolean;\n  value: string;\n};\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedValue?: string;\n  selectedValues?: never; // Help TS to throw an error if this is passed\n  onSelectedValueChange?: (value: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedValue?: never;\n  selectedValues: string[];\n  lockedSelectedValues?: string[];\n  lockedUnselectedValues?: string[];\n  onSelectedValuesChange?: (values: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  isSearchable?: boolean;\n  searchInputId?: string;\n  items: ItemPickerOption[];\n  itemClassName?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isViewOnly?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (value: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst ITEM_CLASS_NAME = 'ItemPickerItem';\n\nconst ItemPicker = ({\n  className,\n  isSearchable,\n  searchInputId,\n  items,\n  filterValue,\n  notFoundText,\n  isLoading,\n  noScrollRestore,\n  filterPlaceholder,\n  isViewOnly,\n  itemInputType,\n  itemClassName,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedValues = allowMultiple ? optionalProps.lockedSelectedValues : undefined;\n  const lockedUnselectedValues = allowMultiple ? optionalProps.lockedUnselectedValues : undefined;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const selectedValues = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedValues;\n    }\n\n    return optionalProps.selectedValue ? [optionalProps.selectedValue] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedValue, optionalProps.selectedValues]);\n\n  const lockedSelectedValuesSet = useMemo(() => new Set(lockedSelectedValues), [lockedSelectedValues]);\n  const lockedUnselectedValuesSet = useMemo(() => new Set(lockedUnselectedValues), [lockedUnselectedValues]);\n\n  const sortedItemValuesList = useMemo(() => {\n    if (filterValue) {\n      return items.map((item) => item.value);\n    }\n\n    const lockedSelectedBucket: ItemPickerOption[] = [];\n    const unlockedBucket: ItemPickerOption[] = [];\n    const lockedUnselectableBucket: ItemPickerOption[] = [];\n\n    items.forEach((item) => {\n      if (lockedSelectedValuesSet.has(item.value)) {\n        lockedSelectedBucket.push(item);\n      } else if (lockedUnselectedValuesSet.has(item.value)) {\n        lockedUnselectableBucket.push(item);\n      } else {\n        unlockedBucket.push(item);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket).map((item) => item.value);\n  }, [filterValue, items, lockedSelectedValuesSet, lockedUnselectedValuesSet]);\n\n  const handleItemClick = useLastCallback((value: string) => {\n    if (allowMultiple) {\n      const newSelectedValues = selectedValues.slice();\n      const index = newSelectedValues.indexOf(value);\n      if (index >= 0) {\n        newSelectedValues.splice(index, 1);\n      } else {\n        newSelectedValues.push(value);\n      }\n\n      optionalProps.onSelectedValuesChange?.(newSelectedValues);\n      return;\n    }\n\n    optionalProps.onSelectedValueChange?.(value);\n  });\n\n  const [viewportValuesList, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemValuesList, Boolean(filterValue),\n  );\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const renderItem = useCallback((value: string) => {\n    const item = items.find((itemOption) => itemOption.value === value);\n    if (!item) return undefined;\n\n    const { label, subLabel, isLoading: isItemLoading } = item;\n    const isAlwaysUnselected = lockedUnselectedValuesSet.has(value);\n    const isAlwaysSelected = lockedSelectedValuesSet.has(value);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = selectedValues.includes(value);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      return undefined;\n    }\n\n    return (\n      <PickerItem\n        key={value}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={label}\n        subtitle={subLabel}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(value)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(value, isAlwaysSelected))}\n      />\n    );\n  }, [\n    items, lockedUnselectedValuesSet, lockedSelectedValuesSet, selectedValues, isViewOnly, onDisabledClick,\n    itemInputType, itemClassName,\n  ]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('Search')}\n          />\n        </div>\n      )}\n\n      {viewportValuesList?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportValuesList}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportValuesList.map((value) => renderItem(value))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportValuesList && !viewportValuesList.length ? (\n        <p className={styles.noResults}>{notFoundText || lang('SearchEmptyViewTitle')}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ItemPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wzzA3MFh\",\"pickerSelector\":\"xhujrq9i\",\"pickerTitle\":\"YuRK4e7S\",\"picker\":\"YF9nLkCK\",\"footer\":\"ATCZ2Q5G\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport ItemPicker from './pickers/ItemPicker';\n\nimport styles from './CountryPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (value: string[]) => void;\n  countryList: ApiCountry[];\n  selectionLimit?: number | undefined;\n};\n\nconst CountryPickerModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  countryList,\n  selectionLimit,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[]>([]);\n  const prevSelectedCountryIds = usePreviousDeprecated(selectedCountryIds);\n  const noPickerScrollRestore = prevSelectedCountryIds === selectedCountryIds;\n\n  const displayedIds = useMemo(() => {\n    if (!countryList) {\n      return [];\n    }\n\n    return countryList.filter((country) => !country.isHidden && country.iso2 !== 'FT')\n      .map(({\n        iso2, defaultName,\n      }) => ({\n        value: iso2,\n        label: defaultName,\n      }));\n  }, [countryList]);\n\n  const handleSelectedIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (selectionLimit && newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningCountries', selectionLimit),\n      });\n      return;\n    }\n    setSelectedCountryIds(newSelectedIds);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(selectedCountryIds);\n    onClose();\n  });\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleSubmit}\n    >\n      <div className={styles.container}>\n        <div className={styles.pickerSelector}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4 className={styles.pickerTitle}>\n            {lang('BoostingSelectCountry')}\n          </h4>\n        </div>\n      </div>\n\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedIds}\n          selectedValues={selectedCountryIds}\n          onSelectedValuesChange={handleSelectedIdsChange}\n          noScrollRestore={noPickerScrollRestore}\n          allowMultiple\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <div className={styles.footer}>\n        <Button\n          size=\"smaller\"\n          onClick={handleSubmit}\n        >\n          {lang('SelectCountries.OK')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(CountryPickerModal);\n","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport {\n  filterChatsByName, isChatChannel, isChatPublic, isChatSuperGroup,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\nconst GiveawayChannelPickerModal = ({\n  isOpen,\n  giveawayChatId,\n  selectionLimit,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [pendingChannelId, setPendingChannelId] = useState<string | undefined>(undefined);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const channelIds = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const { active, archived } = global.chats.listIds;\n    const ids = (active || []).concat(archived || []);\n\n    return unique(ids).map((id) => chatsById[id])\n      .filter((chat) => (\n        chat && (\n          isChatChannel(chat) || isChatSuperGroup(chat)\n        ) && chat.id !== giveawayChatId\n      )).map((chat) => chat.id);\n  }, [giveawayChatId]);\n\n  const displayedChannelIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    const foundChannelIds = channelIds ? filterChatsByName(lang, channelIds, chatsById, searchQuery) : [];\n\n    return sortChatIds(foundChannelIds,\n      false,\n      selectedIds);\n  }, [channelIds, lang, searchQuery, selectedIds]);\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    const chatsById = getGlobal().chats.byId;\n    const newlyAddedIds = newSelectedIds.filter((id) => !selectedIds.includes(id));\n    const privateLinkChannelId = newlyAddedIds.find((id) => {\n      const chat = chatsById[id];\n      return chat && !isChatPublic(chat);\n    });\n\n    if (selectedIds?.length >= selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningChannelsPlural', selectionLimit),\n      });\n      return;\n    }\n\n    if (privateLinkChannelId) {\n      setPendingChannelId(privateLinkChannelId);\n      openConfirmModal();\n    } else {\n      setSelectedIds(newSelectedIds);\n    }\n  });\n\n  const confirmPrivateLinkChannelSelection = useLastCallback(() => {\n    if (pendingChannelId) {\n      setSelectedIds(unique([...selectedIds, pendingChannelId]));\n    }\n    closeConfirmModal();\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('RequestPeer.ChooseChannelTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedChannelIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedChannelIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n      <ConfirmDialog\n        title={lang('BoostingGiveawayPrivateChannel')}\n        text={lang('BoostingGiveawayPrivateChannelWarning')}\n        confirmLabel={lang('Add')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmPrivateLinkChannelSelection}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(GiveawayChannelPickerModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './GiveawayTypeOption.module.scss';\n\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\n\ntype OwnProps = {\n  option: ApiGiveawayType;\n  name: string;\n  text: string;\n  img: string;\n  checked?: boolean;\n  isLink: boolean;\n  className?: string;\n  onChange: (value: ApiGiveawayType) => void;\n  onClickAction?: () => void;\n  userNames?: string;\n  selectedMemberIds?: string[];\n};\n\nconst GiveawayTypeOption: FC<OwnProps> = ({\n  option, checked,\n  name, text, img,\n  isLink, onChange, onClickAction, className,\n  userNames, selectedMemberIds,\n}) => {\n  const lang = useOldLang();\n\n  let displayText: string | undefined = lang(text);\n  if (isLink && selectedMemberIds?.length) {\n    displayText = selectedMemberIds.length > 2 ? `${selectedMemberIds.length}` : userNames;\n  }\n\n  const handleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(option);\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    onClickAction?.();\n  });\n\n  return (\n    <label\n      className={buildClassName(styles.wrapper, className)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"giveaway_option\"\n        value={option}\n        checked={checked}\n        onChange={handleChange}\n        onClick={(e) => e.stopPropagation()}\n      />\n      <div className={styles.content}>\n        <img className={styles.optionImg} src={img} alt=\"\" draggable={false} />\n        <div className={styles.giveaway}>\n          <h3 className={styles.title}>\n            {lang(`${name}`)}\n          </h3>\n          {isLink ? (\n            <div className={styles.link} onClick={handleClick}>\n              <span>{displayText}</span>\n              <Icon name=\"next\" />\n            </div>\n          ) : (\n            <span className={styles.contentText}>{displayText}</span>\n          )}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiveawayTypeOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"w3OGYFKn\",\"input\":\"xy4AclZa\",\"content\":\"TTgSI7Xh\",\"notChecked\":\"JDcXsByU\",\"giveaway\":\"sEt7TF59\",\"title\":\"u4NzVBBi\",\"link\":\"y7XfPOoG\",\"optionImg\":\"lGhZJbMF\",\"contentText\":\"kt2ZKZ6j\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember } from '../../../api/types';\n\nimport {\n  filterUsersByName,\n  isUserBot,\n  sortUserIds,\n} from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst GiveawayUserPickerModal = ({\n  isOpen,\n  selectionLimit,\n  members,\n  adminMembersById,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps & StateProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const memberIds = useMemo(() => {\n    const global = getGlobal();\n    const { byId, statusesById } = global.users;\n    if (!members?.length) {\n      return [];\n    }\n\n    const adminIdsSet = adminMembersById && new Set(Object.keys(adminMembersById));\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      byId,\n      statusesById,\n    );\n\n    return adminIdsSet ? userIds.filter((userId) => !adminIdsSet.has(userId)) : userIds;\n  }, [adminMembersById, members]);\n\n  const displayedMemberIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredContactIds = memberIds ? filterUsersByName(memberIds, usersById, searchQuery) : [];\n\n    return sortChatIds(unique(filteredContactIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user);\n    }));\n  }, [memberIds, searchQuery]);\n\n  const handleSelectedMemberIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningUsers', selectionLimit),\n      });\n      return;\n    }\n    setSelectedIds(newSelectedIds);\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('BoostingAwardSpecificUsers')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedMemberIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedMemberIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { giveawayChatId }): StateProps => {\n  const chatFullInfo = giveawayChatId ? selectChatFullInfo(global, giveawayChatId) : undefined;\n  if (!chatFullInfo) {\n    return {};\n  }\n\n  return {\n    members: chatFullInfo.members,\n    adminMembersById: chatFullInfo.adminMembersById,\n  };\n})(GiveawayUserPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"P0kLOw15\",\"button\":\"ILuhBsJG\",\"main\":\"SqiN63Ef\",\"logo\":\"Me2hCsMs\",\"header-text\":\"UVDnB0Wq\",\"headerText\":\"UVDnB0Wq\",\"description\":\"v5yGzV6v\",\"header\":\"U6XNIToQ\",\"hidden-header\":\"tDZc21ZC\",\"hiddenHeader\":\"tDZc21ZC\",\"close-button\":\"OX6_HqAd\",\"closeButton\":\"OX6_HqAd\",\"premium-header-text\":\"v6hiGpEn\",\"premiumHeaderText\":\"v6hiGpEn\",\"primary-footer-text\":\"YGbiSd3e\",\"primaryFooterText\":\"YGbiSd3e\",\"section\":\"rZRDMqUL\",\"types\":\"sQ5PkKEs\",\"footer\":\"hD_AEzjd\",\"options\":\"JjDLNrKG\",\"giveawayTitle\":\"p5Hn4Q6E\",\"subscription\":\"rniPcuiP\",\"starSubscription\":\"bzRAETfR\",\"subscriptionOption\":\"ggZrgZnv\",\"status\":\"q1y2qUTn\",\"info\":\"IsT38nlq\",\"titleInfo\":\"nmsfBLut\",\"month\":\"TsGuei3B\",\"quantity\":\"G9H3tm6D\",\"floatingBadge\":\"xKl2UeV8\",\"floatingBadgeColor\":\"HLx3wTBD\",\"floatingBadgeButtonColor\":\"JLH0MExt\",\"floatingBadgeIcon\":\"Ftr7zf2v\",\"floatingBadgeValue\":\"Ce0Ob2tg\",\"subscriptionFooter\":\"rDFQAfTt\",\"premiumFeatures\":\"eNQ_nrKr\",\"dateButton\":\"GeKqKRgP\",\"title\":\"LZ3vPzak\",\"checkboxSection\":\"Z9QJQ6IS\",\"prizesSection\":\"eQVP0Nx8\",\"prizesInput\":\"qMYNwiUZ\",\"subLabelClassName\":\"txXJxVFu\",\"prepaidImg\":\"ldn4mh2T\",\"addButton\":\"sOXvh85b\",\"addChannel\":\"aGbyR60s\",\"removeChannel\":\"UZdErfVI\",\"starOptions\":\"cLhNkYPB\",\"transition\":\"vEI2Wewt\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiCountry,\n  ApiPremiumGiftCodeOption,\n  ApiPrepaidGiveaway,\n  ApiPrepaidStarsGiveaway,\n  ApiStarGiveawayOption,\n  ApiTypePrepaidGiveaway,\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  GIVEAWAY_BOOST_PER_PREMIUM,\n  GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  GIVEAWAY_MAX_ADDITIONAL_USERS,\n} from '../../../config';\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { unique } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport CountryPickerModal from '../../common/CountryPickerModal';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport StarTopupOptionList from '../../modals/stars/StarTopupOptionList';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSliderWithMarks from '../../ui/RangeSliderWithMarks';\nimport Switcher from '../../ui/Switcher';\nimport GiveawayChannelPickerModal from './GiveawayChannelPickerModal';\nimport GiveawayTypeOption from './GiveawayTypeOption';\nimport GiveawayUserPickerModal from './GiveawayUserPickerModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiveawayModal.module.scss';\n\nimport GiftBlueRound from '../../../assets/premium/GiftBlueRound.svg';\nimport GiftGreenRound from '../../../assets/premium/GiftGreenRound.svg';\nimport GiftRedRound from '../../../assets/premium/GiftRedRound.svg';\nimport GiftStar from '../../../assets/premium/GiftStar.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  userIds?: string[];\n};\n\ntype StateProps = {\n  chatId?: string;\n  gifts?: ApiPremiumGiftCodeOption[];\n  isOpen?: boolean;\n  fromUser?: ApiUser;\n  selectedMemberList?: string[] | undefined;\n  selectedChannelList?: string[] | undefined;\n  giveawayBoostPerPremiumLimit?: number;\n  userSelectionLimit?: number;\n  countryList: ApiCountry[];\n  prepaidGiveaway?: ApiTypePrepaidGiveaway;\n  countrySelectionLimit: number | undefined;\n  isChannel?: boolean;\n  isStarsGiftsEnabled?: boolean;\n  starsGiftOptions?: ApiStarGiveawayOption[] | undefined;\n};\n\ntype GiveawayAction = 'createPremiumGiveaway' | 'createStarsGiveaway';\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\ntype SubscribersType = 'all' | 'new';\n\ninterface TypeOption {\n  name: string;\n  text: string;\n  value: ApiGiveawayType;\n  img: string;\n  actions?: GiveawayAction;\n  isLink: boolean;\n  onClickAction?: () => void;\n}\n\nconst DEFAULT_CUSTOM_EXPIRE_DATE = 86400 * 3 * 1000; // 3 days\nconst MAX_ADDITIONAL_CHANNELS = 9;\nconst DEFAULT_BOOST_COUNT = 5;\n\nconst GIVEAWAY_IMG_LIST: { [key: number]: string } = {\n  3: GiftGreenRound,\n  6: GiftBlueRound,\n  12: GiftRedRound,\n};\n\nconst GiveawayModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  gifts,\n  isOpen,\n  isChannel,\n  selectedMemberList,\n  selectedChannelList,\n  giveawayBoostPerPremiumLimit = GIVEAWAY_BOOST_PER_PREMIUM,\n  countryList,\n  prepaidGiveaway,\n  countrySelectionLimit = GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_USERS,\n  isStarsGiftsEnabled,\n  starsGiftOptions,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closeGiveawayModal, openInvoice, openPremiumModal,\n    launchPrepaidGiveaway, launchPrepaidStarsGiveaway,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isCountryPickerModalOpen, openCountryPickerModal, closeCountryPickerModal] = useFlag();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [isUserPickerModalOpen, openUserPickerModal, closeUserPickerModal] = useFlag();\n  const [isChannelPickerModalOpen, openChannelPickerModal, closeChannelPickerModal] = useFlag();\n\n  const TYPE_OPTIONS: TypeOption[] = [{\n    name: 'Premium.Title',\n    text: 'BoostingWinnersRandomly',\n    value: 'premium_giveaway',\n    img: GiftBlueRound,\n    actions: 'createPremiumGiveaway',\n    isLink: true,\n    onClickAction: () => {\n      openUserPickerModal();\n    },\n  }];\n\n  if (isStarsGiftsEnabled) {\n    TYPE_OPTIONS.push({\n      name: 'TelegramStars',\n      text: 'BoostingWinnersRandomly',\n      value: 'stars_giveaway',\n      img: GiftStar,\n      actions: 'createStarsGiveaway',\n      isLink: false,\n    });\n  }\n\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedRandomUserCount, setSelectedRandomUserCount] = useState<number>(DEFAULT_BOOST_COUNT);\n  const [selectedGiveawayOption, setGiveawayOption] = useState<ApiGiveawayType>(TYPE_OPTIONS[0].value);\n  const [selectedStarOption, setSelectedStarOption] = useState<ApiStarGiveawayOption | undefined>();\n  const [selectedSubscriberOption, setSelectedSubscriberOption] = useState<SubscribersType>('all');\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [selectedChannelIds, setSelectedChannelIds] = useState<string[]>([]);\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[] | undefined>([]);\n  const [shouldShowWinners, setShouldShowWinners] = useState<boolean>(false);\n  const [shouldShowPrizes, setShouldShowPrizes] = useState<boolean>(false);\n  const [prizeDescription, setPrizeDescription] = useState<string | undefined>(undefined);\n  const [dataPrepaidGiveaway, setDataPrepaidGiveaway] = useState<ApiPrepaidGiveaway | undefined>(undefined);\n  const [\n    dataStarsPrepaidGiveaway, setDataStarsPrepaidGiveaway,\n  ] = useState<ApiPrepaidStarsGiveaway | undefined>(undefined);\n\n  const isPremiumGiveaway = selectedGiveawayOption === 'premium_giveaway';\n  const isStarsGiveaway = selectedGiveawayOption === 'stars_giveaway';\n  const selectedUserCount = isPremiumGiveaway\n  && !selectedUserIds.length ? selectedRandomUserCount : selectedUserIds.length;\n  const boostQuantity = selectedUserCount * giveawayBoostPerPremiumLimit;\n  const boostStarsQuantity = selectedStarOption?.yearlyBoosts;\n\n  const SUBSCRIBER_OPTIONS = useMemo(() => [\n    {\n      value: 'all',\n      label: lang(isChannel ? 'BoostingAllSubscribers' : 'BoostingAllMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n    {\n      value: 'new',\n      label: lang(isChannel ? 'BoostingNewSubscribers' : 'BoostingNewMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n  ], [isChannel, lang, selectedCountryIds]);\n\n  const monthQuantity = lang('Months', selectedMonthOption);\n  const isStarsPrepaidGiveaway = prepaidGiveaway?.type === 'starsGiveaway';\n  const isPremiumPrepaidGiveaway = prepaidGiveaway?.type === 'giveaway';\n\n  const selectedGift = useMemo(() => {\n    return gifts?.find((gift) => gift.months === selectedMonthOption && gift.users === selectedUserCount);\n  }, [gifts, selectedMonthOption, selectedUserCount]);\n\n  const selectedStarsGift = useMemo(() => {\n    return starsGiftOptions?.find((gift) => {\n      return isStarsPrepaidGiveaway && gift.stars === (dataStarsPrepaidGiveaway?.stars);\n    });\n  }, [dataStarsPrepaidGiveaway, starsGiftOptions, isStarsPrepaidGiveaway]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users === selectedUserCount);\n  }, [gifts, selectedUserCount]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const basicGift = filteredGifts?.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    }, filteredGifts[0]);\n\n    return basicGift && Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const userCountOptions = useMemo(() => {\n    return unique((gifts?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [gifts]);\n\n  const winnerCountOptions = useMemo(() => {\n    return unique((selectedStarOption?.winners?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [selectedStarOption]);\n\n  useEffect(() => {\n    if (isOpen && gifts?.length && !isStarsPrepaidGiveaway) {\n      setSelectedMonthOption(gifts?.[0].months);\n    }\n  }, [isOpen, gifts, isStarsPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && starsGiftOptions?.length && !isPremiumPrepaidGiveaway) {\n      setSelectedStarOption(starsGiftOptions?.[0]);\n    }\n  }, [isOpen, starsGiftOptions, isPremiumPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isStarsPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataStarsPrepaidGiveaway(prepaidGiveaway);\n    }\n  }, [isOpen, isStarsPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isPremiumPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataPrepaidGiveaway(prepaidGiveaway);\n      setSelectedMonthOption(prepaidGiveaway.months);\n    }\n  }, [isOpen, isPremiumPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (selectedMemberList) {\n      setSelectedUserIds(selectedMemberList);\n    }\n  }, [selectedMemberList]);\n\n  useEffect(() => {\n    if (selectedChannelList) {\n      setSelectedChannelIds(selectedChannelList);\n    }\n  }, [selectedChannelList]);\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    setDataStarsPrepaidGiveaway(undefined);\n    setDataPrepaidGiveaway(undefined);\n    setSelectedStarOption(undefined);\n    setSelectedMonthOption(undefined);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n    closeGiveawayModal();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isPremiumGiveaway) {\n      if (selectedUserIds?.length) {\n        openInvoice({\n          type: 'giftcode',\n          boostChannelId: chatId!,\n          userIds: selectedUserIds,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      } else {\n        openInvoice({\n          type: 'giveaway',\n          chatId: chatId!,\n          additionalChannelIds: selectedChannelIds,\n          isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n          countries: selectedCountryIds,\n          areWinnersVisible: shouldShowWinners,\n          prizeDescription,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      }\n    } else {\n      openInvoice({\n        type: 'starsgiveaway',\n        chatId: chatId!,\n        additionalChannelIds: selectedChannelIds,\n        isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n        countries: selectedCountryIds,\n        areWinnersVisible: shouldShowWinners,\n        prizeDescription,\n        untilDate: customExpireDate / 1000,\n        currency: selectedStarOption!.currency,\n        amount: selectedStarOption!.amount,\n        stars: selectedStarOption!.stars,\n        users: selectedRandomUserCount,\n      });\n    }\n\n    handleClose();\n  });\n\n  const confirmLaunchPrepaidGiveaway = useLastCallback(() => {\n    if (isStarsPrepaidGiveaway) {\n      launchPrepaidStarsGiveaway({\n        chatId: chatId!,\n        giveawayId: dataStarsPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          stars: dataStarsPrepaidGiveaway!.stars,\n          currency: selectedStarsGift!.currency,\n          amount: selectedStarsGift!.amount,\n          users: dataStarsPrepaidGiveaway!.quantity,\n        },\n      });\n    } else {\n      launchPrepaidGiveaway({\n        chatId: chatId!,\n        giveawayId: dataPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n        },\n      });\n    }\n\n    closeConfirmModal();\n    handleClose();\n  });\n\n  const handleRandomUserCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handleWinnerCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handlePrizeDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setPrizeDescription(e.target.value);\n  });\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return selectedUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [selectedUserIds]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleChangeSubscriberOption = useLastCallback((value) => {\n    setSelectedSubscriberOption(value);\n  });\n\n  const handleChangeTypeOption = useLastCallback((value: ApiGiveawayType) => {\n    setGiveawayOption(value);\n    setSelectedUserIds([]);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n  });\n\n  const handleExpireDateChange = useLastCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  });\n\n  const handleSetCountriesListChange = useLastCallback((value: string[]) => {\n    setSelectedCountryIds(value);\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedUserIds(newSelectedIds);\n    if (!newSelectedIds.length) {\n      setGiveawayOption('premium_giveaway');\n    }\n  });\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedChannelIds(newSelectedIds);\n  });\n\n  const handleShouldShowWinnersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowWinners(e.target.checked);\n  });\n\n  const handleShouldShowPrizesChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowPrizes(e.target.checked);\n  });\n\n  const onClickActionHandler = useLastCallback(() => {\n    openCountryPickerModal();\n  });\n\n  const handleStarClick = useLastCallback((option) => {\n    setSelectedStarOption(option);\n  });\n\n  function renderTypeOptions() {\n    return (\n      <div className={styles.options}>\n        {TYPE_OPTIONS.map((option) => {\n          return (\n            <GiveawayTypeOption\n              key={option.name}\n              name={option.name}\n              text={option.text}\n              option={option.value}\n              img={option.img}\n              onChange={handleChangeTypeOption}\n              checked={selectedGiveawayOption === option.value}\n              isLink={option.isLink}\n              userNames={userNames}\n              selectedMemberIds={selectedUserIds}\n              onClickAction={option.onClickAction}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscribersOptions() {\n    return (\n      <div className={styles.options}>\n        <RadioGroup\n          name=\"subscribers\"\n          options={SUBSCRIBER_OPTIONS}\n          selected={selectedSubscriberOption}\n          onChange={handleChangeSubscriberOption}\n          onClickAction={onClickActionHandler}\n          subLabelClassName={styles.subLabelClassName}\n          isLink\n        />\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.options}>\n        {filteredGifts?.map((gift) => (\n          <PremiumSubscriptionOption\n            isGiveaway\n            key={gift.months}\n            option={gift}\n            fullMonthlyAmount={fullMonthlyAmount!}\n            checked={gift.months === selectedMonthOption}\n            onChange={setSelectedMonthOption}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function deleteParticipantsHandler(id: string) {\n    const filteredChannelIds = selectedChannelIds.filter((channelId) => channelId !== id);\n    setSelectedChannelIds(filteredChannelIds);\n  }\n\n  function renderStarOptionList() {\n    return (\n      <StarTopupOptionList\n        className={styles.starOptions}\n        options={starsGiftOptions}\n        selectedStarCount={selectedRandomUserCount}\n        selectedStarOption={selectedStarOption}\n        onClick={handleStarClick}\n      />\n    );\n  }\n\n  function renderGiveawayOptionList() {\n    return (\n      <>\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingChannelsGroupsIncludedGiveaway')}\n          </h2>\n\n          <ListItem\n            inactive\n            className=\"chat-item-clickable contact-list-item\"\n          >\n            <GroupChatInfo\n              chatId={chatId!}\n              status={lang(isChannel ? 'BoostingChannelWillReceiveBoost'\n                : 'BoostingGroupWillReceiveBoost', boostQuantity || boostStarsQuantity, 'i')}\n            />\n          </ListItem>\n\n          {selectedChannelIds?.map((channelId) => {\n            return (\n              <ListItem\n                ripple\n                key={channelId}\n                className=\"chat-item-clickable contact-list-item\"\n                /* eslint-disable-next-line react/jsx-no-bind */\n                onClick={() => deleteParticipantsHandler(channelId)}\n                rightElement={(<Icon name=\"close\" className={styles.removeChannel} />)}\n              >\n                <GroupChatInfo\n                  chatId={channelId.toString()}\n                />\n              </ListItem>\n            );\n          })}\n\n          {selectedChannelIds.length < MAX_ADDITIONAL_CHANNELS && (\n            <ListItem\n              icon=\"add\"\n              ripple\n              onClick={openChannelPickerModal}\n              className={styles.addButton}\n              iconClassName={styles.addChannel}\n            >\n              {lang('BoostingAddChannelOrGroup')}\n            </ListItem>\n          )}\n        </div>\n\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingEligibleUsers')}\n          </h2>\n\n          {renderSubscribersOptions()}\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang(isChannel ? 'BoostGift.LimitSubscribersInfo' : 'lng_giveaway_users_about_group'))}\n        </div>\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayAdditionalPrizes')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowPrizes}\n              onChange={handleShouldShowPrizesChange}\n            />\n          </div>\n\n          {shouldShowPrizes && (\n            <div className={styles.prizesSection}>\n              <h2 className={styles.title}>\n                {selectedRandomUserCount}\n              </h2>\n              <InputText\n                className={styles.prizesInput}\n                value={prizeDescription}\n                onChange={handlePrizeDescriptionChange}\n                label={lang('BoostingGiveawayEnterYourPrize')}\n              />\n            </div>\n          )}\n        </div>\n\n        {shouldShowPrizes ? (\n          !isStarsGiveaway && !isStarsPrepaidGiveaway ? (\n            <div className={styles.subscription}>\n              {prizeDescription?.length ? renderText(lang('BoostingGiveawayAdditionPrizeCountNameHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, prizeDescription, monthQuantity]\n                  : [selectedUserCount, prizeDescription, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown']) : renderText(lang('BoostingGiveawayAdditionPrizeCountHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, monthQuantity]\n                  : [selectedUserCount, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown'])}\n            </div>\n          ) : undefined\n        ) : (\n          <div className={styles.subscription}>\n            {renderText(lang('BoostingGiveawayAdditionPrizeHint'))}\n          </div>\n        )}\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayShowWinners')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowWinners}\n              onChange={handleShouldShowWinnersChange}\n            />\n          </div>\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang('BoostingGiveawayShowWinnersHint'))}\n        </div>\n\n        <div className={buildClassName(styles.section,\n          (dataPrepaidGiveaway || dataStarsPrepaidGiveaway || isStarsGiveaway) && styles.subscriptionFooter)}\n        >\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingDateWhenGiveawayEnds')}\n          </h2>\n\n          <Button\n            ariaLabel={lang('BoostGift.DateEnds')}\n            className={buildClassName(styles.dateButton, 'expire-limit')}\n            isText\n            onClick={openCalendar}\n          >\n            <h3 className={styles.title}>\n              {lang('BoostGift.DateEnds')}\n            </h3>\n            {formatDateTimeToString(customExpireDate, lang.code)}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={handleClose}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n      onEnter={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n    >\n      <div className={styles.main} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n        <h2 className={styles.headerText}>\n          {renderText(lang('BoostingBoostsViaGifts'))}\n        </h2>\n        <div className={styles.description}>\n          {renderText(lang(isChannel ? 'BoostingGetMoreBoost' : 'BoostingGetMoreBoostsGroup'))}\n        </div>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.premiumHeaderText}>\n            {lang('BoostingBoostsViaGifts')}\n          </h2>\n        </div>\n        {(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? (\n          <div className={styles.status}>\n            <div>\n              {dataStarsPrepaidGiveaway ? (\n                <img className={styles.prepaidImg} src={GiftStar} alt=\"\" />\n              ) : (\n                <img className={styles.prepaidImg} src={GIVEAWAY_IMG_LIST[dataPrepaidGiveaway!.months]} alt=\"\" />\n              )}\n            </div>\n            <div className={styles.info}>\n              <h3 className={styles.title}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Title', dataStarsPrepaidGiveaway?.stars)\n                  : lang('BoostingTelegramPremiumCountPlural', dataPrepaidGiveaway!.quantity)}\n              </h3>\n              <p className={styles.month}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Desc', dataStarsPrepaidGiveaway?.quantity)\n                  : lang('PrepaidGiveawayMonths', dataPrepaidGiveaway?.months)}\n              </p>\n            </div>\n            <div className={styles.quantity}>\n              <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {dataStarsPrepaidGiveaway ? dataStarsPrepaidGiveaway?.boosts\n                    : dataPrepaidGiveaway!.quantity * (giveawayBoostPerPremiumLimit ?? GIVEAWAY_BOOST_PER_PREMIUM)}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className={buildClassName(styles.section, styles.types)}>\n            {renderTypeOptions()}\n          </div>\n        )}\n\n        {isPremiumGiveaway && !selectedUserIds?.length && (\n          <>\n            {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingQuantityPrizes')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedUserCount}\n                    marks={userCountOptions}\n                    onChange={handleRandomUserCountChange}\n                  />\n                </div>\n\n                <div className={styles.subscription}>\n                  {renderText(lang('BoostingChooseHowMany'))}\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {isStarsGiveaway && (\n          <>\n            {!dataStarsPrepaidGiveaway && !dataPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingStarsOptions')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostStarsQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  {renderStarOptionList()}\n                </div>\n\n                <div className={buildClassName(styles.subscription, styles.starSubscription)}>\n                  {renderText(lang('BoostGift.Stars.Info'))}\n                </div>\n\n                <div className={styles.section}>\n                  <h2 className={styles.giveawayTitle}>\n                    {lang('BoostingStarsQuantityPrizes')}\n                  </h2>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedRandomUserCount}\n                    marks={winnerCountOptions}\n                    onChange={handleWinnerCountChange}\n                  />\n\n                  <div className={styles.subscription}>\n                    {renderText(lang('BoostingStarsQuantityPrizesInfo'))}\n                  </div>\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && isPremiumGiveaway && (\n          <>\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingDurationOfPremium')}\n              </h2>\n\n              {renderSubscriptionOptions()}\n            </div>\n\n            <div className={buildClassName(styles.subscription, styles.subscriptionFooter)}>\n              {renderPremiumFeaturesLink()}\n            </div>\n          </>\n        )}\n\n        {selectedGiveawayOption && (\n          <div className={styles.footer}>\n            <Button\n              className={styles.button}\n              onClick={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n            >\n              {lang('BoostingStartGiveaway')}\n            </Button>\n          </div>\n        )}\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n      <CountryPickerModal\n        isOpen={isCountryPickerModalOpen}\n        onClose={closeCountryPickerModal}\n        countryList={countryList}\n        onSubmit={handleSetCountriesListChange}\n        selectionLimit={countrySelectionLimit}\n      />\n      <GiveawayUserPickerModal\n        isOpen={isUserPickerModalOpen}\n        onClose={closeUserPickerModal}\n        onSelectedIdsConfirmed={handleSelectedUserIdsChange}\n        initialSelectedIds={selectedUserIds}\n        selectionLimit={userSelectionLimit}\n        giveawayChatId={chatId}\n      />\n      <GiveawayChannelPickerModal\n        isOpen={isChannelPickerModalOpen}\n        onClose={closeChannelPickerModal}\n        initialSelectedIds={selectedChannelIds}\n        onSelectedIdsConfirmed={handleSelectedChannelIdsChange}\n        selectionLimit={GIVEAWAY_MAX_ADDITIONAL_CHANNELS}\n        giveawayChatId={chatId}\n      />\n      <ConfirmDialog\n        title={lang('BoostingStartGiveawayConfirmTitle')}\n        text={lang('BoostingStartGiveawayConfirmText')}\n        confirmLabel={lang('Start')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmLaunchPrepaidGiveaway}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    giveawayModal,\n  } = selectTabState(global);\n  const chatId = giveawayModal?.chatId;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const isChannel = chat && isChatChannel(chat);\n\n  return {\n    chatId,\n    gifts: giveawayModal?.gifts,\n    selectedMemberList: giveawayModal?.selectedMemberIds,\n    selectedChannelList: giveawayModal?.selectedChannelIds,\n    giveawayBoostPerPremiumLimit: global.appConfig?.giveawayBoostsPerPremium,\n    isStarsGiftsEnabled: global.appConfig?.isStarsGiftsEnabled,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n    countrySelectionLimit: global.appConfig?.giveawayCountriesMax,\n    countryList: global.countryList.general,\n    prepaidGiveaway: giveawayModal?.prepaidGiveaway,\n    isChannel,\n    starsGiftOptions: giveawayModal?.starOptions,\n  };\n})(GiveawayModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { GIVEAWAY_MAX_ADDITIONAL_CHANNELS } from '../../../config';\nimport {\n  filterUsersByName, isUserBot,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\nimport styles from './PremiumGiftingPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  userSelectionLimit?: number;\n  userIds?: string[];\n}\n\nconst PremiumGiftingPickerModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  userIds,\n}) => {\n  const { closePremiumGiftingModal, openPremiumGiftModal, showNotification } = getActions();\n\n  const oldLang = useOldLang();\n\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedUserIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredContactIds = userIds ? filterUsersByName(userIds, usersById, searchQuery) : [];\n\n    return sortChatIds(unique(filteredContactIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user) && userId !== currentUserId;\n    }));\n  }, [currentUserId, searchQuery, userIds]);\n\n  const handleSendIdList = useLastCallback(() => {\n    if (selectedUserIds?.length) {\n      openPremiumGiftModal({ forUserIds: selectedUserIds });\n      closePremiumGiftingModal();\n    }\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > userSelectionLimit) {\n      showNotification({\n        message: oldLang('BoostingSelectUpToWarningUsers', userSelectionLimit),\n      });\n      return;\n    }\n    setSelectedUserIds(newSelectedIds);\n  });\n\n  return (\n    <PickerModal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={closePremiumGiftingModal}\n      title={oldLang('GiftTelegramPremiumTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={oldLang('Continue')}\n      onConfirm={handleSendIdList}\n      onEnter={handleSendIdList}\n      withPremiumGradient\n      isConfirmDisabled={!selectedUserIds?.length}\n    >\n      <PeerPicker\n        className={styles.picker}\n        itemIds={displayedUserIds}\n        selectedIds={selectedUserIds}\n        filterValue={searchQuery}\n        filterPlaceholder={oldLang('Search')}\n        onSelectedIdsChange={handleSelectedUserIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { currentUserId } = global;\n\n  return {\n    currentUserId,\n    userIds: global.contactList?.userIds,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n  };\n})(PremiumGiftingPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yZCdNeOD\",\"main\":\"Nw_QD6HK\",\"filter\":\"Rn1VBujL\",\"title\":\"bawi8zUd\",\"buttons\":\"LWBSQW38\",\"picker\":\"xwRoLV_t\",\"avatars\":\"sRzPGePZ\",\"center\":\"hM3XfhyZ\",\"description\":\"utdqQEVD\",\"premiumFeatures\":\"ecueYpiv\",\"options\":\"krNSp7Q1\",\"button\":\"Phaog4hK\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../global/types';\nimport type { LangFn } from '../../../../hooks/useOldLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogs',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n  savedDialogsPinned: 'pin-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: LangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: LangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useOldLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QAs_iFxO\",\"limit-compare\":\"k0O6Rnjh\",\"limitCompare\":\"k0O6Rnjh\",\"limit-badge\":\"Q5d_7bB4\",\"limitBadge\":\"Q5d_7bB4\",\"limit-value\":\"ArEy3hhB\",\"limitValue\":\"ArEy3hhB\",\"limit-icon\":\"rbnU7JVX\",\"limitIcon\":\"rbnU7JVX\",\"dialog-buttons\":\"RVM_RSap\",\"dialogButtons\":\"RVM_RSap\",\"x2\":\"esB1OhAF\",\"button-icon\":\"ydpxmYS3\",\"buttonIcon\":\"ydpxmYS3\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll(\n        containerRef.current!,\n        stickerSetEl,\n        'start',\n        FOCUS_MARGIN,\n        isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      );\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"m6XpTzQX\",\"video\":\"OZHqKbDL\",\"image\":\"enA6c8gc\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, hasVideoThumb, hasAnimatedThumb, hasStaticThumb, thumbCustomEmojiId,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const hasOnlyStaticThumb = hasStaticThumb && !hasVideoThumb && !hasAnimatedThumb && !thumbCustomEmojiId;\n\n  const shouldFallbackToStatic = hasOnlyStaticThumb || (hasVideoThumb && !IS_WEBM_SUPPORTED && !hasAnimatedThumb);\n  const staticHash = shouldFallbackToStatic && getStickerMediaHash(stickerSet.stickers![0], 'preview');\n  const staticMediaData = useMedia(staticHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !shouldFallbackToStatic) || hasAnimatedThumb) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = thumbCustomEmojiId || mediaData || staticMediaData;\n  const transitionClassNames = useMediaTransitionDeprecated(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: stickerSet,\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div ref={containerRef} className={buildClassName(styles.root, 'sticker-set-cover')}>\n      {isReady ? (\n        thumbCustomEmojiId ? (\n          <CustomEmoji\n            documentId={thumbCustomEmojiId}\n            size={size}\n            observeIntersectionForPlaying={observeIntersection}\n            noPlay={noPlay}\n          />\n        ) : hasAnimatedThumb ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (hasVideoThumb && !shouldFallbackToStatic) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || staticMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTimeOffset } from '../../util/serverTime';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldIgnorePremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n  isEffectEmoji?: boolean;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  shouldIgnorePremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  isEffectEmoji,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, stickerSetInfo,\n  } = sticker;\n\n  const isPremium = (!sticker.isFree && isEffectEmoji) || sticker.hasEffect;\n  const isCustomEmoji = sticker.isCustomEmoji || isEffectEmoji;\n  const isLocked = !isCurrentUserPremium && isPremium && !shouldIgnorePremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuAnchor);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true }));\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      if (isEffectEmoji) {\n        openPremiumModal({ initialSection: 'effects' });\n      } else {\n        openPremiumModal({ initialSection: 'premium_stickers' });\n      }\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: sticker,\n      expires: Date.now() / 1000 + duration + getServerTimeOffset(),\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    isEffectEmoji && 'effect-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          noVideoOnMobile\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <Icon name=\"lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <Icon name=\"star\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AVrrYEbM\",\"selected\":\"QkdO_lz1\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReactionWithPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIconWithPreview from '../AnimatedIconWithPreview';\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionWithPaid;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReactionWithPaid) => void;\n  onContextMenu?: (reaction: ApiReactionWithPaid) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n  onContextMenu,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = reaction.type === 'custom';\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation, 'full') : undefined,\n    !animationId,\n  );\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenu?.(reaction);\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onContextMenu, handleContextMenuHide, isContextMenuOpen, reaction]);\n\n  const tgsUrl = reaction.type === 'paid' ? LOCAL_TGS_URLS.StarReaction : mediaData;\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={tgsUrl}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiReactionWithPaid, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Icon from './icons/Icon';\nimport ReactionEmoji from './reactions/ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isChatEmojiSet?: boolean;\n  isChatStickerSet?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isChatEmojiSet,\n  isChatStickerSet,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onReactionContext,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransitionDeprecated(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isCurrentUserPremium && isPremiumSet && !isChatEmojiSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID\n    && stickerSet.id !== POPULAR_SYMBOL_SET_ID && stickerSet.id !== EFFECT_EMOJIS_SET_ID\n    && stickerSet.id !== EFFECT_STICKERS_SET_ID && !isChatEmojiSet && !isChatStickerSet;\n\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = (withDefaultTopicIcon || withDefaultStatusIcon) ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && isEmoji && !isPopular && !isChatEmojiSet\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-title', withAddSetButton && 'symbol-set-title-external')}>\n            {isLocked && <Icon name=\"lock-badge\" className=\"symbol-set-locked-icon\" />}\n            <span className=\"symbol-set-name\">{stickerSet.title}</span>\n            {(isChatEmojiSet || isChatStickerSet) && (\n              <span className=\"symbol-set-chat\">{lang(isChatEmojiSet ? 'GroupEmoji' : 'GroupStickers')}</span>\n            )}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <Icon className=\"symbol-set-remove\" name=\"close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(\n          'symbol-set-container shared-canvas-container',\n          transitionClassNames,\n          stickerSet.id === EFFECT_EMOJIS_SET_ID && 'effect-emojis',\n        )}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <Icon name=\"star\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              onContextMenu={onReactionContext}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                shouldIgnorePremium={isChatEmojiSet}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n                isEffectEmoji={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n                noShowPremium={isCurrentUserPremium\n                  && (stickerSet.id === EFFECT_STICKERS_SET_ID || stickerSet.id === EFFECT_EMOJIS_SET_ID)}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSet);\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lq8BD6Hc\",\"main\":\"p7c8y0LH\",\"hasHeader\":\"zTGriBHY\",\"main_customEmoji\":\"U0BL1VvK\",\"mainCustomEmoji\":\"U0BL1VvK\",\"header\":\"Qn3lBUNs\",\"headerWithBorder\":\"HMspKpNp\",\"stickerCover\":\"YKO0Obwy\",\"activated\":\"y02WwQk6\",\"pickerDisabled\":\"BZfaP1GD\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiReaction, ApiReactionWithPaid, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChatFullInfo,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique } from '../../util/iteratees';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  chatEmojiSetId?: string;\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  isWithPaidReaction?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst RECENT_DEFAULT_STATUS_COUNT = 7;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  stickerSetsById,\n  chatEmojiSetId,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  defaultTagReactions,\n  isWithPaidReaction,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onReactionContext,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker && isSavedMessages) {\n      if (defaultTagReactions?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('PremiumPreviewTags'),\n          reactions: defaultTagReactions,\n          count: defaultTagReactions.length,\n          isEmoji: true,\n        });\n      }\n    }\n\n    if (isReactionPicker && !isSavedMessages) {\n      const topReactionsSlice: ApiReactionWithPaid[] = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (isWithPaidReaction) {\n        topReactionsSlice.unshift({ type: 'paid' });\n      }\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .filter(({ isInactive }) => !isInactive)\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = defaultStatusIconsPack.stickers\n          .slice(0, RECENT_DEFAULT_STATUS_COUNT)\n          .concat(recentCustomEmojis || []);\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const userSetIds = [...(addedCustomEmojiIds || [])];\n    if (chatEmojiSetId) {\n      userSetIds.unshift(chatEmojiSetId);\n    }\n\n    const setIdsToDisplay = unique(userSetIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, lang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId, isSavedMessages, defaultTagReactions, chatEmojiSetId,\n    isWithPaidReaction,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <Icon name=\"recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !loadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n    pickerStyles.hasHeader,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n          const isChatEmojiSet = stickerSet.id === chatEmojiSetId;\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isChatEmojiSet={isChatEmojiSet}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={onReactionSelect}\n              onReactionContext={onReactionContext}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      reactions: {\n        availableReactions,\n        recentReactions,\n        topReactions,\n        defaultTags,\n      },\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n\n    return {\n      customEmojisById: !isStatusPicker ? customEmojisById : undefined,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      chatEmojiSetId: chatFullInfo?.emojiSet?.id,\n      isWithPaidReaction: isReactionPicker && chatFullInfo?.isPaidReactionAvailable,\n      availableReactions: isReactionPicker ? availableReactions : undefined,\n      defaultTagReactions: isReactionPicker ? defaultTags : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qk9PEGRE\",\"activated\":\"WYeuJNQx\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"hRzvfaRb\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"pUyNTysT\",\"modal\":\"IK2mBqbm\",\"loading\":\"zjXCH3pT\",\"description\":\"j6xEoljc\",\"bold\":\"hAA6B1lc\",\"chip\":\"smWR78pO\",\"replaceModal\":\"GIFAjZPY\",\"replaceModalContent\":\"Jxyz9TaL\",\"avatarContainer\":\"OKp6HS1U\",\"arrow\":\"WSJdWV7L\",\"boostedWrapper\":\"NU9itcIm\",\"boostedMark\":\"upXvhNRY\"};","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiMyBoost } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle, isChatAdmin, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateInFuture } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  boost?: ApiMyBoost;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n  canBoostMore?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  modal: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  prevBoostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  modal,\n  chat,\n  chatFullInfo,\n  prevBoostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n    loadFullChat,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isChannel = chat && isChatChannel(chat);\n\n  const isOpen = Boolean(modal);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (chat && !chatFullInfo) {\n      loadFullChat({ chatId: chat.id });\n    }\n  }, [chat, chatFullInfo]);\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, chat);\n  }, [chat, lang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!prevBoostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, prevBoostedChat);\n  }, [prevBoostedChat, lang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    boost,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n    canBoostMore,\n  }: BoostInfo = useMemo(() => {\n    if (!modal?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: lang('Loading'),\n      };\n    }\n\n    const {\n      hasMyBoost,\n    } = modal.boostStatus;\n\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, chat.id);\n    const areBoostsInDifferentChannels = modal?.myBoosts && !areAllBoostsInChannel(modal.myBoosts, chat.id);\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n      isMaxLevel,\n    } = getBoostProgressInfo(modal.boostStatus, true);\n\n    const hasBoost = hasMyBoost;\n\n    const left = lang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? lang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = lang('ChannelBoost.MoreBoosts', remainingBoosts);\n\n    const modalTitle = isChannel ? lang('BoostChannel') : lang('BoostGroup');\n\n    const boostsLeftToUnrestrict = (chatFullInfo?.boostsToUnrestrict || 0) - (chatFullInfo?.boostsApplied || 0);\n\n    let description: string | undefined;\n    if (isMaxLevel) {\n      description = lang('BoostsMaxLevelReached');\n    } else if (boostsLeftToUnrestrict > 0 && !isChatAdmin(chat)) {\n      const boostTimes = lang('GroupBoost.BoostToUnrestrict.Times', boostsLeftToUnrestrict);\n      description = lang('GroupBoost.BoostToUnrestrict', [boostTimes, chatTitle]);\n    } else {\n      description = lang('ChannelBoost.MoreBoostsNeeded.Text', [chatTitle, moreBoosts]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      boost: firstBoost,\n      isBoosted: hasBoost,\n      canBoostMore: areBoostsInDifferentChannels && !isMaxLevel,\n    };\n  }, [chat, chatTitle, modal, lang, chatFullInfo, isChannel]);\n\n  const isBoostDisabled = !modal?.myBoosts?.length && isCurrentUserPremium;\n  const isReplacingBoost = boost?.chatId && boost.chatId !== modal?.chatId;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id, slots: [boost!.slot] });\n    requestConfetti({});\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!boost) {\n      if (!isCurrentUserPremium) {\n        openPremiumDialog();\n        return;\n      }\n\n      closeBoostModal();\n      return;\n    }\n\n    if (!canBoostMore) {\n      closeBoostModal();\n      return;\n    }\n\n    if (boost.cooldownUntil) {\n      openWaitDialog();\n      return;\n    }\n\n    if (isReplacingBoost) {\n      openReplaceModal();\n      return;\n    }\n\n    handleApplyBoost();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        {isBoosted && (\n          <div className={buildClassName(styles.description, styles.bold)}>\n            {lang('ChannelBoost.YouBoostedChannelText', chatTitle)}\n          </div>\n        )}\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {canBoostMore ? (\n              <>\n                <Icon name=\"boost\" />\n                {lang(isChannel ? 'ChannelBoost.BoostChannel' : 'GroupBoost.BoostGroup')}\n              </>\n            ) : lang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {isReplacingBoost && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={prevBoostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(lang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {lang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {lang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {Boolean(boost?.cooldownUntil) && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={lang('OK')}\n          title={lang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            lang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatDateInFuture(lang, getServerTime(), boost!.cooldownUntil),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={lang('Common.Yes')}\n          title={lang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(lang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nfunction getFirstAvailableBoost(myBoosts: ApiMyBoost[], chatId?: string) {\n  return myBoosts.find((boost) => !boost.chatId)\n    || myBoosts.filter((b) => chatId && b.chatId !== chatId)\n      .sort((a, b) => a.date - b.date)[0];\n}\n\nfunction areAllBoostsInChannel(myBoosts: ApiMyBoost[], chatId: string) {\n  return myBoosts.every((boost) => boost.chatId === chatId);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal && selectChat(global, modal?.chatId);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, modal.chatId);\n    const boostedChat = firstBoost?.chatId ? selectChat(global, firstBoost?.chatId) : undefined;\n\n    return {\n      chat,\n      chatFullInfo,\n      prevBoostedChat: boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"clickable\":\"IzcASdzD\",\"centered\":\"xVLGjLub\",\"logo\":\"Mtx4SWww\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { selectChatMessage, selectSender } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport TableInfoModal, { type TableData } from '../common/TableInfoModal';\n\nimport styles from './GiftCodeModal.module.scss';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  modal: TabState['giftCodeModal'];\n};\n\nexport type StateProps = {\n  currentUserId?: string;\n  messageSender?: ApiPeer;\n};\n\nconst GIFTCODE_PATH = 'giftcode';\n\nconst GiftCodeModal = ({\n  currentUserId,\n  modal,\n  messageSender,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftCodeModal, applyGiftCode, focusMessage,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const canUse = (!modal?.info.toId || modal?.info.toId === currentUserId) && !modal?.info.usedAt;\n\n  const handleOpenGiveaway = useLastCallback(() => {\n    if (!modal || !modal.info.giveawayMessageId) return;\n    focusMessage({\n      chatId: modal.info.fromId!,\n      messageId: modal.info.giveawayMessageId,\n    });\n    closeGiftCodeModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (canUse) {\n      applyGiftCode({ slug: modal!.slug });\n      return;\n    }\n    closeGiftCodeModal();\n  });\n\n  const modalData = useMemo(() => {\n    if (!modal) return undefined;\n    const { slug, info } = modal;\n\n    const fromId = info.fromId || messageSender?.id;\n\n    const header = (\n      <>\n        <img src={PremiumLogo} alt=\"\" className={styles.logo} />\n        <p className={styles.centered}>{renderText(lang('lng_gift_link_about'), ['simple_markdown'])}</p>\n        <LinkField title=\"BoostingGiftLink\" link={`${TME_LINK_PREFIX}/${GIFTCODE_PATH}/${slug}`} />\n      </>\n    );\n\n    const tableData = [\n      [lang('BoostingFrom'), fromId ? { chatId: fromId } : lang('BoostingNoRecipient')],\n      [lang('BoostingTo'), info.toId ? { chatId: info.toId } : lang('BoostingNoRecipient')],\n      [lang('BoostingGift'), lang('BoostingTelegramPremiumFor', lang('Months', info.months, 'i'))],\n      [lang('BoostingReason'), (\n        <span className={buildClassName(info.giveawayMessageId && styles.clickable)} onClick={handleOpenGiveaway}>\n          {info.isFromGiveaway && !info.toId ? lang('BoostingIncompleteGiveaway')\n            : lang(info.isFromGiveaway ? 'BoostingGiveaway' : 'BoostingYouWereSelected')}\n        </span>\n      )],\n      [lang('BoostingDate'), formatDateTimeToString(info.date * 1000, lang.code, true)],\n    ] satisfies TableData;\n\n    const footer = (\n      <span className={styles.centered}>\n        {renderText(\n          info.usedAt ? lang('BoostingUsedLinkDate', formatDateTimeToString(info.usedAt * 1000, lang.code, true))\n            : lang('BoostingSendLinkToAnyone'),\n          ['simple_markdown'],\n        )}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [lang, messageSender?.id, modal]);\n\n  if (!modalData) return undefined;\n\n  return (\n    <TableInfoModal\n      isOpen={isOpen}\n      title={lang('lng_gift_link_title')}\n      tableData={modalData.tableData}\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={canUse ? lang('BoostingUseLink') : lang('Close')}\n      onButtonClick={handleButtonClick}\n      onClose={closeGiftCodeModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { message } = modal || {};\n    const chatMessage = message && selectChatMessage(global, message.chatId, message.messageId);\n    const sender = chatMessage && selectSender(global, chatMessage);\n\n    return {\n      currentUserId: global.currentUserId,\n      messageSender: sender,\n    };\n  },\n)(GiftCodeModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"dl10exNi\",\"picker-wrapper\":\"gxWY5c6x\",\"pickerWrapper\":\"gxWY5c6x\",\"picker-header\":\"h8N7eyob\",\"pickerHeader\":\"h8N7eyob\",\"picker-header-info\":\"Rth2Qu07\",\"pickerHeaderInfo\":\"Rth2Qu07\",\"selection-toggle\":\"B6eAugx8\",\"selectionToggle\":\"B6eAugx8\",\"foldersWrapper\":\"mwcvgD2S\",\"folders\":\"LKavx8ww\",\"folder\":\"qglLx5Dn\",\"button-text\":\"bgaRuEMs\",\"buttonText\":\"bgaRuEMs\",\"button-badge\":\"rTe14Z22\",\"buttonBadge\":\"rTe14Z22\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = hasChatsToAdd\n    ? lang('FolderLinkSubtitleChats', [newChatsCount, folder.title], undefined, newChatsCount)\n    : lang('FolderLinkSubtitleAlready', folder.title);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.alreadyPeerIds}\n          lockedSelectedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(suggestedPeerIds);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useOldLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(lang('FolderLinkSubtitle', invite.title), ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.peerIds}\n          lockedSelectedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkButtonAdd', invite.title)}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  modal,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(modal);\n  const renderingInfo = usePreviousDeprecated(modal) || modal;\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) return renderingFolder.title;\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) return renderingInfo.invite.title;\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: string) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab className={styles.folder} isActive badgeCount={folderTabNumber} isBadgeActive title={folderTitle} />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { invite, removal } = modal || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MZ0RCecx\",\"title\":\"ar8XeydN\",\"participantCount\":\"un00TXYY\",\"participants\":\"YvkZ6c2D\",\"participant\":\"DHJSBDeE\",\"buttons\":\"KFtrPtNr\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { getCustomPeerFromInvite, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport PeerBadge from '../../common/PeerBadge';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './ChatInviteModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['chatInviteModal'];\n};\n\nconst ChatInviteModal = ({ modal }: OwnProps) => {\n  const { acceptChatInvite, closeChatInviteModal, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const participantsRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const prevModal = usePrevious(modal);\n  const { hash, inviteInfo } = modal || prevModal || {};\n  const {\n    about, isBroadcast, participantIds, participantsCount, photo, isRequestNeeded,\n  } = inviteInfo || {};\n\n  const handleClose = useLastCallback(() => {\n    closeChatInviteModal();\n  });\n\n  const handleAccept = useLastCallback(() => {\n    acceptChatInvite({ hash: hash! });\n\n    showNotification({\n      message: isBroadcast ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n    });\n\n    handleClose();\n  });\n\n  const acceptLangKey = isBroadcast ? 'ProfileJoinChannel' : 'JoinGroup';\n  const requestToJoinLangKey = isBroadcast ? 'MemberRequests.RequestToJoinChannel'\n    : 'MemberRequests.RequestToJoinGroup';\n\n  const customPeer = useMemo(() => {\n    if (!inviteInfo) return undefined;\n\n    return getCustomPeerFromInvite(inviteInfo);\n  }, [inviteInfo]);\n\n  const participants = useMemo(() => {\n    if (!participantIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return participantIds.map((id) => selectUser(global, id)).filter(Boolean);\n  }, [participantIds]);\n\n  useHorizontalScroll(participantsRef, !modal || !participants);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      contentClassName={styles.content}\n      isSlim\n      onClose={handleClose}\n      onEnter={handleAccept}\n    >\n      {customPeer && <Avatar size=\"jumbo\" photo={photo} peer={customPeer} withVideo />}\n      {customPeer && <FullNameTitle className={styles.title} peer={customPeer} />}\n      {about && <p className={styles.about}>{about}</p>}\n      <p className={styles.participantCount}>\n        {lang(isBroadcast ? 'Subscribers' : 'Members', participantsCount, 'i')}\n      </p>\n      {participants && (\n        <div ref={participantsRef} className={buildClassName(styles.participants, 'no-scrollbar')}>\n          {participants.map((participant) => (\n            <PeerBadge className={styles.participant} peer={participant} text={getUserFullName(participant)} />\n          ))}\n        </div>\n      )}\n      <div className={buildClassName('dialog-buttons', styles.buttons)}>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleAccept}>\n          {lang(isRequestNeeded ? requestToJoinLangKey : acceptLangKey)}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ChatInviteModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LAh8evux\",\"title\":\"yfODVQ1M\",\"description\":\"QaQn08BX\",\"secondary\":\"sQZslvAr\",\"topIcon\":\"jySLtQNG\",\"content\":\"hrizpMDe\",\"separator\":\"En1zD2cT\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './TableAboutModal.module.scss';\n\nexport type TableAboutData = [IconName | undefined, TeactNode, TeactNode][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  listItemData?: TableAboutData;\n  headerIconName: IconName;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableAboutModal = ({\n  isOpen,\n  listItemData,\n  headerIconName,\n  header,\n  footer,\n  buttonText,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      <div className={styles.topIcon}><Icon name={headerIconName} /></div>\n      {header}\n      <div>\n        {listItemData?.map(([icon, title, subtitle]) => {\n          return (\n            <ListItem\n              isStatic\n              multiline\n              icon={icon}\n            >\n              <span className=\"title\">{title}</span>\n              <span className=\"subtitle\">{subtitle}</span>\n            </ListItem>\n          );\n        })}\n      </div>\n      <Separator className={styles.separator} />\n      {footer}\n      {buttonText && (\n        <Button onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableAboutModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GsS8Jrki\",\"title\":\"FqyZSYhX\",\"description\":\"DkalJSBt\",\"secondary\":\"xNUKKd8T\",\"content\":\"qxOr0JyQ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { TableAboutData } from '../modals/common/TableAboutModal';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useSelectorSignal from '../../hooks/data/useSelectorSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TableAboutModal from '../modals/common/TableAboutModal';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutAdsModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isMonetizationSharing?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutAdsModal: FC<OwnProps> = ({\n  isOpen,\n  isMonetizationSharing,\n  onClose,\n}) => {\n  const oldLang = useOldLang();\n\n  const minLevelSignal = useSelectorSignal((global) => global.appConfig?.channelRestrictAdsLevelMin);\n  const minLevelToRestrictAds = useDerivedState(minLevelSignal);\n\n  const regularAdContent = useMemo(() => {\n    return (\n      <>\n        <h3>{oldLang('SponsoredMessageInfoScreen.Title')}</h3>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n        <p>\n          <SafeLink\n            url={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n            text={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n          />\n        </p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      </>\n    );\n  }, [oldLang]);\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <>\n        <h3 className={styles.title}>{oldLang('AboutRevenueSharingAds')}</h3>\n        <p className={buildClassName(styles.description, styles.secondary)}>\n          {oldLang('RevenueSharingAdsAlertSubtitle')}\n        </p>\n      </>\n    );\n\n    const listItemData = [\n      ['lock', oldLang('RevenueSharingAdsInfo1Title'),\n        renderText(oldLang('RevenueSharingAdsInfo1Subtitle'), ['simple_markdown'])],\n      ['revenue-split', oldLang('RevenueSharingAdsInfo2Title'),\n        renderText(oldLang('RevenueSharingAdsInfo2Subtitle'), ['simple_markdown'])],\n      ['nochannel', oldLang('RevenueSharingAdsInfo3Title'),\n        renderText(oldLang('RevenueSharingAdsInfo3Subtitle', minLevelToRestrictAds), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{renderText(oldLang('RevenueSharingAdsInfo4Title'), ['simple_markdown'])}</h3>\n        <p className={styles.description}>\n          {renderText(oldLang('RevenueSharingAdsInfo4Subtitle2', ''), ['simple_markdown'])}\n          <SafeLink\n            url={oldLang('PromoteUrl')}\n            text={oldLang('LearnMoreArrow')}\n          />\n        </p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, minLevelToRestrictAds]);\n\n  if (isMonetizationSharing && modalData) {\n    return (\n      <TableAboutModal\n        isOpen={isOpen}\n        listItemData={modalData.listItemData}\n        headerIconName=\"channel\"\n        header={modalData.header}\n        footer={modalData.footer}\n        buttonText={oldLang('RevenueSharingAdsUnderstood')}\n        onClose={onClose}\n      />\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {regularAdContent}\n      <Button\n        size=\"smaller\"\n        onClick={onClose}\n      >\n        {oldLang('RevenueSharingAdsUnderstood')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(AboutAdsModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"t9iZUzOj\",\"description\":\"mjveZmdr\",\"toncoin\":\"ATkOSqJ7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { TableAboutData } from '../modals/common/TableAboutModal';\n\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TableAboutModal from '../modals/common/TableAboutModal';\nimport Icon from './icons/Icon';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutMonetizationModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const blockchainText = useMemo(() => {\n    const linkText = oldLang('LearnMore');\n    return lang(\n      'ChannelEarnLearnCoinAbout',\n      {\n        link: (\n          <SafeLink url={oldLang('MonetizationInfoTONLink')} text={linkText}>\n            {linkText}\n            <Icon name=\"next\" />\n          </SafeLink>\n        ),\n      },\n      {\n        withNodes: true,\n      },\n    );\n  }, [lang, oldLang]);\n\n  const monetizationTitle = useMemo(() => {\n    return lang(\n      'MonetizationInfoTONTitle',\n      undefined,\n      {\n        withNodes: true,\n        specialReplacement: { '💎': <Icon className={styles.toncoin} name=\"toncoin\" /> },\n      },\n    );\n  }, [lang]);\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <h3 className={styles.title}>{oldLang('lng_channel_earn_learn_title')}</h3>\n    );\n\n    const listItemData = [\n      ['channel', oldLang('lng_channel_earn_learn_in_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_in_about'), ['simple_markdown'])],\n      ['revenue-split', oldLang('lng_channel_earn_learn_split_subtitle'),\n        renderText(oldLang('Monetization.Intro.Split.Text'), ['simple_markdown'])],\n      ['cash-circle', oldLang('lng_channel_earn_learn_out_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_out_about'), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{monetizationTitle}</h3>\n        <p className={styles.description}>{blockchainText}</p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, monetizationTitle, blockchainText]);\n\n  if (!modalData) {\n    return undefined;\n  }\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      listItemData={modalData.listItemData}\n      headerIconName=\"cash-circle\"\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={oldLang('RevenueSharingAdsUnderstood')}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(AboutMonetizationModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WqeWhMAS\",\"content\":\"oofoCYlu\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Modal from '../ui/Modal';\nimport PasswordForm from './PasswordForm';\n\nimport styles from './VerificationMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  chatId: string;\n  passwordHint?: string;\n  error?: string;\n  isLoading?: boolean;\n};\n\nconst VerificationMonetizationModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  onClose,\n  passwordHint,\n  error,\n  isLoading,\n}) => {\n  const {\n    clearMonetizationInfo, loadMonetizationRevenueWithdrawalUrl,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useLastCallback((password: string) => {\n    loadMonetizationRevenueWithdrawalUrl({\n      chatId,\n      currentPassword: password,\n      onSuccess: () => {\n        onClose();\n      },\n    });\n  });\n\n  const handleClearError = useLastCallback(() => {\n    clearMonetizationInfo();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('EnterPassword')}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      <div className={buildClassName(styles.content, 'settings-content password-form custom-scroll')}>\n        <div className=\"settings-item pt-0\">\n          <PasswordForm\n            shouldShowSubmit\n            placeholder={lang('Password')}\n            error={error && lang(error)}\n            description={lang('Channel.OwnershipTransfer.EnterPasswordText')}\n            clearError={handleClearError}\n            isLoading={isLoading}\n            hint={passwordHint}\n            isPasswordVisible={shouldShowPassword}\n            shouldResetValue={isOpen}\n            onChangePasswordVisibility={setShouldShowPassword}\n            onSubmit={handleSubmit}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(VerificationMonetizationModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"qJDgUtjV\",\"modalTitle\":\"ZAdG13Ah\",\"optionText\":\"oWujoaSC\",\"option\":\"aFbjDzNo\",\"optionButton\":\"VbE0HzDs\",\"sectionTitle\":\"jrA2dOiw\",\"description\":\"k71Zrc_P\",\"title\":\"mMmY6YR4\",\"titleMultiline\":\"lVVyV0py\",\"subtitle\":\"gSkAFc4u\",\"transition\":\"HjsGIG6e\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportAdModal.module.scss';\n\nconst ADDED_PADDING = 40;\n\nexport type OwnProps = {\n  modal: TabState['reportAdModal'];\n};\n\nconst ReportAdModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportSponsoredMessage, closeReportAdModal, openPreviousReportAdModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const { chatId, randomId } = modal!;\n    reportSponsoredMessage({ chatId, randomId, option });\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    if (!renderingDepth) {\n      closeReportAdModal();\n      return;\n    }\n\n    openPreviousReportAdModal();\n  });\n\n  const bottomText = useMemo(() => {\n    if (!modal) return undefined;\n    const template = lang('lng_report_sponsored_reported_learn');\n    const parts = template.split('{link}');\n    return [\n      parts[0],\n      <SafeLink text={lang('lng_report_sponsored_reported_link')} url={lang('ReportAd.Help_URL')} />,\n      parts[1],\n    ];\n  }, [lang, modal]);\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(renderingDepth ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <Icon name={renderingDepth ? 'arrow-left' : 'close'} />\n        </Button>\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={styles.title}>{lang('ReportAd')}</h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.subtitle]);\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      header={header}\n      onClose={closeReportAdModal}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3>\n          {renderingSection?.options.map((option) => (\n            <ListItem\n              narrow\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n        </div>\n        <p className={styles.description}>{bottomText}</p>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAdModal);\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  const resetPermissions = useCallback(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n  }, [defaultPermissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n    resetPermissions,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatBannedRights } from '../../api/types';\n\nimport { isChatPublic } from '../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\n\nexport type OwnProps = {\n  chatId?: string;\n  handlePermissionChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  permissions: ApiChatBannedRights;\n  isMediaDropdownOpen: boolean;\n  setIsMediaDropdownOpen: (open: boolean) => void;\n  className?: string;\n  shiftedClassName?: string;\n  dropdownClassName?: string;\n  withCheckbox?: boolean;\n  permissionGroup?: boolean;\n  getControlIsDisabled?: (key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => boolean | undefined;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasLinkedChat?: boolean;\n};\n\nconst permissionKeyList: (keyof ApiChatBannedRights)[] = [\n  'sendPhotos', 'sendVideos', 'sendStickers',\n  'sendAudios', 'sendDocs', 'sendVoices', 'sendRoundvideos', 'embedLinks', 'sendPolls',\n];\n\nconst PermissionCheckboxList: FC<OwnProps & StateProps> = ({\n  chat,\n  isMediaDropdownOpen,\n  setIsMediaDropdownOpen,\n  hasLinkedChat,\n  permissions,\n  handlePermissionChange,\n  className,\n  shiftedClassName,\n  dropdownClassName,\n  withCheckbox,\n  getControlIsDisabled,\n  permissionGroup,\n}) => {\n  const {\n    showNotification,\n  } = getActions();\n\n  const { isForum } = chat || {};\n\n  const lang = useOldLang();\n\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  const countCheckedPermissions = useMemo(() => {\n    return permissionKeyList.reduce((count, key) => {\n      if (!permissions[key]) {\n        count += 1;\n      }\n      return count;\n    }, 0);\n  }, [permissions]);\n\n  const handleOpenMediaDropdown = useLastCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  });\n\n  const handleDisabledClick = useLastCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  });\n\n  return (\n    <>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendPlain\"\n          checked={!permissions.sendPlain}\n          label={lang('UserRestrictionsSend')}\n          blocking\n          permissionGroup={permissionGroup}\n          onChange={handlePermissionChange}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendPlain')}\n        />\n      </div>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendMedia\"\n          checked={!permissions.sendMedia}\n          label={lang('UserRestrictionsSendMedia')}\n          labelText={`${countCheckedPermissions}/${permissionKeyList.length}`}\n          blocking\n          permissionGroup={permissionGroup}\n          rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n          onChange={handlePermissionChange}\n          onClickLabel={handleOpenMediaDropdown}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendMedia')}\n        />\n      </div>\n      <div className={dropdownClassName}>\n        <div\n          className={className}\n        >\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPhotos\"\n              checked={!permissions.sendPhotos}\n              label={lang('UserRestrictionsSendPhotos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPhotos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVideos\"\n              checked={!permissions.sendVideos}\n              label={lang('UserRestrictionsSendVideos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendStickers\"\n              checked={!permissions.sendStickers && !permissions.sendGifs}\n              label={lang('UserRestrictionsSendStickers')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendStickers')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendAudios\"\n              checked={!permissions.sendAudios}\n              label={lang('UserRestrictionsSendMusic')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendAudios')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendDocs\"\n              checked={!permissions.sendDocs}\n              label={lang('UserRestrictionsSendFiles')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendDocs')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVoices\"\n              checked={!permissions.sendVoices}\n              label={lang('UserRestrictionsSendVoices')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVoices')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendRoundvideos\"\n              checked={!permissions.sendRoundvideos}\n              label={lang('UserRestrictionsSendRound')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendRoundvideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"embedLinks\"\n              checked={!permissions.embedLinks}\n              label={lang('UserRestrictionsEmbedLinks')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('embedLinks')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPolls\"\n              checked={!permissions.sendPolls}\n              label={lang('UserRestrictionsSendPolls')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPolls')}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={shiftedClassName}>\n        <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n          <Checkbox\n            name=\"inviteUsers\"\n            checked={!permissions.inviteUsers}\n            label={lang('UserRestrictionsInviteUsers')}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n            disabled={getControlIsDisabled && getControlIsDisabled('inviteUsers')}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"pinMessages\"\n            checked={!permissions.pinMessages}\n            label={lang('UserRestrictionsPinMessages')}\n            disabled={getControlIsDisabled ? getControlIsDisabled('pinMessages')\n              : shouldDisablePermissionForPublicGroup}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"changeInfo\"\n            checked={!permissions.changeInfo}\n            label={lang('UserRestrictionsChangeInfo')}\n            blocking\n            permissionGroup={permissionGroup}\n            disabled={getControlIsDisabled ? getControlIsDisabled('changeInfo')\n              : shouldDisablePermissionForPublicGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        {isForum && (\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"manageTopics\"\n              checked={!permissions.manageTopics}\n              label={lang('CreateTopicsPermission')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('manageTopics')}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const fullInfo = chat && selectChatFullInfo(global, chat.id);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      hasLinkedChat,\n    };\n  },\n)(PermissionCheckboxList));\n","// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"PPDx7_5v\",\"container\":\"axa67kqo\",\"title\":\"U4IFhV0a\",\"singleTitle\":\"qd6OFHiG\",\"actionTitle\":\"yGhFKTl5\",\"restrictionTitle\":\"t3KOsBfm\",\"listItemButton\":\"MsCAZhTn\",\"button\":\"goI3MITH\",\"dropdownList\":\"czTjjKim\",\"dialogButtons\":\"JTT_DIRv\",\"restrictionContainer\":\"iv0u9Zw6\",\"restrictionContainerOpen\":\"qCQftA04\",\"dropdownListOpen\":\"Ifpyv7Jp\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiChatMember, ApiMessage, ApiPeer,\n} from '../../api/types';\nimport type { IAlbum } from '../../types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport { REPLIES_USER_ID } from '../../config';\nimport {\n  getHasAdminRight,\n  getPrivateChatUserId,\n  getUserFirstOrLastName, getUserFullName,\n  isChatBasicGroup,\n  isChatSuperGroup, isOwnMessage,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectAllowedMessageActionsSlow,\n  selectBot,\n  selectChat, selectChatFullInfo, selectCurrentMessageIds,\n  selectCurrentMessageList, selectSender, selectSenderFromMessage, selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './DeleteMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isSuperGroup?: boolean;\n  sender: ApiPeer | undefined;\n  currentUserId?: string;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  messageIdList: number[] | undefined;\n  adminMembersById?: Record<string, ApiChatMember>;\n  chatBot?: boolean;\n  isSchedule?: boolean;\n  message?: ApiMessage;\n  album?: IAlbum;\n  onConfirm?: NoneToVoidFunction;\n  isOwn?: boolean;\n  canBanUsers?: boolean;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isGroup,\n  isSuperGroup,\n  sender,\n  currentUserId,\n  messageIdList,\n  isSchedule,\n  message,\n  album,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  adminMembersById,\n  chatBot,\n  isOwn,\n  canBanUsers,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n    reportMessages,\n    deleteChatMember,\n    updateChatMemberBannedRights,\n    closeDeleteMessageModal,\n  } = getActions();\n\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n\n  const lang = useOldLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [chosenDeleteOption, setChosenDeleteOption] = useState<string[] | undefined>(undefined);\n  const [chosenBanOption, setChosenBanOptions] = useState<string[] | undefined>(undefined);\n  const [chosenSpanOption, setChosenSpanOptions] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n  const isSenderOwner = useMemo(() => {\n    return sender && adminMembersById && adminMembersById[sender.id] && adminMembersById[sender.id].isOwner;\n  }, [sender, adminMembersById]);\n\n  const user = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!sender || isSchedule) return undefined;\n\n    return usersById[sender.id];\n  }, [isSchedule, sender]);\n\n  const shouldShowAdditionalOptions = useMemo(() => {\n    return user && user.id !== currentUserId;\n  }, [user, currentUserId]);\n\n  const shouldShowOptions = shouldShowAdditionalOptions && !canDeleteForAll && !isSchedule && (isGroup || isSuperGroup);\n\n  const userName = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!sender || isSchedule) return '';\n\n    return getUserFullName(usersById[sender.id]);\n  }, [isSchedule, sender]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: lang('ReportSpamTitle'),\n      },\n    ];\n  }, [lang, user]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: lang('DeleteAllFrom', userName),\n      },\n    ];\n  }, [lang, user, userName]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: (message && isAdditionalOptionsVisible ? lang('KickFromSupergroup') : lang('DeleteBan', userName)),\n      },\n    ];\n  }, [isAdditionalOptionsVisible, lang, message, user, userName]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible(!isAdditionalOptionsVisible);\n  });\n\n  const filterMessageIdByUserId = useLastCallback((userIds: string[], selectedMessageIdList: number[]) => {\n    if (!chat) return MEMO_EMPTY_ARRAY;\n    return selectedMessageIdList.filter((msgId) => {\n      const senderPeer = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n      return senderPeer && userIds.includes(senderPeer.id);\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    if (filteredMessageIdList?.length) {\n      deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n    }\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message!.id];\n    deleteMessages({ messageIds, shouldDeleteForAll: true });\n    closeDeleteMessageModal();\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    if (!chat) return;\n\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message!.id];\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else if (!isOwn && (chosenSpanOption || chosenDeleteOption || chosenBanOption) && (isGroup || isSuperGroup)) {\n      if (chosenSpanOption) {\n        const filteredMessageIdList = filterMessageIdByUserId(chosenSpanOption, messageIdList!);\n        if (filteredMessageIdList && filteredMessageIdList.length) {\n          reportMessages({ messageIds: filteredMessageIdList, reason: 'spam', description: '' });\n        }\n      }\n\n      if (chosenDeleteOption) {\n        const filteredMessageIdList = filterMessageIdByUserId(chosenDeleteOption, messageIdList!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && !havePermissionChanged && message) {\n        const filteredUserIdList = chosenBanOption.filter((userId) => messageIds?.some((msgId) => {\n          const senderPeer = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return senderPeer && senderPeer.id === userId;\n        }));\n        handleDeleteMember(filteredUserIdList);\n        deleteMessages({\n          messageIds: [message.id],\n          shouldDeleteForAll: false,\n        });\n      }\n\n      if (chosenBanOption && havePermissionChanged) {\n        const filteredUserIdList = chosenBanOption.filter((userId) => messageIds?.some((msgId) => {\n          const senderPeer = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return senderPeer && senderPeer.id === userId;\n        }));\n        handleUpdateChatMemberBannedRights(filteredUserIdList);\n      }\n    } else {\n      deleteMessages({\n        messageIds,\n        shouldDeleteForAll: false,\n      });\n    }\n    closeDeleteMessageModal();\n  });\n\n  const handleDeleteOptionChange = useLastCallback((options: string[]) => {\n    setChosenDeleteOption(options);\n  });\n\n  const handleBanOptionChange = useLastCallback((options: string[]) => {\n    setChosenBanOptions(options);\n  });\n\n  const handleSpanOptionChange = useLastCallback((options: string[]) => {\n    setChosenSpanOptions(options);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeDeleteMessageModal();\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      setChosenSpanOptions(undefined);\n      setChosenDeleteOption(undefined);\n      setChosenBanOptions(undefined);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div className={shouldShowOptions && styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        {shouldShowOptions && (\n          <Avatar\n            size=\"small\"\n            peer={user!}\n          />\n        )}\n        <h3 className={shouldShowOptions ? styles.title : styles.singleTitle}>{lang('DeleteSingleMessagesTitle')}</h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={handleSpanOptionChange}\n          selected={chosenSpanOption}\n        />\n        <CheckboxGroup\n          options={ACTION_DELETE_OPTION}\n          onChange={handleDeleteOptionChange}\n          selected={chosenDeleteOption}\n        />\n        {!isSenderOwner && canBanUsers && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={handleBanOptionChange}\n            selected={chosenBanOption}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {lang('UserRestrictionsCanDoUsers', 1)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          permissionGroup\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(\n            styles.dropdownList,\n            isMediaDropdownOpen && styles.dropdownListOpen,\n          )}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n    >\n      <div className={buildClassName(styles.mainContainer, 'custom-scroll')}>\n        {renderHeader()}\n        {shouldShowOptions && (\n          <>\n            <p className={styles.actionTitle}>{lang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              chosenBanOption && canBanUsers && chosenBanOption?.length ? (\n                <ListItem\n                  narrow\n                  className={styles.listItemButton}\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {lang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {(chatBot || !shouldShowAdditionalOptions) && (\n          <>\n            <p>{lang('AreYouSureDeleteSingleMessage')}</p>\n            {willDeleteForCurrentUserOnly && (\n              <p>{lang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n            )}\n            {willDeleteForAll && (\n              <p>{lang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n            )}\n          </>\n        )}\n        <div className={canDeleteForAll ? 'dialog-buttons-column'\n          : buildClassName('dialog-buttons', isAdditionalOptionsVisible && styles.dialogButtons)}\n        >\n          {canDeleteForAll && (\n            <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n              {contactName && renderText(lang('Conversation.DeleteMessagesFor', contactName))}\n              {!contactName && lang('Conversation.DeleteMessagesForEveryone')}\n            </Button>\n          )}\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n            {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={handleClose}\n          >{lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      deleteMessageModal,\n    } = selectTabState(global);\n    const chatId = deleteMessageModal && deleteMessageModal.message?.chatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const { threadId, type } = selectCurrentMessageList(global) || {};\n    const { canDeleteForAll } = (deleteMessageModal && deleteMessageModal.message && threadId\n      && selectAllowedMessageActionsSlow(global, deleteMessageModal.message, threadId)) || {};\n    const adminMembersById = chatFullInfo && chatFullInfo?.adminMembersById;\n    const messageIdList = chat && selectCurrentMessageIds(global, chat.id, threadId!, type!);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const sender = deleteMessageModal?.message && selectSender(global, deleteMessageModal.message);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const isChatWithBot = Boolean(deleteMessageModal && deleteMessageModal.message\n      && selectBot(global, deleteMessageModal.message.chatId));\n    const chatBot = Boolean(chat && chat.id !== REPLIES_USER_ID && selectBot(global, chat.id));\n    const canBanUsers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n    const isOwn = deleteMessageModal && deleteMessageModal.message && isOwnMessage(deleteMessageModal.message);\n\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      chat,\n      isGroup,\n      isSuperGroup,\n      currentUserId: global.currentUserId,\n      sender,\n      messageIdList,\n      canDeleteForAll: deleteMessageModal && !deleteMessageModal.isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      adminMembersById,\n      chatBot,\n      isSchedule: deleteMessageModal && deleteMessageModal.isSchedule,\n      message: deleteMessageModal && deleteMessageModal.message,\n      album: deleteMessageModal && deleteMessageModal.album,\n      onConfirm: deleteMessageModal && deleteMessageModal.onConfirm,\n      isOwn,\n      canBanUsers,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false,\n    });\n    onClose();\n  }, [pinMessage, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [messageId, onClose, pinMessage]);\n\n  const lang = useOldLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(useMemo(() => (isActive ? {\n    'Mod+C': handleCopy,\n  } : undefined), [isActive]));\n};\n\nexport default useCopySelectedMessages;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"yBqscugH\",\"container\":\"kXZCbJ2r\",\"title\":\"SM4Gh7ar\",\"singleTitle\":\"jsg3ZpHm\",\"actionTitle\":\"fpMDH6cA\",\"restrictionTitle\":\"ujUxllEg\",\"listItemButton\":\"NE9anBBa\",\"button\":\"XbhgbPbE\",\"dropdownList\":\"JqX2Gfp8\",\"dialogButtons\":\"_E_ldIaq\",\"restrictionContainer\":\"SxYVATEo\",\"restrictionContainerOpen\":\"pb31MZG8\",\"dropdownListOpen\":\"xF6oHne7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../api/types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport {\n  getHasAdminRight,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  getUserFullName,\n  isChatBasicGroup, isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  getSendersFromSelectedMessages,\n  selectCanDeleteSelectedMessages,\n  selectChatFullInfo,\n  selectCurrentChat,\n  selectCurrentMessageIds,\n  selectCurrentMessageList,\n  selectSenderFromMessage,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByCallback } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport Avatar from '../common/Avatar';\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './DeleteSelectedMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isChannel?: boolean;\n  isSuperGroup?: boolean;\n  selectedMessageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  currentUserId?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  messageIds: number[] | undefined;\n  adminMembersById?: Record<string, ApiChatMember>;\n  canBanUsers?: boolean;\n};\n\nconst DeleteSelectedMessageModal: FC<OwnProps & StateProps> = ({\n  chat,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  isOpen,\n  isSchedule,\n  currentUserId,\n  selectedMessageIds,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  messageIds,\n  onClose,\n  adminMembersById,\n  canBanUsers,\n}) => {\n  const {\n    deleteMessages,\n    reportMessages,\n    deleteChatMember,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n    updateChatMemberBannedRights,\n  } = getActions();\n\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [chosenDeleteOption, setChosenDeleteOption] = useState<string[] | undefined>(undefined);\n  const [chosenBanOption, setChosenBanOptions] = useState<string[] | undefined>(undefined);\n  const [chosenSpanOption, setChosenSpanOptions] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n\n  const senderList = useMemo(() => {\n    if (isChannel) {\n      return undefined;\n    }\n    const senderArray = getSendersFromSelectedMessages(getGlobal(), chat);\n    return senderArray?.filter(Boolean);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [chat, isChannel, isOpen]);\n\n  const isSenderOwner = useMemo(() => {\n    if (!senderList) {\n      return undefined;\n    }\n\n    return senderList.some((sender) => sender\n      && adminMembersById\n      && adminMembersById[sender.id] && adminMembersById[sender.id].isOwner);\n  }, [senderList, adminMembersById]);\n\n  const userList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!senderList || isSchedule) return [];\n    const uniqueUserIds = new Set(senderList.map((user) => user!.id));\n\n    return Array.from(uniqueUserIds)\n      .map((id) => usersById[id])\n      .filter(Boolean);\n  }, [isSchedule, senderList]);\n\n  const nestedOptionsWithAvatarList = useLastCallback(() => {\n    return userList.map((user) => ({\n      value: `${user.id}`,\n      label: getUserFullName(user) || '',\n      leftElement: <Avatar size=\"small\" peer={user} />,\n    }));\n  });\n\n  const showAdditionalOptions = useMemo(() => {\n    return !userList.some((user) => user.id === currentUserId);\n  }, [userList, currentUserId]);\n\n  const shouldShowOptions = showAdditionalOptions && !canDeleteForAll && !isSchedule && (isGroup || isSuperGroup);\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!senderList || isSchedule) return {};\n\n    const uniqueUserIds = new Set(senderList.map((user) => user!.id));\n    const userIds = Array.from(uniqueUserIds).map((userId) => usersById[userId]);\n\n    return buildCollectionByCallback(userIds, (user) => [user?.id, getUserFullName(user)]);\n  }, [isSchedule, senderList]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'spam' : userList?.[0]?.id,\n        label: oldLang('ReportSpamTitle'),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [oldLang, selectedMessageIds, userList]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'delete_all' : userList?.[0]?.id,\n        label: selectedMessageIds && userList.length >= 2\n          ? oldLang('DeleteAllFromUsers')\n          : oldLang('DeleteAllFrom', Object.values(userNames)[0]),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [oldLang, selectedMessageIds, userList, userNames]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'ban' : userList?.[0]?.id,\n        label: selectedMessageIds && userList.length >= 2\n          ? (isAdditionalOptionsVisible ? oldLang('DeleteRestrictUsers') : oldLang('DeleteBanUsers'))\n          : (isAdditionalOptionsVisible ? oldLang('KickFromSupergroup')\n            : oldLang('DeleteBan', Object.values(userNames)[0])),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [isAdditionalOptionsVisible, oldLang, selectedMessageIds, userList, userNames]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible((prev) => !prev);\n  });\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onClose();\n    deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: true });\n  });\n\n  const filterMessageIdByUserId = useLastCallback((userIds: string[], selectedMessageIdList: number[]) => {\n    if (!chat) return MEMO_EMPTY_ARRAY;\n    return selectedMessageIdList.filter((msgId) => {\n      const sender = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n      return sender && userIds.includes(sender.id);\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    if (filteredMessageIdList && filteredMessageIdList.length) {\n      deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n    }\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    if (!chat) return;\n\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds: selectedMessageIds! });\n    } else if (!isSenderOwner && shouldShowOptions) {\n      if (chosenSpanOption) {\n        const userIdList = chosenSpanOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredMessageIdList = filterMessageIdByUserId(userIdList, selectedMessageIds!);\n        if (filteredMessageIdList?.length) {\n          reportMessages({ messageIds: filteredMessageIdList, reason: 'spam', description: '' });\n        }\n      }\n\n      if (chosenDeleteOption) {\n        const userIdList = chosenDeleteOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredMessageIdList = filterMessageIdByUserId(userIdList, messageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && !havePermissionChanged) {\n        const userIdList = chosenBanOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredUserIdList = userIdList.filter((userId) => selectedMessageIds?.some((msgId) => {\n          const sender = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return sender && sender.id === userId;\n        }));\n        handleDeleteMember(filteredUserIdList);\n        const filteredMessageIdList = filterMessageIdByUserId(userIdList, selectedMessageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && havePermissionChanged) {\n        const userIdList = chosenBanOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredUserIdList = userIdList.filter((userId) => selectedMessageIds?.some((msgId) => {\n          const sender = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return sender && sender.id === userId;\n        }));\n        handleUpdateChatMemberBannedRights(filteredUserIdList);\n      }\n    } else {\n      deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: false });\n    }\n\n    onClose();\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    onClose();\n  });\n\n  const handleDeleteOptionChange = useLastCallback((options: string[]) => {\n    setChosenDeleteOption(options);\n  });\n\n  const handleBanOptionChange = useLastCallback((options: string[]) => {\n    setChosenBanOptions(options);\n  });\n\n  const handleSpanOptionChange = useLastCallback((options: string[]) => {\n    setChosenSpanOptions(options);\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      exitMessageSelectMode();\n      setChosenSpanOptions(undefined);\n      setChosenDeleteOption(undefined);\n      setChosenBanOptions(undefined);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [exitMessageSelectMode, isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div\n        className={shouldShowOptions && styles.container}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowOptions && (\n          <AvatarList\n            size=\"small\"\n            peers={userList}\n          />\n        )}\n        <h3 className={buildClassName(shouldShowOptions ? styles.title : styles.singleTitle)}>\n          {oldLang('Chat.DeleteMessagesConfirmation', selectedMessageIds?.length)}\n        </h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={handleSpanOptionChange}\n          selected={chosenSpanOption}\n          nestedCheckbox={selectedMessageIds && userList.length >= 2}\n        />\n        <CheckboxGroup\n          options={ACTION_DELETE_OPTION}\n          onChange={handleDeleteOptionChange}\n          selected={chosenDeleteOption}\n          nestedCheckbox={selectedMessageIds && userList.length >= 2}\n        />\n        {!isSenderOwner && canBanUsers && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={handleBanOptionChange}\n            selected={chosenBanOption}\n            nestedCheckbox={selectedMessageIds && userList.length >= 2}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {oldLang('UserRestrictionsCanDoUsers', userList.length)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          permissionGroup\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(styles.dropdownList, isMediaDropdownOpen && styles.dropdownListOpen)}\n        />\n      </div>\n    );\n  }\n\n  if (!selectedMessageIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n    >\n      <div className={styles.main}>\n        {renderHeader()}\n        {!showAdditionalOptions && <p>{lang('AreYouSureDeleteFewMessages')}</p>}\n        {shouldShowOptions && (\n          <>\n            <p className={styles.actionTitle}>{oldLang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              chosenBanOption && canBanUsers && chosenBanOption?.length ? (\n                <ListItem\n                  narrow\n                  className={styles.listItemButton}\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {oldLang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {willDeleteForCurrentUserOnly && lang('DeleteForMeDescription')}\n        {(willDeleteForAll && !showAdditionalOptions) && lang('DeleteForEveryoneDescription')}\n        <div className={canDeleteForAll ? 'dialog-buttons-column'\n          : buildClassName('dialog-buttons', isAdditionalOptionsVisible && styles.dialogButtons)}\n        >\n          {canDeleteForAll && (\n            <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n              {contactName\n                ? renderText(oldLang('ChatList.DeleteForEveryone', contactName))\n                : oldLang('Conversation.DeleteMessagesForEveryone')}\n            </Button>\n          )}\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n            {oldLang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onCloseHandler}>{oldLang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isSchedule }): StateProps => {\n    const { messageIds: selectedMessageIds } = selectTabState(global).selectedMessages || {};\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global);\n    const chat = selectCurrentChat(global);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const { threadId, type } = selectCurrentMessageList(global) || {};\n    const messageIds = chat && selectCurrentMessageIds(global, chat.id, threadId!, type!);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const adminMembersById = chatFullInfo?.adminMembersById;\n    const canBanUsers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n    const willDeleteForCurrentUserOnly = chat && isChatBasicGroup(chat) && !canDeleteForAll;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      chat,\n      isGroup,\n      isChannel,\n      isSuperGroup,\n      selectedMessageIds,\n      currentUserId: global.currentUserId,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      messageIds,\n      adminMembersById,\n      canBanUsers,\n    };\n  },\n)(DeleteSelectedMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport DeleteSelectedMessageModal from './DeleteSelectedMessageModal';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  useCopySelectedMessages(isActive);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  useEffect(() => {\n    return isActive && !isDeleteModalOpen && !isReportModalOpen && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? openDeleteModal : undefined,\n        onDelete: canDeleteMessages ? openDeleteModal : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, isDeleteModalOpen, isReportModalOpen, openDeleteModal, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const prevSelectedMessagesCount = usePreviousDeprecated(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n        aria-label={label}\n      >\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"MessageSelectToolbar-inner\">\n        <Button\n          color=\"translucent\"\n          round\n          onClick={handleExitMessageSelectMode}\n          ariaLabel=\"Exit select mode\"\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n          {formattedMessagesCount}\n        </span>\n\n        {Boolean(selectedMessagesCount) && (\n          <div className=\"MessageSelectToolbar-actions\">\n            {messageListType !== 'scheduled' && canForwardMessages && (\n              renderButton(\n                'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n              )\n            )}\n            {canReportMessages && (\n              renderButton('flag', lang('Conversation.ReportMessages'), openReportModal)\n            )}\n            {canDownloadMessages && !hasProtectedMessage && (\n              renderButton('download', lang('lng_media_download'), handleDownload)\n            )}\n            {!hasProtectedMessage && (\n              renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n            )}\n            {canDeleteMessages && (\n              renderButton('delete', lang('EditAdminGroupDeleteMessages'), openDeleteModal, true)\n            )}\n          </div>\n        )}\n      </div>\n      {canDeleteMessages && (\n        <DeleteSelectedMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={isSchedule}\n          onClose={closeDeleteModal}\n        />\n      )}\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={selectedMessageIds}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isShareMessageModalOpen = tabState.isShareMessageModalShown;\n    const isAnyModalOpen = Boolean(isShareMessageModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall);\n\n    return {\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"slqA9gR2\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tauadiDm\",\"icon\":\"i4wZg_0J\",\"header\":\"MQxuEIRA\",\"desc\":\"AEAN1Au4\",\"separator\":\"sXXb5yOS\",\"button\":\"F7owtTHj\",\"closeButton\":\"i6iFv9YE\"};","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectTabState, selectUser } from '../../global/selectors';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal, { ANIMATION_DURATION } from '../ui/Modal';\nimport Separator from '../ui/Separator';\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport Icon from './icons/Icon';\n\nimport styles from './PrivacySettingsNoticeModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isReadDate?: boolean;\n};\n\nconst CLOSE_ANIMATION_DURATION = ANIMATION_DURATION + ANIMATION_END_DELAY;\n\nconst PrivacySettingsNoticeModal = ({ isOpen, isReadDate, user }: OwnProps & StateProps) => {\n  const lang = useOldLang();\n  const {\n    updateGlobalPrivacySettings,\n    openPremiumModal,\n    closePrivacySettingsNoticeModal,\n    showNotification,\n    setPrivacyVisibility,\n    loadUser,\n  } = getActions();\n  const userName = getUserFirstOrLastName(user);\n\n  const handleShowReadTime = useLastCallback(() => {\n    updateGlobalPrivacySettings({ shouldHideReadMarks: false });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumReadSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleShowLastSeen = useLastCallback(() => {\n    setPrivacyVisibility({\n      privacyKey: 'lastSeen',\n      visibility: 'everybody',\n      onSuccess: () => loadUser({ userId: user!.id }),\n    });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumLastSeenSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleOpenPremium = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      openPremiumModal({ initialSection: 'last_seen' });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n  });\n\n  return (\n    <Modal isSlim isOpen={isOpen} onClose={handleClose}>\n      <div className={styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className={styles.closeButton}\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={handleClose}\n          ariaLabel=\"Close\"\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <AnimatedIconWithPreview\n          tgsUrl={isReadDate ? LOCAL_TGS_URLS.ReadTime : LOCAL_TGS_URLS.LastSeen}\n          size={84}\n          className={styles.icon}\n          nonInteractive\n          noLoop\n        />\n        <h2 className={styles.header}>\n          {lang(isReadDate ? 'PremiumReadHeader1' : 'PremiumLastSeenHeader1')}\n        </h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(\n              isReadDate ? 'PremiumReadText1' : 'PremiumLastSeenText1Locked',\n              userName,\n            ),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={isReadDate ? handleShowReadTime : handleShowLastSeen}\n          className={styles.button}\n        >\n          {lang(isReadDate ? 'PremiumReadButton1' : 'PremiumLastSeenButton1')}\n        </Button>\n        <Separator className={styles.separator}>{lang('PremiumOr')}</Separator>\n        <h2 className={styles.header}>{lang('PremiumReadHeader2')}</h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(isReadDate ? 'PremiumReadText2' : 'PremiumLastSeenText2', userName),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          withPremiumGradient\n          size=\"smaller\"\n          onClick={handleOpenPremium}\n          className={styles.button}\n        >\n          {lang('PremiumLastSeenButton2')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global): StateProps => {\n    const { chatId, isReadDate } = selectTabState(global).privacySettingsNoticeModal || {};\n    const user = chatId ? selectUser(global, chatId) : undefined;\n\n    return { user, isReadDate };\n  })(PrivacySettingsNoticeModal),\n);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const lang = useOldLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={lang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <i className=\"icon icon-heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={lang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <i className=\"icon icon-heart-outline status-icon\" />\n                          {formatDateAtTime(lang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(lang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {lang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../global/types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const endHeavyAnimation = beginHeavyAnimation();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      endHeavyAnimation();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useOldLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aMjNU9gm\",\"list-item\":\"T3An6Hoz\",\"listItem\":\"T3An6Hoz\",\"title\":\"dQ9wwFu1\",\"subtitle\":\"m_J41YYl\",\"languages\":\"r3YNWDQr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"WEJIbFQj\",\"closeButton\":\"_vwPuDEM\",\"icon\":\"BUiGM8qZ\",\"title\":\"Q3NhXpNI\",\"description\":\"frZbGQ0G\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiCountryCode } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './CollectibleInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['collectibleInfoModal'];\n};\n\ntype StateProps = {\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst TOP_ICON_SIZE = 60;\n\nconst CollectibleInfoModal: FC<OwnProps & StateProps> = ({\n  modal,\n  phoneCodeList,\n}) => {\n  const {\n    closeCollectibleInfoModal,\n    openChat,\n    openUrl,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const isUsername = modal?.type === 'username';\n\n  const handleClose = useLastCallback(() => {\n    closeCollectibleInfoModal();\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: modal!.peerId });\n    handleClose();\n  });\n\n  const handleOpenUrl = useLastCallback(() => {\n    openUrl({\n      url: modal!.url,\n      shouldSkipModal: true,\n    });\n    handleClose();\n  });\n\n  const handleCopy = useLastCallback(() => {\n    const text = isUsername ? formatUsername(modal!.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal!.collectible);\n    copyTextToClipboard(text);\n    showNotification({\n      message: lang(isUsername ? 'UsernameCopied' : 'PhoneCopied'),\n    });\n    handleClose();\n  });\n\n  const title = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameTitle' : 'FragmentPhoneTitle';\n    const formattedCollectible = isUsername\n      ? formatUsername(modal.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal.collectible);\n    return lang(key, formattedCollectible);\n  }, [modal, isUsername, phoneCodeList, lang]);\n\n  const description = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameMessage' : 'FragmentPhoneMessage';\n    const date = formatDateAtTime(lang, modal.purchaseDate * 1000);\n    const currency = formatCurrencyAsString(modal.amount, modal.currency, lang.code);\n    const cryptoCurrency = formatCurrencyAsString(modal.cryptoAmount, modal.cryptoCurrency, lang.code);\n    const paid = `${cryptoCurrency} (${currency})`;\n    return lang(key, [date, paid]);\n  }, [modal, isUsername, lang]);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      isSlim\n      contentClassName={styles.content}\n      onClose={closeCollectibleInfoModal}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.icon}>\n        <AnimatedIconWithPreview\n          tgsUrl={isUsername ? LOCAL_TGS_URLS.Mention : LOCAL_TGS_URLS.Fragment}\n          size={TOP_ICON_SIZE}\n        />\n      </div>\n      <h3 className={styles.title}>\n        {title && renderText(title, ['simple_markdown'])}\n      </h3>\n      <PickerSelectedItem\n        fluid\n        className={styles.chip}\n        peerId={modal?.peerId}\n        forceShowSelf\n        clickArg={modal?.peerId}\n        onClick={handleOpenChat}\n      />\n      <p className={styles.description}>\n        {description && renderText(description, ['simple_markdown'])}\n      </p>\n      <div className=\"dialog-buttons dialog-buttons-centered\">\n        <Button className=\"confirm-dialog-button\" onClick={handleOpenUrl}>\n          {lang('FragmentUsernameOpen')}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleCopy}>\n          {lang(isUsername ? 'FragmentUsernameCopy' : 'FragmentPhoneCopy')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { countryList } = global;\n\n    return {\n      phoneCodeList: countryList.phoneCodes,\n    };\n  },\n)(CollectibleInfoModal));\n","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ISettings } from '../../../../types';\nimport type { SearchResultKey } from '../../../../util/keys/searchResultKey';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\n\nexport type StateProps = {\n  theme: ISettings['theme'];\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: SearchResultKey[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDownloadableMedia } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useOldLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n\n      const media = getMessageDownloadableMedia(message)!;\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Audio\n              key={message.id}\n              theme={theme}\n              message={message}\n              origin={AudioOrigin.Search}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              date={message.date}\n              className=\"scroll-item\"\n              onPlay={handlePlayAudio}\n              onDateClick={handleMessageFocus}\n              canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n              isDownloading={getIsDownloading(activeDownloads, media)}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { isUserId, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyExceptions,\n  selectNotifySettings, selectUser,\n} from '../../../global/selectors';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  onClick,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n}) => {\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useCallback(() => {\n    onClick(chatId);\n  }, [chatId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"medium\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"medium\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat\n      ? selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global))\n      : undefined;\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\n\nconst LESS_LIST_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst BotAppResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  foundIds,\n  recentBotIds,\n}) => {\n  const {\n    searchPopularBotApps,\n    openChatWithInfo,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n    const recentSet = new Set(recentBotIds);\n    const withoutRecent = foundIds.filter((id) => !recentSet.has(id));\n\n    const usersById = getGlobal().users.byId;\n    return filterUsersByName(withoutRecent, usersById, searchQuery);\n  }, [foundIds, recentBotIds, searchQuery]);\n\n  const handleChatClick = useLastCallback((id: string) => {\n    openChatWithInfo({ id, shouldReplaceHistory: true });\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll\"\n        items={canRenderContents ? filteredFoundIds : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && !filteredFoundIds?.length && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && !searchQuery && Boolean(recentBotIds?.length) && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">\n              {recentBotIds.length > LESS_LIST_ITEMS_AMOUNT && (\n                <Link className=\"Link\" onClick={handleToggleShowMoreMine}>\n                  {lang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n                </Link>\n              )}\n              {lang('SearchAppsMine')}\n            </h3>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_LIST_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {canRenderContents && filteredFoundIds?.length && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">{lang('SearchAppsPopular')}</h3>\n            {filteredFoundIds.map((id) => {\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                />\n              );\n            })}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(BotAppResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useOldLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dates/dateFormat';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <i className=\"icon icon-calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectTopic } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const topic = selectTopic(global, chatId, topicId);\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openThread } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      if (!searchChatId) return;\n      openThread({ chatId: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useOldLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              className=\"clear-recent-chats\"\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel={lang('Clear')}\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { ALL_FOLDER_ID, GLOBAL_SUGGESTED_CHANNELS_ID } from '../../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  isChatChannel,\n} from '../../../global/helpers';\nimport { selectSimilarChannelIds, selectTabState } from '../../../global/selectors';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport { unique } from '../../../util/iteratees';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport RecentContacts from './RecentContacts';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  isChannelList?: boolean;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  contactIds?: string[];\n  accountPeerIds?: string[];\n  globalPeerIds?: string[];\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  suggestedChannelIds?: string[];\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  isChannelList,\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  contactIds,\n  accountPeerIds,\n  globalPeerIds,\n  foundIds,\n  globalMessagesByChatId,\n  fetchingStatus,\n  suggestedChannelIds,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal, setGlobalSearchChatId, loadChannelRecommendations,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n\n  useEffectOnce(() => {\n    if (isChannelList) loadChannelRecommendations({});\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: isChannelList ? 'channels' : 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  const localResults = useMemo(() => {\n    if (!isChannelList && (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2))) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    const orderedChatIds = getOrderedIds(ALL_FOLDER_ID) ?? [];\n    const filteredChatIds = orderedChatIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n    const localChatIds = filterChatsByName(lang, filteredChatIds, chatsById, searchQuery, currentUserId);\n\n    if (isChannelList) return localChatIds;\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(contactIds || []),\n    ];\n\n    const localContactIds = filterUsersByName(\n      contactIdsWithMe, usersById, searchQuery, currentUserId, lang('SavedMessages'),\n    );\n\n    const localPeerIds = [\n      ...localContactIds,\n      ...localChatIds,\n    ];\n\n    return unique([\n      ...sortChatIds(localPeerIds, undefined, currentUserId ? [currentUserId] : undefined),\n      ...sortChatIds(accountPeerIds || []),\n    ]);\n  }, [searchQuery, lang, currentUserId, contactIds, accountPeerIds, isChannelList]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length || isChannelList, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalPeerIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const filteredIds = globalPeerIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n\n    return sortChatIds(filteredIds, true);\n  }, [globalPeerIds, isChannelList, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n        const chat = chatsById[chatId];\n        if (!chat) return undefined;\n        if (isChannelList && !isChatChannel(chat)) return undefined;\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean);\n  }, [searchQuery, searchDate, foundIds, isChannelList, globalMessagesByChatId]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const chatsById = getGlobal().chats.byId;\n\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !foundMessages.length;\n\n  if (!searchQuery && !searchDate && !isChannelList) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  return (\n    <InfiniteScroll\n      className=\"LeftSearch--content custom-scroll\"\n      items={foundMessages}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={lang('ChatList.Search.NoResults')}\n          description={lang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && !isChannelList && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PickerSelectedItem\n              peerId={id}\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {lang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang(isChannelList ? 'SearchMyChannels' : 'DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {lang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(suggestedChannelIds?.length) && !searchQuery && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {lang('SearchRecommendedChannels')}\n          </h3>\n          {suggestedChannelIds.map((id) => {\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(foundMessages.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>{lang('SearchMessages')}</h3>\n          {foundMessages.map(renderFoundMessage)}\n        </div>\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isChannelList }): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!contactIds) {\n      return {};\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: accountPeerIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.[isChannelList ? 'channels' : 'text']?.foundIds;\n    const { similarChannelIds } = selectSimilarChannelIds(global, GLOBAL_SUGGESTED_CHANNELS_ID) || {};\n\n    return {\n      currentUserId,\n      contactIds,\n      accountPeerIds,\n      globalPeerIds,\n      foundIds,\n      globalMessagesByChatId,\n      fetchingStatus,\n      suggestedChannelIds: similarChannelIds,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDocument } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n      const message = globalMessagesByChatId[chatId]?.byId[messageId];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              key={message.date}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Document\n              document={getMessageDocument(message)!}\n              message={message}\n              withDate\n              datetime={message.date}\n              smaller\n              sender={getSenderName(lang, message, chatsById, usersById)}\n              className=\"scroll-item\"\n              isDownloading={getIsDownloading(activeDownloads, message.content.document!)}\n              shouldWarnAboutSvg={shouldWarnAboutSvg}\n              observeIntersection={observeIntersectionForMedia}\n              onDateClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            key={message.id}\n          >\n            <WebLink\n              key={message.id}\n              message={message}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              isProtected={isChatProtected || message.isProtected}\n              observeIntersection={observeIntersectionForMedia}\n              onMessageClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      messageId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content LeftSearch--media\">\n      <InfiniteScroll\n        className={classNames}\n        items={canRenderContents ? foundMessages : undefined}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dates/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport AudioResults from './AudioResults';\nimport BotAppResults from './BotAppResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\nconst TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'SearchAllChatsShort' },\n  { type: GlobalSearchContent.ChannelList, title: 'ChannelsTab' },\n  { type: GlobalSearchContent.BotApps, title: 'AppsTab' },\n  { type: GlobalSearchContent.Media, title: 'SharedMediaTab2' },\n  { type: GlobalSearchContent.Links, title: 'SharedLinksTab2' },\n  { type: GlobalSearchContent.Files, title: 'SharedFilesTab2' },\n  { type: GlobalSearchContent.Music, title: 'SharedMusicTab2' },\n  { type: GlobalSearchContent.Voice, title: 'SharedVoiceTab2' },\n];\n\nconst CHAT_TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'All Messages' },\n  ...TABS.slice(3), // Skip ChatList, ChannelList and BotApps, replaced with All Messages\n];\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const tabs = chatId ? CHAT_TABS : TABS;\n\n  const handleSwitchTab = useLastCallback((index: number) => {\n    const tab = tabs[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  });\n\n  const handleSearchDateSelect = useLastCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={tabs} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={tabs.length}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n            case GlobalSearchContent.ChannelList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  isChannelList={currentContent === GlobalSearchContent.ChannelList}\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.BotApps:\n              return (\n                <BotAppResults\n                  key=\"botApps\"\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterChatsByName } from '../../../../global/helpers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { unique } from '../../../../util/iteratees';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Loading from '../../../ui/Loading';\n\ntype StateProps = {\n  maxChats: number;\n};\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps & StateProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n  maxChats,\n}) => {\n  const lang = useOldLang();\n\n  const { openLimitReachedModal } = getActions();\n\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = useMemo(() => selectChatFilters(state, mode, true), [mode, state]);\n  const chatTypes = mode === 'included' ? CUSTOM_PEER_INCLUDED_CHAT_TYPES : CUSTOM_PEER_EXCLUDED_CHAT_TYPES;\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...filterChatsByName(lang, chatIds, chatsById, chatFilter),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, lang, chatFilter]);\n\n  const handleFilterChange = useLastCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n    setIsTouched(true);\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    if (mode === 'included') {\n      if (ids.length >= maxChats) {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  const handleSelectedChatTypesChange = useLastCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"Picker settings-folders-chat-list\">\n      <PeerPicker\n        categories={shouldHideChatTypes ? undefined : chatTypes}\n        itemIds={displayedIds}\n        selectedIds={selectedChatIds}\n        selectedCategories={selectedChatTypes}\n        filterValue={chatFilter}\n        filterPlaceholder={lang('Search')}\n        categoryPlaceholderKey=\"FilterChatTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        withDefaultPadding\n        withPeerTypes\n        allowMultiple\n        itemInputType=\"checkbox\"\n        onSelectedIdsChange={handleSelectedIdsChange}\n        onSelectedCategoriesChange={handleSelectedChatTypesChange}\n        onFilterChange={handleFilterChange}\n      />\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatFilters));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatlistExportedInvite } from '../../../../api/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'included'), [state]);\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'excluded'), [state]);\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? CUSTOM_PEER_INCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key)\n      : CUSTOM_PEER_EXCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.type}\n        className=\"settings-folders-list-item mb-1\"\n        narrow\n        inactive\n      >\n        <PrivateChatInfo\n          avatarSize=\"small\"\n          customPeer={chatType}\n        />\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ListItem\n            key=\"load-more\"\n            className=\"settings-folders-list-item\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n            icon=\"down\"\n          >\n            {lang('FilterShowMoreChats', leftChatsCount, 'i')}\n          </ListItem>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIcon\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item pt-3\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary\"\n            icon=\"add\"\n            narrow\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item\"\n              icon=\"link\"\n              narrow\n              multiline\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 68;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePreviousDeprecated(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: lang('FilterAllChats'),\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"with-icon mb-2\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <i className=\"icon icon-add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                    allowSelection\n                  >\n                    <span className=\"title\">\n                      {folder.title}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderText(folder.title, ['emoji'])}\n                    {isBlocked && <i className=\"icon icon-lock-badge settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <i className=\"icon icon-link mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              className=\"mb-2\"\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">{renderText(folder.title, ['emoji'])}</span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: folderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport LinkField from '../../../common/LinkField';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  title?: string;\n  includedChatIds?: string[];\n  pinnedChatIds?: string[];\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  title,\n  includedChatIds,\n  pinnedChatIds,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (includedChatIds || []).concat(pinnedChatIds || []);\n  }, [includedChatIds, pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('FolderLinkScreen.TitleDescriptionSelected', [title, chatsCount]),\n            ['simple_markdown'])}\n        </p>\n      </div>\n\n      <LinkField\n        className=\"settings-item\"\n        link={!url ? lang('Loading') : url}\n        withShare\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-picker\">\n        <PeerPicker\n          itemIds={itemIds}\n          lockedUnselectedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      title: folder?.title,\n      includedChatIds: folder?.includedChatIds,\n      pinnedChatIds: folder?.pinnedChatIds,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useOldLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPremiumSection } from '../../../global/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  premiumSection?: ApiPremiumSection;\n};\n\nfunction PremiumStatusItem({ premiumSection }: OwnProps) {\n  const { openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal({ initialSection: premiumSection }));\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n        onClick={handleOpenPremiumModal}\n      >\n        {lang('PrivacyLastSeenPremium')}\n      </ListItem>\n      <p\n        className=\"settings-item-description-larger premium-info\"\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {lang('lng_messages_privacy_premium_about')}\n      </p>\n    </div>\n  );\n}\n\nexport default memo(PremiumStatusItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './PrivacyLockedOption.module.scss';\n\ntype OwnProps = {\n  label: string;\n};\n\nfunction PrivacyLockedOption({ label }: OwnProps) {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n\n  return (\n    <div\n      className={styles.contactsAndPremiumOptionTitle}\n      onClick={() => showNotification({ message: lang('OptionPremiumRequiredMessage') })}\n    >\n      <span>{label}</span>\n      <Icon name=\"lock-badge\" className={styles.lockIcon} />\n    </div>\n  );\n}\n\nexport default memo(PrivacyLockedOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts_and_premium_option-title\":\"TGUdGos3\",\"contactsAndPremiumOptionTitle\":\"TGUdGos3\",\"lock-icon\":\"jWxrRbkh\",\"lockIcon\":\"jWxrRbkh\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { selectIsCurrentUserPremium, selectNewNoncontactPeersRequirePremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canLimitNewMessagesWithoutPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nfunction PrivacyMessages({\n  isActive,\n  canLimitNewMessagesWithoutPremium,\n  shouldNewNonContactPeersRequirePremium,\n  isCurrentUserPremium,\n  onReset,\n}: OwnProps & StateProps) {\n  const { updateGlobalPrivacySettings } = getActions();\n  const lang = useOldLang();\n\n  const canChange = isCurrentUserPremium || canLimitNewMessagesWithoutPremium;\n\n  const options = useMemo(() => {\n    return [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      {\n        value: 'contacts_and_premium',\n        label: canChange ? (\n          lang('PrivacyMessagesContactsAndPremium')\n        ) : (\n          <PrivacyLockedOption label={lang('PrivacyMessagesContactsAndPremium')} />\n        ),\n        hidden: !canChange,\n      },\n    ];\n  }, [lang, canChange]);\n\n  const handleChange = useLastCallback((privacy: string) => {\n    updateGlobalPrivacySettings({ shouldNewNonContactPeersRequirePremium: privacy === 'contacts_and_premium' });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('PrivacyMessagesTitle')}\n        </h4>\n        <RadioGroup\n          name=\"privacy-messages\"\n          options={options}\n          onChange={handleChange}\n          selected={shouldNewNonContactPeersRequirePremium ? 'contacts_and_premium' : 'everybody'}\n        />\n        <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Privacy.Messages.SectionFooter')}\n        </p>\n      </div>\n      {!canChange && <PremiumStatusItem premiumSection=\"message_privacy\" />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    shouldNewNonContactPeersRequirePremium: selectNewNoncontactPeersRequirePremium(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    canLimitNewMessagesWithoutPremium: global.appConfig?.canLimitNewMessagesWithoutPremium,\n  };\n})(PrivacyMessages));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"M84mrPgu\",\"settingsActiveSession\":\"M84mrPgu\",\"iconDevice\":\"Add8P_K4\",\"iconDevice__android\":\"onkXVGY4\",\"iconDeviceAndroid\":\"onkXVGY4\",\"iconDevice__apple\":\"xw13aT8u\",\"iconDeviceApple\":\"xw13aT8u\",\"iconDevice__brave\":\"HESrGUdv\",\"iconDeviceBrave\":\"HESrGUdv\",\"iconDevice__chrome\":\"Vpej7wm7\",\"iconDeviceChrome\":\"Vpej7wm7\",\"iconDevice__edge\":\"ueWE77x9\",\"iconDeviceEdge\":\"ueWE77x9\",\"iconDevice__firefox\":\"_lMTmvya\",\"iconDeviceFirefox\":\"_lMTmvya\",\"iconDevice__linux\":\"cDVfvyG_\",\"iconDeviceLinux\":\"cDVfvyG_\",\"iconDevice__opera\":\"nWqlTxZt\",\"iconDeviceOpera\":\"nWqlTxZt\",\"iconDevice__safari\":\"ldFLp1Gf\",\"iconDeviceSafari\":\"ldFLp1Gf\",\"iconDevice__samsung\":\"VHNORBGL\",\"iconDeviceSamsung\":\"VHNORBGL\",\"iconDevice__ubuntu\":\"QBVivtdu\",\"iconDeviceUbuntu\":\"QBVivtdu\",\"iconDevice__unknown\":\"GbjIgrwU\",\"iconDeviceUnknown\":\"GbjIgrwU\",\"iconDevice__vivaldi\":\"yieVnjoI\",\"iconDeviceVivaldi\":\"yieVnjoI\",\"iconDevice__windows\":\"_0dnTFOE\",\"iconDeviceWindows\":\"_0dnTFOE\",\"iconDevice__xbox\":\"fbCjjDpU\",\"iconDeviceXbox\":\"fbCjjDpU\",\"title\":\"c6edjhlh\",\"note\":\"lRqTZAYn\",\"date\":\"oLnN6crs\",\"box\":\"wVEXuPlZ\",\"actionHeader\":\"olQS2T1n\",\"actionName\":\"KuX1APpO\",\"headerButton\":\"VT8pZfMu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p className=\"settings-item-description-larger\">{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wd0fmiSY\",\"avatar\":\"OhZHdRsP\",\"title\":\"EQ7__xGn\",\"note\":\"YRYk96ki\",\"box\":\"kmCTIfvf\",\"action-header\":\"qkq5Fa0V\",\"actionHeader\":\"qkq5Fa0V\",\"action-name\":\"zFYUiy13\",\"actionName\":\"zFYUiy13\",\"header-button\":\"lUf0RJ2h\",\"headerButton\":\"lUf0RJ2h\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"v0wP46TR\",\"clear-help\":\"WnnxcARX\",\"clearHelp\":\"WnnxcARX\",\"subtitle\":\"uEUfjByC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { CHAT_HEIGHT_PX, STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useLastCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  });\n\n  if (!stickerSet?.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      narrow\n      className={buildClassName('StickerSetCard', 'chat-item-clickable small-icon', className)}\n      style={`height: ${CHAT_HEIGHT_PX}px;`}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-menu-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', lang('FileSize.MB', String(AUTODOWNLOAD_FILESIZE_MB_LIMITS[value]), 'i'));\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettings.Contacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.PrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.GroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.Channels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        'Auto-download files', // Proper translation is not available yet\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ys1i4ssl\",\"item\":\"skaVPMTF\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n  const language = lang.code || 'en';\n  const [displayedOptions, setDisplayedOptions] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedOptionList: ItemPickerOption[] = useMemo(() => {\n    const options = SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).filter(Boolean).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n\n    if (!searchQuery.trim()) {\n      const currentLanguageOption = options.find((option) => option.value === language);\n      const otherOptionList = options.filter((option) => option.value !== language);\n      return currentLanguageOption ? [currentLanguageOption, ...otherOptionList] : options;\n    }\n\n    return options?.filter((option) => option.label.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [language, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive, prevLanguage]) => {\n    if (prevIsActive === isActive && prevLanguage?.find((option) => option === language)) return;\n    const [selected] = partition(displayedOptionList, (option) => doNotTranslate.includes(option.value));\n    setDisplayedOptions([...selected.map((option) => option.value)]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, displayedOptionList]);\n\n  const handleChange = useLastCallback((newSelectedIds: string[]) => {\n    setDisplayedOptions(newSelectedIds);\n    setSettingOption({\n      doNotTranslate: newSelectedIds,\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content infinite-scroll')}>\n      <div className={buildClassName(styles.item)}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedOptionList}\n          selectedValues={displayedOptions}\n          onSelectedValuesChange={handleChange}\n          filterValue={searchQuery}\n          onFilterChange={setSearchQuery}\n          isSearchable\n          allowMultiple\n          withDefaultPadding\n          itemInputType=\"checkbox\"\n          searchInputId=\"lang-picker-search\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 60;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useOldLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePreviousDeprecated(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item mb-2 no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PaO1MMi5\",\"header\":\"wSswdVkR\",\"description\":\"oiJc22Aj\",\"sortableContainer\":\"lAeeBh9K\",\"item\":\"l04OwRBg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\nimport {\n  isUsernameValid, MAX_USERNAME_LENGTH, MIN_UPDATE_USERNAME_LENGTH, USERNAME_REGEX,\n} from '../../util/username';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useOldLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_UPDATE_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = newUsername === '' ? true : isUsernameValid(newUsername, true);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-edit-profile settings-item\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title=\"Edit your profile photo\"\n            disabled={isLoading}\n          />\n          <InputText\n            value={firstName}\n            onChange={handleFirstNameChange}\n            label={lang('FirstName')}\n            disabled={isLoading}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            value={lastName}\n            onChange={handleLastNameChange}\n            label={lang('LastName')}\n            disabled={isLoading}\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('UserBio')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <UsernameInput\n            currentUsername={currentUsername}\n            isLoading={isLoading}\n            isUsernameAvailable={isUsernameAvailable}\n            checkedUsername={checkedUsername}\n            onChange={handleUsernameChange}\n          />\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { IS_ELECTRON } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldShowLoginCodeInChatList?: boolean;\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldShowLoginCodeInChatList,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => requestConfetti({ withStars: true })}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Show login code in chat list\"\n          checked={Boolean(shouldShowLoginCodeInChatList)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldShowLoginCodeInChatList: !shouldShowLoginCodeInChatList })}\n        />\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      shouldShowLoginCodeInChatList: global.settings.byKey.shouldShowLoginCodeInChatList,\n      shouldForceHttpTransport: global.settings.byKey.shouldForceHttpTransport,\n      shouldAllowHttpTransport: global.settings.byKey.shouldAllowHttpTransport,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      shouldDebugExportedSenders: global.settings.byKey.shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { pick } from '../../../util/iteratees';\nimport { setTimeFormat } from '../../../util/oldLangProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'messageTextSize' |\n    'animationLevel' |\n    'messageSendKeyCombo' |\n    'timeFormat'\n  )> & {\n    theme: ISettings['theme'];\n    shouldUseSystemTheme: boolean;\n  };\n\nconst TIME_FORMAT_OPTIONS: IRadioOption[] = [{\n  label: '12-hour',\n  value: '12h',\n}, {\n  label: '24-hour',\n  value: '24h',\n}];\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n}) => {\n  const {\n    setSettingOption,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChat.Appearance.Light'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChat.Appearance.Dark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChat.Appearance.System'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('lng_settings_send_enter'), subLabel: 'New line by Shift + Enter' },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'lng_settings_send_cmdenter' : 'lng_settings_send_ctrlenter'),\n      subLabel: 'New line by Enter',\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSettingOption({ messageTextSize: newSize });\n  }, [setSettingOption]);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ISettings['theme'];\n\n    setSettingOption({ theme: newTheme });\n    setSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, [setSettingOption]);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, [setSettingOption]);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSettingOption({ messageSendKeyCombo: newCombo as ISettings['messageSendKeyCombo'] });\n  }, [setSettingOption]);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SETTINGS')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('GeneralSettings.StatusBarItem')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Time Format\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={TIME_FORMAT_OPTIONS}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('VoiceOver.Keyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { theme, shouldUseSystemTheme } = global.settings.byKey;\n\n    return {\n      ...pick(global.settings.byKey, [\n        'messageTextSize',\n        'animationLevel',\n        'messageSendKeyCombo',\n        'isSensitiveEnabled',\n        'canChangeSensitive',\n        'timeFormat',\n      ]),\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransitionDeprecated(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransitionDeprecated(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = global.settings.themes[theme] || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = global.settings.themes[theme] || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMultiClick from '../../../hooks/useMultiClick';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const lang = useOldLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{lang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{lang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{lang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{lang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{lang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{lang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{lang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{lang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{lang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{lang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{lang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{lang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{lang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{lang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{lang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{lang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{lang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyBirthday:\n        return <h3>{lang('PrivacyBirthday')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{lang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{lang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyMessages:\n        return <h3>{lang('PrivacyMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{lang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{lang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{lang('AlwaysShareWith')}</h3>;\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{lang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('Animations and Performance')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{lang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{lang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{lang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{lang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{lang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{lang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{lang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{lang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{lang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{lang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{lang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{lang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{lang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{lang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{lang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{lang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {lang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {lang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {lang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={lang('lng_settings_information')}\n            >\n              <i className=\"icon icon-edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{lang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={lang('AccDescrGoBack')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={lang('lng_sure_logout')}\n        confirmLabel={lang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, LangCode } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { oldSetLanguage } from '../../../util/oldLangProvider';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n} & Pick<ISettings, 'languages' | 'language' | 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    loadAttachBots,\n    setSettingOption,\n    openPremiumModal,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void oldSetLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSettingOption({ language: langCode as LangCode });\n\n      loadAttachBots(); // Should be refetched every language change\n    });\n  });\n\n  const options = useMemo(() => {\n    if (!languages) return undefined;\n    const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n    const shortLangCode = currentLangCode.substr(0, 2);\n\n    return languages.map(({ langCode, nativeName, name }) => ({\n      value: langCode,\n      label: nativeName,\n      subLabel: name,\n      isLoading: langCode === selectedLanguage && isLoading,\n    } satisfies ItemPickerOption)).sort((a) => {\n      return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n    });\n  }, [isLoading, languages, selectedLanguage]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              narrow\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item settings-item-picker\">\n        <h4 className=\"settings-item-header settings-picker-title\">\n          {lang('Localization.InterfaceLanguage')}\n        </h4>\n        {options ? (\n          <ItemPicker\n            items={options}\n            selectedValue={selectedLanguage}\n            onSelectedValueChange={handleChange}\n            itemInputType=\"radio\"\n            className=\"settings-picker\"\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, languages, canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport {\n  selectIsGiveawayGiftsPurchaseAvailable,\n  selectIsPremiumPurchaseBlocked,\n} from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ChatExtra from '../../common/profile/ChatExtra';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n  isGiveawayAvailable?: boolean;\n  starsBalance?: number;\n  shouldDisplayStars?: boolean;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n  isGiveawayAvailable,\n  starsBalance,\n  shouldDisplayStars,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadMoreProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n    openPremiumGiftingModal,\n    openStarsBalanceModal,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const oldLang = useOldLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadMoreProfilePhotos({ peerId: currentUserId, isPreload: true });\n    }\n  }, [currentUserId]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu\">\n        {currentUserId && (\n          <ProfileInfo\n            peerId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            isInSettings\n          />\n        )}\n        <ListItem\n          icon=\"settings\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {oldLang('Telegram.GeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {oldLang('Animations and Performance')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {oldLang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {oldLang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {oldLang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {oldLang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {oldLang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {oldLang('Language')}\n          <span className=\"settings-item__current-value\">{oldLang.langName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {oldLang('StickersName')}\n        </ListItem>\n      </div>\n      <div className=\"settings-main-menu\">\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {oldLang('TelegramPremium')}\n          </ListItem>\n        )}\n        {shouldDisplayStars && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"gold\" size=\"big\" />}\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openStarsBalanceModal({})}\n          >\n            {oldLang('MenuTelegramStars')}\n            {Boolean(starsBalance) && (\n              <span className=\"settings-item__current-value\">{formatInteger(starsBalance)}</span>\n            )}\n          </ListItem>\n        )}\n        {isGiveawayAvailable && (\n          <ListItem\n            icon=\"gift\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumGiftingModal()}\n          >\n            {oldLang('GiftPremiumGifting')}\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"ask-support\"\n          narrow\n          onClick={openSupportDialog}\n        >\n          {oldLang('AskAQuestion')}\n        </ListItem>\n        <ListItem\n          icon=\"help\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: FAQ_URL })}\n        >\n          {oldLang('TelegramFaq')}\n        </ListItem>\n        <ListItem\n          icon=\"privacy-policy\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: PRIVACY_URL })}\n        >\n          {oldLang('PrivacyPolicy')}\n        </ListItem>\n      </div>\n      <ConfirmDialog\n        isOpen={isSupportDialogOpen}\n        confirmLabel={oldLang('lng_settings_ask_ok')}\n        title={oldLang('AskAQuestion')}\n        text={oldLang('lng_settings_ask_sure')}\n        confirmHandler={handleOpenSupport}\n        onClose={closeSupportDialog}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const isGiveawayAvailable = selectIsGiveawayGiftsPurchaseAvailable(global);\n    const starsBalance = global.stars?.balance;\n    const shouldDisplayStars = Boolean(global.stars?.history?.all?.transactions.length);\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isGiveawayAvailable,\n      starsBalance,\n      shouldDisplayStars,\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  hasPrivateChatsNotifications: boolean;\n  hasPrivateChatsMessagePreview: boolean;\n  hasGroupNotifications: boolean;\n  hasGroupMessagePreview: boolean;\n  hasBroadcastNotifications: boolean;\n  hasBroadcastMessagePreview: boolean;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  hasPrivateChatsNotifications,\n  hasPrivateChatsMessagePreview,\n  hasGroupNotifications,\n  hasGroupMessagePreview,\n  hasBroadcastNotifications,\n  hasBroadcastMessagePreview,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: 'contact' | 'group' | 'broadcast',\n    setting: 'silent' | 'showPreviews',\n  ) => {\n    const currentIsSilent = peerType === 'contact'\n      ? !hasPrivateChatsNotifications\n      : !(peerType === 'group' ? hasGroupNotifications : hasBroadcastNotifications);\n    const currentShouldShowPreviews = peerType === 'contact'\n      ? hasPrivateChatsMessagePreview\n      : (peerType === 'group' ? hasGroupMessagePreview : hasBroadcastMessagePreview);\n\n    updateNotificationSettings({\n      peerType,\n      ...(setting === 'silent' && { isSilent: !e.target.checked, shouldShowPreviews: currentShouldShowPreviews }),\n      ...(setting === 'showPreviews' && { shouldShowPreviews: e.target.checked, isSilent: currentIsSilent }),\n    });\n  }, [\n    hasBroadcastMessagePreview, hasBroadcastNotifications,\n    hasGroupMessagePreview, hasGroupNotifications,\n    hasPrivateChatsMessagePreview, hasPrivateChatsNotifications,\n    updateNotificationSettings,\n  ]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'silent');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Web notifications\n        </h4>\n        <Checkbox\n          label=\"Web notifications\"\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasWebNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label=\"Offline notifications\"\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          // eslint-disable-next-line max-len\n          subLabel={areOfflineNotificationsSupported ? lang(hasPushNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled') : 'Not supported'}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label=\"Sound\"\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsNotifications}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasPrivateChatsNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsMessagePreview}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(hasGroupNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupNotifications}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasGroupNotifications}\n          subLabel={lang(hasGroupMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupMessagePreview}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastNotifications}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasBroadcastNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastMessagePreview}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasPrivateChatsNotifications: Boolean(global.settings.byKey.hasPrivateChatsNotifications),\n      hasPrivateChatsMessagePreview: Boolean(global.settings.byKey.hasPrivateChatsMessagePreview),\n      hasGroupNotifications: Boolean(global.settings.byKey.hasGroupNotifications),\n      hasGroupMessagePreview: Boolean(global.settings.byKey.hasGroupMessagePreview),\n      hasBroadcastNotifications: Boolean(global.settings.byKey.hasBroadcastNotifications),\n      hasBroadcastMessagePreview: Boolean(global.settings.byKey.hasBroadcastMessagePreview),\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [string, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: string;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS = [\n  'Power Saving',\n  'Nice and Fast',\n  'Lots of Stuff',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS = [\n  'Power Saving',\n  'Custom',\n  'Lots of Stuff',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['LiteMode.Key.animations.Title', [\n    { key: 'pageTransitions', label: 'Page Transitions' },\n    { key: 'messageSendingAnimations', label: 'Message Sending Animation' },\n    { key: 'mediaViewerAnimations', label: 'Media Viewer Animations' },\n    { key: 'messageComposerAnimations', label: 'Message Composer Animations' },\n    { key: 'contextMenuAnimations', label: 'Context Menu Animation' },\n    { key: 'contextMenuBlur', label: 'Context Menu Blur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'Right Column Animation' },\n  ]],\n  ['Stickers and Emoji', [\n    { key: 'animatedEmoji', label: 'Allow Animated Emoji' },\n    { key: 'loopAnimatedStickers', label: 'Loop Animated Stickers' },\n    { key: 'reactionEffects', label: 'Reaction Effects' },\n    { key: 'stickerEffects', label: 'Full-Screen Sticker and Emoji Effects' },\n  ]],\n  ['AutoplayMedia', [\n    { key: 'autoplayGifs', label: 'AutoplayGIF' },\n    { key: 'autoplayVideos', label: 'AutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useOldLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n  const animationLevelOptions = animationLevelState === ANIMATION_LEVEL_CUSTOM\n    ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n    : ANIMATION_LEVEL_OPTIONS;\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, [setSettingOption]);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Animation Level\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Choose the desired animations amount.\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => (\n                    <Checkbox\n                      key={key}\n                      name={key}\n                      checked={performanceSettings[key]}\n                      label={lang(label)}\n                      disabled={disabled}\n                      onChange={handlePropertyChange}\n                    />\n                  ))}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanSetPasscode, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canDisplayChatInTitle?: boolean;\n  privacy: GlobalState['settings']['privacy'];\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  shouldNewNonContactPeersRequirePremium,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacy,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    setSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    loadBlockedUsers();\n    loadPrivacySettings();\n    loadContentSettings();\n    loadWebAuthorizations();\n  }, []);\n\n  useEffect(() => {\n    if (isActive) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, loadGlobalPrivacySettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    if (!setting) return lang('Loading');\n\n    const { visibility, shouldAllowPremium } = setting;\n    const blockCount = setting.blockChatIds.length + setting.blockUserIds.length;\n    const allowCount = setting.allowChatIds.length + setting.allowUserIds.length;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount) total.push(`+${allowCount}`);\n\n    const exceptionString = total.length ? `(${total.join(',')})` : '';\n\n    if (shouldAllowPremium) {\n      return lang(exceptionString ? 'ContactsAndPremium' : 'PrivacyPremium');\n    }\n\n    switch (visibility) {\n      case 'everybody':\n        return `${lang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${lang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${lang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"delete-user\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {lang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-menu-item\">\n              <span className=\"title\">{lang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {lang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {lang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {lang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.lastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.profilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBio)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.bio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBirthday)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyBirthday')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.birthday)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.forwards)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          allowDisabledClick\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyVoiceMessages)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.voiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyMessages)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {shouldNewNonContactPeersRequirePremium\n                ? lang('PrivacyMessagesContactsAndPremium')\n                : lang('P2PEverybody')}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.chatInvite)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={lang('lng_settings_sensitive_disable_filtering')}\n            subLabel={lang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={lang('ArchiveAndMute')}\n            subLabel={lang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={lang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          canDisplayChatInTitle, shouldNewNonContactPeersRequirePremium,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      shouldNewNonContactPeersRequirePremium,\n      privacy,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName, getUserFullName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterUsersByName(availableContactIds, usersById, search)\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useOldLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        className=\"block-user-button\"\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <i className=\"icon icon-add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyBirthday:\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return 'birthday';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n  }\n\n  return undefined;\n}\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { PrivacyVisibility } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectShouldHideReadMarks } from '../../../global/selectors';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  visibility?: PrivacyVisibility;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  shouldHideReadMarks: boolean;\n};\n\nconst SettingsPrivacyLastSeen = ({\n  isCurrentUserPremium, shouldHideReadMarks, visibility,\n}: OwnProps & StateProps) => {\n  const { updateGlobalPrivacySettings, openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const canShowHideReadTime = visibility === 'nobody' || visibility === 'contacts';\n\n  const handleChangeShouldHideReadMarks = useLastCallback(\n    (isEnabled) => updateGlobalPrivacySettings({ shouldHideReadMarks: isEnabled }),\n  );\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    openPremiumModal({\n      initialSection: 'last_seen',\n    });\n  });\n\n  return (\n    <>\n      {canShowHideReadTime && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('HideReadTime')}\n            checked={shouldHideReadMarks}\n            onCheck={handleChangeShouldHideReadMarks}\n          />\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('HideReadTimeInfo'), ['br'])}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n          onClick={handleOpenPremiumModal}\n        >\n          {isCurrentUserPremium ? lang('PrivacyLastSeenPremiumForPremium') : lang('PrivacyLastSeenPremium')}\n        </ListItem>\n        <p\n          className=\"settings-item-description-larger premium-info\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n        >\n          {isCurrentUserPremium\n            ? lang('PrivacyLastSeenPremiumInfoForPremium')\n            : lang('PrivacyLastSeenPremiumInfo')}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldHideReadMarks: Boolean(selectShouldHideReadMarks(global)),\n    };\n  },\n)(SettingsPrivacyLastSeen));\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"Qvhl9Jjv\",\"fallbackPhoto\":\"Qvhl9Jjv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        narrow\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          narrow\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\nimport SettingsPrivacyLastSeen from './SettingsPrivacyLastSeen';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  isPremiumRequired,\n  onScreenSelect,\n  onReset,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        onScreenSelect={onScreenSelect}\n        isPremiumRequired={isPremiumRequired}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {screen === SettingsScreens.PrivacyLastSeen && (\n        <SettingsPrivacyLastSeen visibility={primaryPrivacy?.visibility} />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n          onScreenSelect={onScreenSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  onScreenSelect,\n  isPremiumRequired,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n}) {\n  const { setPrivacyVisibility } = getActions();\n  const lang = useOldLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      {\n        value: 'contacts',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={lang('P2PContacts')} />\n        ) : (\n          lang('P2PContacts')\n        ),\n        hidden: isPremiumRequired,\n      },\n    ];\n\n    if (hasNobody) {\n      options.push({\n        value: 'nobody',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={lang('P2PNobody')} />\n        ) : (\n          lang('P2PNobody')\n        ),\n        hidden: isPremiumRequired,\n      });\n    }\n    return options;\n  }, [lang, screen, isPremiumRequired]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? lang('PrivacyPhoneInfo') : lang('PrivacyPhoneInfo3');\n      }\n      case SettingsScreens.PrivacyVoiceMessages:\n        return lang('PrivacyVoiceMessagesInfo');\n      default:\n        return undefined;\n    }\n  }, [lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return lang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return lang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return lang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return lang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyBirthday:\n        return lang('PrivacyBirthdayTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return lang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return lang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return lang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return lang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return lang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [lang, screen]);\n\n  const prepareSubtitle = useLastCallback((userIds?: string[], chatIds?: string[], shouldAllowPremium?: boolean) => {\n    const userIdsCount = userIds?.length || 0;\n    const chatIdsCount = chatIds?.length || 0;\n\n    if (!userIdsCount && !chatIdsCount) {\n      return shouldAllowPremium ? lang('PrivacyPremium') : lang('EditAdminAddUsers');\n    } else if (shouldAllowPremium) {\n      return lang('ContactsAndPremium');\n    }\n\n    const userCountString = userIdsCount > 0 ? lang('Users', userIdsCount) : undefined;\n    const chatCountString = chatIdsCount > 0 ? lang('Chats', chatIdsCount) : undefined;\n\n    return [userCountString, chatCountString].filter(Boolean).join(', ');\n  });\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(privacy?.allowUserIds, privacy?.allowChatIds, privacy?.shouldAllowPremium);\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {!isPremiumRequired && (primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(allowedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(deniedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n      {isPremiumRequired && <PremiumStatusItem />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: { privacy },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyBirthday:\n        primaryPrivacy = privacy.birthday;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      isPremiumRequired: screen === SettingsScreens.PrivacyVoiceMessages && !selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings, CustomPeerType } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  filterChatsByName, isChatChannel, isDeletedUser,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { CUSTOM_PEER_PREMIUM } from '../../../util/objects/customPeer';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  withPremiumCategory?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst PREMIUM_CATEGORY = [CUSTOM_PEER_PREMIUM];\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  withPremiumCategory,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  onScreenSelect,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const lang = useOldLang();\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const selectedCategoryTypes = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    return [settings.shouldAllowPremium ? CUSTOM_PEER_PREMIUM.type : undefined].filter(Boolean);\n  }, [settings]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n  const [newSelectedCategoryTypes, setNewSelectedCategoryTypes] = useState<CustomPeerType[]>(selectedCategoryTypes);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) {\n      setNewSelectedContactIds(selectedContactIds);\n      setNewSelectedCategoryTypes(selectedCategoryTypes);\n    }\n  }, [isActive, selectedCategoryTypes, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => {\n        const chat = chatsById[chatId];\n        const user = usersById[chatId];\n        const isDeleted = user && isDeletedUser(user);\n        const isChannel = chat && isChatChannel(chat);\n        return chatId !== currentUserId && chatId !== SERVICE_NOTIFICATIONS_USER_ID && !isChannel && !isDeleted;\n      });\n\n    const filteredChats = filterChatsByName(lang, chatIds, chatsById, searchQuery);\n\n    // Show only relevant items\n    if (searchQuery) return filteredChats;\n\n    return unique([\n      ...selectedContactIds,\n      ...filterChatsByName(lang, chatIds, chatsById, searchQuery),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, lang, searchQuery, currentUserId]);\n\n  const handleSelectedCategoriesChange = useCallback((value: CustomPeerType[]) => {\n    setNewSelectedCategoryTypes(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n      isPremiumAllowed: newSelectedCategoryTypes.includes(CUSTOM_PEER_PREMIUM.type) || undefined,\n    });\n\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [isAllowList, newSelectedCategoryTypes, newSelectedContactIds, onScreenSelect, screen]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <PeerPicker\n        categories={withPremiumCategory ? PREMIUM_CATEGORY : undefined}\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        selectedCategories={newSelectedCategoryTypes}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? lang('AlwaysAllowPlaceholder') : lang('NeverAllowPlaceholder')}\n        categoryPlaceholderKey=\"PrivacyUserTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onSelectedCategoriesChange={handleSelectedCategoriesChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        itemInputType=\"checkbox\"\n        withDefaultPadding\n        withStatus\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? lang('AlwaysAllow') : lang('NeverAllow')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return privacy.birthday;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { type: 'emoji', emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n        withIcon\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { config, reactions } = global;\n\n    return {\n      availableReactions: reactions.availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.reactions.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  error,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  const lang = useOldLang();\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          placeholder={lang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={lang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport PrivacyMessages from './PrivacyMessages';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_BIRTHDAY_SCREENS = [\n  SettingsScreens.PrivacyBirthdayAllowedContacts,\n  SettingsScreens.PrivacyBirthdayDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, activeScreen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBirthday]: PRIVACY_BIRTHDAY_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(activeScreen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(activeScreen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(activeScreen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(activeScreen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(activeScreen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).map(Number).includes(activeScreen)\n      || Object.values(privacyAllowScreens).includes(true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || activeScreen === SettingsScreens.GeneralChatBackgroundColor\n              || activeScreen === SettingsScreens.GeneralChatBackground\n              || activeScreen === SettingsScreens.QuickReaction\n              || activeScreen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || activeScreen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || activeScreen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyBirthday:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            withPremiumCategory={currentScreen === SettingsScreens.PrivacyGroupChatsAllowedContacts}\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyMessages:\n        return (\n          <PrivacyMessages\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={activeScreen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(\n    isScreenActive: boolean,\n    _isFrom: boolean,\n    _currentKey: SettingsScreens,\n    activeKey: SettingsScreens,\n  ) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, activeKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { filterUsersByName, sortUserIds } from '../../../global/helpers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterUsersByName(contactIds, usersById, filter);\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <i className=\"icon icon-add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { filterUsersByName, isUserBot } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localPeerIds?: string[];\n  globalPeerIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localPeerIds,\n  globalPeerIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localPeerIds || []),\n        ...(globalPeerIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n\n        return user && !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, searchQuery, localPeerIds, globalPeerIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <PeerPicker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n          withDefaultPadding\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <i className=\"icon icon-arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: localPeerIds } = localResults || {};\n\n    return {\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalPeerIds,\n      localPeerIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst MAX_MEMBERS_FOR_GENERATE_CHAT_NAME = 4;\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  useEffect(() => {\n    if (isChannel) {\n      return;\n    }\n    if (!memberIds.length || memberIds.length > MAX_MEMBERS_FOR_GENERATE_CHAT_NAME) {\n      setTitle('');\n      return;\n    }\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const memberFirstNames = [global.currentUserId!, ...memberIds]\n      .map((userId) => getUserFirstOrLastName(usersById[userId]))\n      .filter(Boolean);\n    const generatedChatName = memberFirstNames.slice(0, -1).join(', ')\n      + lang('CreateGroup.PeersTitleLastDelimeter')\n      + memberFirstNames[memberFirstNames.length - 1];\n    setTitle(generatedChatName);\n  }, [isChannel, memberIds, lang]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransitionDeprecated(!isForumPanelOpen);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransitionDeprecated(\n    isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY,\n  );\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          onSettingsScreenSelect={onSettingsScreenSelect}\n          onLeftColumnContentChange={onLeftColumnContentChange}\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatFolderModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useOldLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID).map((folderId) => ({\n      label: foldersById ? foldersById[folderId].title : '',\n      value: String(folderId),\n    })) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className={buildClassName(styles.root, 'delete')}\n      contentClassName={styles.modalContent}\n      title={lang('FilterAddTo')}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <CheckboxGroup\n          options={folders}\n          selected={selectedFolderIds}\n          onChange={setSelectedFolderIds}\n        />\n      </div>\n      <div className={styles.footer}>\n        <div className=\"dialog-buttons\">\n          <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n            {lang('FilterAddTo')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContent\":\"EG5lPWY1\",\"root\":\"_fJBBCCE\",\"main\":\"heYMHiUt\",\"footer\":\"_jtqAaUU\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useOldLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let muteUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      muteUntil = MAX_INT_32;\n    } else {\n      muteUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, muteUntil });\n    } else {\n      updateChatMutedState({ chatId, muteUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import type { ApiMessage } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoMediaHash,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { IS_SAFARI } from '../../../../util/windowEnvironment';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'inline') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          );\n          if (clipboardText) copyHtmlToClipboard(clipboardText.join(''), getMessageTextWithSpoilers(message)!);\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = (selection?.anchorNode?.parentNode as HTMLElement);\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"lhinieg0\",\"get\":\"wysoV1T4\",\"skeleton\":\"gPqaUijR\",\"transition\":\"Yg6u_MIn\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../lib/teact/teactn';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './ReadTimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  menuSeparatorSize: 'thin' | 'thick';\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu, menuSeparatorSize,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <>\n      <MenuSeparator size={menuSeparatorSize} />\n      <MenuItem icon=\"message-read\" className={styles.item}>\n        <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n          {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n            <>\n              {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n              {!readDate && shouldRenderShowWhen && (\n                <div>\n                  {lang('PmRead')}\n                  <span className={styles.get} onClick={handleOpenModal}>\n                    {lang('PmReadShowWhen')}\n                  </span>\n                </div>\n              )}\n            </>\n          )}\n        </Transition>\n      </MenuItem>\n    </>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiSponsoredMessage,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { getUserFullName, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage | ApiSponsoredMessage;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  isWithPaidReaction?: boolean;\n  reactionsLimit?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onAboutAdsClick?: NoneToVoidFunction;\n  onSponsoredHide?: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  isWithPaidReaction,\n  reactionsLimit,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canQuote,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canReport,\n  canForward,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onReport,\n  onFaveSticker,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onCopyMessages,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n}) => {\n  const {\n    showNotification, openStickerSet, openCustomEmojiSets, loadStickers,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const withReactions = canShowReactionList && !noReactions;\n  const isSponsoredMessage = !('id' in message);\n  const messageId = !isSponsoredMessage ? message.id : '';\n  const seenByDates = !isSponsoredMessage ? message.seenByDates : undefined;\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  useEffect(() => {\n    if (customEmojiSets?.length) {\n      customEmojiSets.map((customEmojiSet) => {\n        return loadStickers({\n          stickerSetInfo: {\n            id: customEmojiSet.id,\n            accessHash: customEmojiSet.accessHash,\n          },\n        });\n      });\n    }\n  }, [customEmojiSets, openCustomEmojiSets]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = isSponsoredMessage\n    ? []\n    : getMessageCopyOptions(\n      message,\n      targetHref,\n      canCopy,\n      handleAfterCopy,\n      canCopyLink ? onCopyLink : undefined,\n      onCopyMessages,\n      onCopyNumber,\n    );\n\n  const getTriggerElement = useLastCallback(() => {\n    return isSponsoredMessage\n      ? document.querySelector('.Transition_slide-active > .MessageList .SponsoredMessage')\n      : document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${messageId}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const pinnedElement = document.querySelector<HTMLElement>('.HeaderPinnedMessageWrapper');\n    const extraHeightPinned = (((isMobile && !extraHeightAudioPlayer)\n        || (!isMobile && pinnedElement?.classList.contains('full-width')))\n      && pinnedElement?.offsetHeight) || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  useEffect(() => {\n    return disableScrolling(scrollableRef.current, '.ReactionPicker');\n  }, [isOpen]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      withMaxHeight\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={!isSponsoredMessage ? message.reactions?.results : undefined}\n          reactionsLimit={reactionsLimit}\n          onToggleReaction={onToggleReaction!}\n          onSendPaidReaction={onSendPaidReaction}\n          onShowPaidReactionModal={onShowPaidReactionModal}\n          isWithPaidReaction={isWithPaidReaction}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        ref={scrollableRef}\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {lang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >{lang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {isSponsoredMessage && message.sponsorInfo && (\n          <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n        )}\n        {isSponsoredMessage && (\n          <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n            {lang(message.canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n          </MenuItem>\n        )}\n        {isSponsoredMessage && message.canReport && (\n          <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n            {lang('ReportAd')}\n          </MenuItem>\n        )}\n        {isSponsoredMessage && onSponsoredHide && (\n          <>\n            <MenuSeparator />\n            <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>{lang('HideAd')}</MenuItem>\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && !isSponsoredMessage && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? lang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : lang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {!isSponsoredMessage && (canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            menuSeparatorSize={hasCustomEmoji ? 'thin' : 'thick'}\n            closeContextMenu={onClose}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiMessage,\n  ApiReaction,\n  ApiStickerSet,\n  ApiStickerSetInfo,\n  ApiThreadInfo,\n} from '../../../api/types';\nimport type { ActiveDownloads, MessageListType } from '../../../global/types';\nimport type { IAlbum, IAnchorPosition, ThreadId } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getCanPostInChat,\n  getIsDownloading,\n  getMessageDownloadableMedia,\n  getMessageVideo,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ReportModal from '../../common/ReportModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  reactionsLimit?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n  isChannel?: boolean;\n  canReplyInChat?: boolean;\n  isWithPaidReaction?: boolean;\n};\n\nconst selection = window.getSelection();\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canReport,\n  canShowReactionsCount,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  reactionsLimit,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  canReplyInChat,\n  isWithPaidReaction,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    openReplyMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n    openDeleteMessageModal,\n    addLocalPaidReaction,\n    openPaidReactionModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { ref: containerRef } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    className: false,\n  });\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [canQuoteSelection, setCanQuoteSelection] = useState(false);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = getMessageDownloadableMedia(msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    setCanQuoteSelection(\n      selectionText.text.trim().length > 0\n      && message.content.text!.text!.includes(selectionText.text),\n    );\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    closeMenu();\n    openDeleteMessageModal({ isSchedule: messageListType === 'scheduled', album, message });\n  });\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    const quoteText = canQuoteSelection && selectionRange ? getSelectionAsFormattedText(selectionRange) : undefined;\n    if (!canReplyInChat) {\n      openReplyMenu({ fromChatId: message.chatId, messageId: message.id, quoteText });\n    } else {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id,\n        quoteText,\n        replyToPeerId: undefined,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = getMessageDownloadableMedia(msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia, originMessage: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleSendPaidReaction = useLastCallback(() => {\n    addLocalPaidReaction({\n      chatId: message.chatId, messageId: message.id, count: 1,\n    });\n    closeMenu();\n  });\n\n  const handlePaidReactionModalOpen = useLastCallback(() => {\n    openPaidReactionModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div ref={containerRef} className=\"ContextMenuContainer\">\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        isWithPaidReaction={isWithPaidReaction}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        reactionsLimit={reactionsLimit}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canQuote={canQuoteSelection}\n        canDelete={canDelete}\n        canReport={canReport}\n        canPin={canPin}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onSendPaidReaction={handleSendPaidReaction}\n        onShowPaidReactionModal={handlePaidReactionModalOpen}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={reportMessageIds}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const isPrivate = chat && isUserId(chat.id);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig || {};\n\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n\n    const {\n      noOptions,\n      canReplyGlobally,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canForward,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n      && isOwn\n      && !isMessageUnread\n      && readDateExpiresAt\n      && message.date > Date.now() / 1000 - readDateExpiresAt\n      && !userStatus?.isReadDateRestricted\n      && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n\n    const threadInfo = threadId && selectThreadInfo(global, message.chatId, threadId);\n    const isMessageThread = Boolean(threadInfo && !threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = threadId ? selectTopic(global, message.chatId, threadId) : undefined;\n\n    const canSendText = chat && !isUserRightBanned(chat, 'sendPlain', chatFullInfo);\n\n    const canReplyInChat = chat && threadId ? getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n     && canSendText : false;\n\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    return {\n      threadId,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReplyGlobally,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canReport,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      reactionsLimit,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n      isChannel,\n      canReplyInChat,\n      isWithPaidReaction: chatFullInfo?.isPaidReactionAvailable,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  onAboutAdsClick: NoneToVoidFunction;\n  onReportAd: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  message,\n  anchor,\n  onAboutAdsClick,\n  onReportAd,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { openPremiumModal, showDialog } = getActions();\n\n  const [isMenuOpen, , closeMenu] = useFlag(true);\n  const { transitionClassNames } = useShowTransitionDeprecated(isMenuOpen, onCloseAnimationEnd, undefined, false);\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    onAboutAdsClick();\n    closeMenu();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    closeMenu();\n    openPremiumModal();\n    onClose();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    closeMenu();\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    closeMenu();\n    onReportAd();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isOpen={isMenuOpen}\n        anchor={anchor}\n        message={message}\n        onClose={closeMenu}\n        onCloseAnimationEnd={closeMenu}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePreviousDeprecated(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat, chatFullInfo) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n        && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nZYT4vJ3\",\"sets\":\"JzkmXjFF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../lib/teact/teactn';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSetIds,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useOldLang();\n\n  const customEmojiSets = useMemo(() => {\n    return customEmojiSetIds?.map((id) => getGlobal().stickers.setsById[id]);\n  }, [customEmojiSetIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePreviousDeprecated(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useLastCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => {\n          return (\n            <StickerSetCard\n              key={customEmojiSet.id}\n              className={styles.setCard}\n              stickerSet={customEmojiSet}\n              onClick={handleSetClick}\n              observeIntersection={observeIntersectionForCovers}\n              noPlay={!canPlayAnimatedEmojis}\n            />\n          );\n        })}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiBotCommand, ApiChat } from '../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { REPLIES_USER_ID } from '../../config';\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  getIsSavedDialog,\n  isChatChannel,\n  isChatGroup,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanManage,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsPremiumPurchaseBlocked,\n  selectIsRightColumnShown,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectTopic,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport ReportModal from '../common/ReportModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canViewMonetization?: boolean;\n  canShowBoostModal?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  botPrivacyPolicyUrl?: string;\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  isForumAsMessages?: true;\n  canAddContact?: boolean;\n  canReportChat?: boolean;\n  canDeleteChat?: boolean;\n  canGiftPremium?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n  isChatWithSelf?: boolean;\n  savedDialog?: ApiChat;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  botPrivacyPolicyUrl,\n  withForumActions,\n  isTopic,\n  isForum,\n  isForumAsMessages,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canReportChat,\n  canDeleteChat,\n  canGiftPremium,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  isChatWithSelf,\n  savedDialog,\n  canShowBoostModal,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openMonetizationStatistics,\n    openBoostStatistics,\n    openPremiumGiftModal,\n    openThreadWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    openUrl,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n    setViewForumAsMessages,\n    openBoostModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransitionDeprecated(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openThreadWithInfo({ chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    updateChatMutedState({ chatId, isMuted: false });\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    markRenderMuteModal();\n    setIsMuteModalOpen(true);\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    openCreateTopicPanel({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    toggleManagement({ force: true });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    openEditTopicPanel({ chatId, topicId: Number(threadId) });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftPremiumClick = useLastCallback(() => {\n    openPremiumGiftModal({ forUserIds: [chatId] });\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    openAddContactDialog({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    onSubscribeChannel();\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleMonetizationClick = useLastCallback(() => {\n    openMonetizationStatistics({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    if (canViewBoosts) {\n      openBoostStatistics({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    } else {\n      openBoostModal({ chatId });\n    }\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    enterMessageSelectMode();\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    blockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  useEffect(disableScrolling, []);\n\n  const lang = useOldLang();\n\n  const botButtons = useMemo(() => {\n    const commandButtons = botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {lang(cmd.label)}\n        </MenuItem>\n      );\n    });\n\n    const hasPrivacyCommand = botCommands?.some(({ command }) => command === 'privacy');\n\n    const privacyButton = isBot && (\n      <MenuItem\n        icon=\"privacy-policy\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          if (hasPrivacyCommand && !botPrivacyPolicyUrl) {\n            sendBotCommand({ command: '/privacy' });\n          } else {\n            openUrl({ url: botPrivacyPolicyUrl || lang('BotDefaultPrivacyPolicy') });\n          }\n          closeMenu();\n        }}\n      >\n        {lang('BotPrivacyPolicy')}\n      </MenuItem>\n    );\n\n    return [...commandButtons || [], privacyButton].filter(Boolean);\n  }, [botCommands, lang, botPrivacyPolicyUrl, isBot]);\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (savedDialog) {\n      return lang('Delete');\n    }\n\n    if (isPrivate) {\n      return lang('DeleteChatUser');\n    }\n\n    if (canDeleteChat) {\n      return lang('GroupInfo.DeleteAndExit');\n    }\n\n    if (isChannel) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [canDeleteChat, chat, isChannel, isPrivate, savedDialog, lang]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {lang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {lang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? lang('lng_context_view_topic') : lang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {lang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {lang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {lang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && !isForumAsMessages && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {lang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canShowBoostModal && !canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang(isChannel ? 'BoostingBoostChannelMenu' : 'BoostingBoostGroupMenu')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {lang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {lang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {lang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {lang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {lang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {lang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {lang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {lang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {lang('Statistics')}\n            </MenuItem>\n          )}\n          {isChannel && canViewMonetization && (\n            <MenuItem\n              icon=\"cash-circle\"\n              onClick={handleMonetizationClick}\n            >\n              {lang('lng_channel_earn_title')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {lang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {lang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGiftPremium && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftPremiumClick}\n            >\n              {lang('GiftPremium')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? lang('BotRestart') : lang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isChatWithSelf && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? lang('Unblock') : lang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {deleteTitle}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={savedDialog || chat}\n            isSavedDialog={Boolean(savedDialog)}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n        {canReportChat && chat?.id && (\n          <ReportModal\n            isOpen={isReportModalOpen}\n            onClose={closeReportModal}\n            subject=\"peer\"\n            peerId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const canReportChat = isMainThread && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGiftPremium = Boolean(\n      userFullInfo?.premiumGifts?.length\n      && !selectIsPremiumPurchaseBlocked(global),\n    );\n\n    const topic = selectTopic(global, chatId, threadId);\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n    const savedDialog = isSavedDialog ? selectChat(global, String(threadId)) : undefined;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      isForumAsMessages: chat?.isForumAsMessages,\n      canAddContact,\n      canReportChat,\n      canDeleteChat: getCanDeleteChat(chat),\n      canGiftPremium,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      botPrivacyPolicyUrl: chatBot ? userFullInfo?.botInfo?.privacyPolicyUrl : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n      isChatWithSelf,\n      savedDialog,\n    };\n  },\n)(HeaderMenuContainer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vv5ppXel\",\"active\":\"FVgqrSSK\",\"info\":\"DboxqiZd\",\"topRow\":\"Ymu2m1PR\",\"meta\":\"A2rsvUBm\",\"subtitle\":\"qUzmwaIn\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { getMessageSenderName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport MessageSummary from '../../common/MessageSummary';\n\nimport styles from './MiddleSearchResult.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  message: ApiMessage;\n  senderPeer?: ApiPeer;\n  messageChat?: ApiChat;\n  shouldShowChat?: boolean;\n  query?: string;\n  className?: string;\n  onClick: (message: ApiMessage) => void;\n};\n\nconst TRUNCATE_LENGTH = 200;\n\nconst MiddleSearchResult = ({\n  isActive,\n  message,\n  senderPeer,\n  messageChat,\n  shouldShowChat,\n  query,\n  className,\n  onClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hiddenForwardTitle = message.forwardInfo?.hiddenUserName;\n\n  const peer = shouldShowChat ? messageChat : senderPeer;\n\n  const senderName = shouldShowChat ? getMessageSenderName(lang, message.chatId, senderPeer) : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(message);\n  });\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex={0}\n      className={buildClassName(styles.root, isActive && styles.active, className)}\n      onClick={handleClick}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={peer}\n        text={hiddenForwardTitle}\n        size=\"medium\"\n      />\n      <div className={styles.info}>\n        <div className={styles.topRow}>\n          {(peer && <FullNameTitle peer={peer} withEmojiStatus />) || hiddenForwardTitle}\n          <LastMessageMeta className={styles.meta} message={message} />\n        </div>\n        <div className={styles.subtitle} dir=\"auto\">\n          {senderName && (\n            <>\n              <span className=\"sender-name\">{renderText(senderName)}</span>\n              <span className=\"colon\">:</span>\n            </>\n          )}\n          <MessageSummary message={message} highlight={query} truncateLength={TRUNCATE_LENGTH} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MiddleSearchResult);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FTMljUuX\",\"header\":\"OvmjSMwA\",\"active\":\"DEIUzXQd\",\"avatar\":\"mp1PmoMq\",\"input\":\"z2K8Q7ib\",\"mobile\":\"u0fb78AA\",\"focused\":\"dqF8dYNx\",\"withDropdown\":\"AqhBggrp\",\"adaptSearchBorders\":\"Q9RZQaTu\",\"dropdown\":\"MFGvbICO\",\"dropdownHidden\":\"Alee0CKy\",\"results\":\"RtfTOE72\",\"placeholder\":\"O1HoZFge\",\"separator\":\"_Yy43QLl\",\"savedTags\":\"BcvAfv1E\",\"wrap\":\"JkESCST6\",\"searchTags\":\"rO3pH3LI\",\"savedSearchTag\":\"qA4gov4D\",\"hash\":\"q5NOmUAM\",\"searchTypes\":\"rVYZG__K\",\"searchType\":\"nE1Xwoo7\",\"selectedType\":\"i29dP8iT\",\"footer\":\"jyS1l9yn\",\"keyboard-visible\":\"ao05jKHW\",\"keyboardVisible\":\"ao05jKHW\",\"counter\":\"NmmL_cO3\",\"mobileNavigation\":\"dLO1hlHU\",\"navigationButton\":\"Z4vLAlsu\",\"navigationDisabled\":\"IqA7R2xO\",\"jumpIn\":\"n9kXbTu6\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiReaction, ApiReactionKey, ApiSavedReactionTag,\n} from '../../../api/types';\nimport type {\n  CustomPeer, MiddleSearchParams, MiddleSearchType, ThreadId,\n} from '../../../types';\n\nimport { ANONYMOUS_USER_ID, REPLIES_USER_ID } from '../../../config';\nimport { requestMeasure, requestMutation, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getIsSavedDialog, getReactionKey, isSameReaction } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectCurrentMiddleSearch,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getDayStartAt } from '../../../util/dates/dateFormat';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { getSearchResultKey, parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport { useClickOutside } from '../../../hooks/events/useOutsideClick';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport SavedTagButton from '../message/reactions/SavedTagButton';\nimport MiddleSearchResult from './MiddleSearchResult';\n\nimport styles from './MiddleSearch.module.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: ThreadId;\n  requestedQuery?: string;\n  savedTags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  savedTag?: ApiReaction;\n  totalCount?: number;\n  lastSearchQuery?: string;\n  foundIds?: SearchResultKey[];\n  isHistoryCalendarOpen?: boolean;\n  isCurrentUserPremium?: boolean;\n  isSavedMessages?: boolean;\n  fetchingQuery?: string;\n  isHashtagQuery?: boolean;\n  searchType?: MiddleSearchType;\n  currentUserId?: string;\n};\n\nconst CHANNELS_PEER: CustomPeer = {\n  isCustomPeer: true,\n  avatarIcon: 'channel-filled',\n  titleKey: 'SearchPublicPosts',\n};\nconst FOCUSED_SEARCH_TRIGGER_OFFSET = 5;\nconst HIDE_TIMEOUT = 200;\nconst RESULT_ITEM_CLASS_NAME = 'MiddleSearchResult';\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MiddleSearch: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  requestedQuery,\n  savedTags,\n  savedTag,\n  totalCount,\n  lastSearchQuery,\n  foundIds,\n  isHistoryCalendarOpen,\n  isCurrentUserPremium,\n  isSavedMessages,\n  fetchingQuery,\n  isHashtagQuery,\n  searchType = 'chat',\n  currentUserId,\n}) => {\n  const {\n    updateMiddleSearch,\n    resetMiddleSearch,\n    performMiddleSearch,\n    focusMessage,\n    closeMiddleSearch,\n    openHistoryCalendar,\n    openPremiumModal,\n    loadSavedReactionTags,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [query, setQuery] = useState(requestedQuery || '');\n  const [focusedIndex, setFocusedIndex] = useState(0);\n  const canFocusNewer = foundIds && focusedIndex > 0;\n  const canFocusOlder = foundIds && focusedIndex < foundIds.length - 1;\n\n  const [isFullyHidden, setIsFullyHidden] = useState(!isActive);\n  const hiddenTimerRef = useRef<number>();\n  const maybeLongPressActiveRef = useRef(true);\n\n  const [isFocused, markFocused, markBlurred] = useFlag();\n  const [isViewAsList, setIsViewAsList] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    if (maybeLongPressActiveRef.current) return;\n    // Ignore clicks inside modals\n    if ((event.target as HTMLElement).closest('.Modal')) return;\n    markBlurred();\n  });\n  useClickOutside([ref], handleClickOutside);\n\n  const hasResultsContainer = Boolean((query && foundIds) || isHashtagQuery);\n  const isOnlyHash = isHashtagQuery && !query;\n  const areResultsEmpty = Boolean(query && foundIds && !foundIds.length && !isLoading && !isOnlyHash);\n  const hasResultsPlaceholder = areResultsEmpty || isOnlyHash;\n  const isNonFocusedDropdownForced = searchType === 'myChats' || searchType === 'channels';\n  const hasResultsDropdown = isActive && (isViewAsList || !isMobile) && (isFocused || isNonFocusedDropdownForced)\n    && Boolean(\n      hasResultsContainer || hasResultsPlaceholder || savedTags,\n    );\n\n  const hasQueryData = Boolean((query && !isOnlyHash) || savedTag);\n  const hasNavigationButtons = searchType === 'chat' && Boolean(foundIds?.length);\n\n  const handleClose = useLastCallback(() => {\n    closeMiddleSearch();\n  });\n\n  const focusInput = useLastCallback(() => {\n    requestMeasure(() => {\n      inputRef.current?.focus();\n    });\n  });\n\n  const blurInput = useLastCallback(() => {\n    inputRef.current?.blur();\n  });\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Focus message\n  useEffect(() => {\n    if (foundIds?.length) {\n      if (searchType === 'chat') {\n        const [chatId, messageId] = parseSearchResultKey(foundIds[0]);\n        focusMessage({ chatId, messageId, threadId });\n      }\n      setFocusedIndex(0);\n    } else {\n      setFocusedIndex(-1);\n    }\n  }, [searchType, focusMessage, foundIds, threadId]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n      setIsViewAsList(true);\n      setFocusedIndex(0);\n      setQuery('');\n      hiddenTimerRef.current = window.setTimeout(() => setIsFullyHidden(true), HIDE_TIMEOUT);\n    } else {\n      setIsFullyHidden(false);\n      clearTimeout(hiddenTimerRef.current);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (!requestedQuery || !chat?.id) return;\n    setQuery(requestedQuery);\n    updateMiddleSearch({ chatId: chat.id, threadId, update: { requestedQuery: undefined } });\n    setIsLoading(true);\n\n    requestNextMutation(() => {\n      const input = inputRef.current;\n      if (!input) return;\n      focusEditableElement(input, true, true);\n      markFocused();\n    });\n  }, [chat?.id, requestedQuery, threadId]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (isActive !== prevIsActive && !query && lastSearchQuery) {\n      setQuery(lastSearchQuery); // Restore query when returning back\n    }\n  }, [isActive, lastSearchQuery, query]);\n\n  useEffectWithPrevDeps(([prevIsCalendarOpen]) => {\n    if (!isActive || prevIsCalendarOpen === isHistoryCalendarOpen) return;\n    if (isHistoryCalendarOpen) {\n      blurInput();\n      markBlurred();\n    } else {\n      focusInput();\n    }\n  }, [isHistoryCalendarOpen, isActive]);\n\n  const handleReset = useLastCallback(() => {\n    if (!query?.length && !savedTag) {\n      handleClose();\n      return;\n    }\n\n    setQuery('');\n    setIsLoading(false);\n    resetMiddleSearch();\n    focusInput();\n  });\n\n  useEffect(() => (isActive ? captureEscKeyListener(handleReset) : undefined), [isActive, handleClose]);\n\n  const savedTagsArray = useMemo(() => {\n    if (!savedTags) return undefined;\n    return Object.values(savedTags);\n  }, [savedTags]);\n\n  const hasSavedTags = Boolean(savedTagsArray?.length);\n  const areSavedTagsDisabled = hasSavedTags && !isCurrentUserPremium;\n\n  useEffect(() => {\n    if (isSavedMessages && isActive) loadSavedReactionTags();\n  }, [isSavedMessages, isActive]);\n\n  const handleSearch = useLastCallback(() => {\n    const chatId = chat?.id;\n    if (!chatId) {\n      return;\n    }\n\n    runDebouncedForSearch(() => performMiddleSearch({ chatId, threadId, query }));\n  });\n\n  const handleQueryChange = useLastCallback((newQuery: string) => {\n    if (newQuery.startsWith('#') && !isHashtagQuery) {\n      updateMiddleSearch({ chatId: chat!.id, threadId, update: { isHashtag: true } });\n      setQuery(newQuery.slice(1));\n      handleSearch();\n      return;\n    }\n\n    setQuery(newQuery);\n\n    if (!newQuery) {\n      setIsLoading(false);\n      resetMiddleSearch();\n    }\n  });\n\n  useEffect(() => {\n    if (query) {\n      handleSearch();\n    }\n  }, [query]);\n\n  useEffect(() => {\n    setIsLoading(Boolean(fetchingQuery));\n  }, [fetchingQuery]);\n\n  useEffect(() => {\n    if (!foundIds?.length) return;\n    const isClose = foundIds.length - focusedIndex < FOCUSED_SEARCH_TRIGGER_OFFSET;\n    if (isClose) {\n      handleSearch();\n    }\n  }, [focusedIndex, foundIds?.length]);\n\n  useEffect(() => {\n    if (!isActive) return undefined;\n\n    maybeLongPressActiveRef.current = true;\n\n    function focus() {\n      inputRef.current?.focus();\n      markFocused();\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    function removeListeners() {\n      window.removeEventListener('touchend', focus);\n      window.removeEventListener('mouseup', focus);\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    window.addEventListener('touchend', focus);\n    window.addEventListener('mouseup', focus);\n\n    window.addEventListener('touchstart', removeListeners);\n    window.addEventListener('mousedown', removeListeners);\n\n    return () => {\n      removeListeners();\n      window.removeEventListener('touchstart', removeListeners);\n      window.removeEventListener('mousedown', removeListeners);\n    };\n  }, [isActive]);\n\n  useHistoryBack({\n    isActive,\n    onBack: handleClose,\n  });\n\n  const [viewportIds, getMore, viewportOffset = 0] = useInfiniteScroll(handleSearch, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if ((!query && !savedTag) || !viewportIds?.length) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n\n    return viewportIds.map((searchResultKey) => {\n      const [chatId, id] = parseSearchResultKey(searchResultKey);\n      const message = selectChatMessage(global, chatId, id);\n      if (!message) {\n        return undefined;\n      }\n\n      const originalSender = (isSavedMessages || chatId === REPLIES_USER_ID || chatId === ANONYMOUS_USER_ID)\n        ? selectForwardedSender(global, message) : undefined;\n      const messageSender = selectSender(global, message);\n      const messageChat = selectChat(global, message.chatId);\n\n      const senderPeer = originalSender || messageSender;\n\n      return {\n        searchResultKey,\n        message,\n        messageChat,\n        senderPeer,\n      };\n    }).filter(Boolean);\n  }, [query, savedTag, viewportIds, isSavedMessages]);\n\n  const handleMessageClick = useLastCallback((message: ApiMessage) => {\n    const searchResultKey = getSearchResultKey(message);\n    const index = foundIds?.indexOf(searchResultKey) || 0;\n    const realIndex = index + viewportOffset;\n    setFocusedIndex(realIndex);\n\n    if (searchType === 'chat') {\n      setIsViewAsList(false);\n    }\n\n    focusMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId: !isHashtagQuery ? threadId : undefined,\n    });\n\n    markBlurred();\n  });\n\n  const handleTriggerViewStyle = useLastCallback(() => {\n    setIsViewAsList((prev) => !prev);\n    markFocused();\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, hasResultsContainer, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      handleMessageClick(foundResult.message);\n      setFocusedIndex(index + viewportOffset);\n    }\n  }, `.${RESULT_ITEM_CLASS_NAME}`, true);\n\n  const updateSearchParams = useLastCallback((update: Partial<MiddleSearchParams>) => {\n    updateMiddleSearch({ chatId: chat!.id, threadId, update });\n\n    handleSearch();\n  });\n\n  const activateSearchTag = useLastCallback((tag: ApiReaction) => {\n    if (areSavedTagsDisabled) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n      return;\n    }\n\n    updateSearchParams({ savedTag: tag });\n  });\n\n  const removeSearchSavedTag = useLastCallback(() => {\n    updateSearchParams({ savedTag: undefined });\n  });\n\n  const handleDeleteTag = useLastCallback(() => {\n    if (isHashtagQuery) {\n      updateSearchParams({ isHashtag: false });\n      return;\n    }\n\n    if (savedTag) {\n      removeSearchSavedTag();\n    }\n  });\n\n  const handleChangeSearchType = useLastCallback((type: MiddleSearchType) => {\n    updateSearchParams({ type });\n    setIsViewAsList(true);\n  });\n\n  const handleFocusOlder = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleFocusNewer = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  function renderTypeTag(type: MiddleSearchType, isForTag?: boolean) {\n    const isSelected = !isForTag && searchType === type;\n    switch (type) {\n      case 'chat':\n        return (\n          <PickerSelectedItem\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            fluid\n            peerId={chat?.id}\n            title={oldLang('SearchThisChat')}\n            clickArg=\"chat\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'myChats':\n        return (\n          <PickerSelectedItem\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            fluid\n            peerId={currentUserId}\n            forceShowSelf\n            title={oldLang('SearchMyMessages')}\n            clickArg=\"myChats\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'channels':\n        return (\n          <PickerSelectedItem\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            fluid\n            customPeer={CHANNELS_PEER}\n            title={oldLang('SearchPublicPosts')}\n            clickArg=\"channels\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n    }\n    return undefined;\n  }\n\n  function renderDropdown() {\n    return (\n      <div className={buildClassName(styles.dropdown, !hasResultsDropdown && styles.dropdownHidden)}>\n        {!isMobile && <div className={styles.separator} />}\n        {hasSavedTags && !isHashtagQuery && (\n          <div\n            className={buildClassName(\n              styles.savedTags,\n              !isMobile && styles.wrap,\n              'no-scrollbar',\n            )}\n          >\n            {savedTagsArray.map((tag) => {\n              const isChosen = isSameReaction(tag.reaction, savedTag);\n              return (\n                <SavedTagButton\n                  containerId=\"local-search\"\n                  key={getReactionKey(tag.reaction)}\n                  reaction={tag.reaction}\n                  tag={tag}\n                  withCount\n                  isDisabled={areSavedTagsDisabled}\n                  isChosen={isChosen}\n                  onClick={isChosen ? removeSearchSavedTag : activateSearchTag}\n                />\n              );\n            })}\n          </div>\n        )}\n        {isHashtagQuery && (\n          <div\n            className={buildClassName(styles.searchTypes, 'no-scrollbar')}\n          >\n            {renderTypeTag('chat')}\n            {renderTypeTag('myChats')}\n            {renderTypeTag('channels')}\n          </div>\n        )}\n        {hasResultsContainer && (\n          <InfiniteScroll\n            ref={containerRef}\n            className={buildClassName(styles.results, 'custom-scroll')}\n            items={viewportResults}\n            preloadBackwards={0}\n            onLoadMore={getMore}\n            onKeyDown={handleKeyDown}\n          >\n            {areResultsEmpty && (\n              <span key=\"nothing\" className={styles.placeholder}>\n                {oldLang('NoResultFoundFor', query)}\n              </span>\n            )}\n            {isOnlyHash && (\n              <span key=\"enterhash\" className={styles.placeholder}>\n                {oldLang('HashtagSearchPlaceholder')}\n              </span>\n            )}\n            {viewportResults?.map(({\n              message, senderPeer, messageChat, searchResultKey,\n            }, i) => (\n              <MiddleSearchResult\n                key={searchResultKey}\n                teactOrderKey={-message.date}\n                className={RESULT_ITEM_CLASS_NAME}\n                query={query}\n                message={message}\n                senderPeer={senderPeer}\n                messageChat={messageChat}\n                shouldShowChat={isHashtagQuery}\n                isActive={focusedIndex - viewportOffset === i}\n                onClick={handleMessageClick}\n              />\n            ))}\n          </InfiniteScroll>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      id=\"MiddleSearch\"\n      className={buildClassName(\n        styles.root,\n        isActive && styles.active,\n        !isActive && isFullyHidden && 'visually-hidden', // `display: none` would prevent focus on iOS\n        isFocused && styles.focused,\n        isMobile && styles.mobile,\n      )}\n      ref={ref}\n    >\n      <div className={styles.header}>\n        {!isMobile && (\n          <Avatar\n            className={styles.avatar}\n            peer={chat}\n            size=\"medium\"\n            isSavedMessages={isSavedMessages}\n          />\n        )}\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          className={buildClassName(\n            styles.input,\n            hasResultsDropdown && styles.withDropdown,\n            hasResultsDropdown && !isMobile && styles.adaptSearchBorders,\n          )}\n          canClose={!isMobile}\n          isLoading={isLoading}\n          resultsItemSelector={`.${styles.results} .${RESULT_ITEM_CLASS_NAME}`}\n          hasUpButton={hasNavigationButtons && !isMobile}\n          hasDownButton={hasNavigationButtons && !isMobile}\n          placeholder={isHashtagQuery ? oldLang('SearchHashtagsHint') : oldLang('Search')}\n          teactExperimentControlled\n          onChange={handleQueryChange}\n          onStartBackspace={handleDeleteTag}\n          onReset={handleReset}\n          withBackIcon={isMobile}\n          onFocus={markFocused}\n          focused={isFocused}\n          onUpClick={canFocusOlder ? handleFocusOlder : undefined}\n          onDownClick={canFocusNewer ? handleFocusNewer : undefined}\n        >\n          <div className={styles.searchTags}>\n            {savedTag && (\n              <SavedTagButton\n                containerId=\"local-search-tags\"\n                className={styles.savedSearchTag}\n                reaction={savedTag}\n                tag={savedTags![getReactionKey(savedTag)]}\n                onClick={removeSearchSavedTag}\n              />\n            )}\n            {isHashtagQuery && <div className={styles.hash}>#</div>}\n          </div>\n          {!isMobile && renderDropdown()}\n        </SearchInput>\n        {!isMobile && (\n          <div className={styles.icons}>\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel={oldLang('JumpToDate')}\n            >\n              <Icon name=\"calendar\" />\n            </Button>\n          </div>\n        )}\n      </div>\n      {isMobile && renderDropdown()}\n      {isMobile && (\n        <div className={styles.footer}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n            ariaLabel={oldLang('JumpToDate')}\n          >\n            <Icon name=\"calendar\" />\n          </Button>\n          <div className={styles.counter}>\n            {hasQueryData && (\n              foundIds?.length ? (\n                oldLang('Of', [focusedIndex + 1, totalCount])\n              ) : foundIds && !foundIds.length && (\n                oldLang('NoResult')\n              )\n            )}\n          </div>\n          {searchType === 'chat' && Boolean(foundIds?.length) && (\n            <Button\n              className={styles.viewStyle}\n              size=\"smaller\"\n              isText\n              fluid\n              noForcedUpperCase\n              onClick={handleTriggerViewStyle}\n            >\n              {isViewAsList ? oldLang('SearchAsChat') : oldLang('SearchAsList')}\n            </Button>\n          )}\n          {hasNavigationButtons && !hasResultsDropdown && (\n            <div className={styles.mobileNavigation}>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusOlder && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusOlder}\n                nonInteractive={!canFocusOlder}\n                ariaLabel={lang('AriaSearchOlderResult')}\n              >\n                <Icon name=\"up\" />\n              </Button>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusNewer && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusNewer}\n                nonInteractive={!canFocusNewer}\n                ariaLabel={lang('AriaSearchNewerResult')}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    if (!currentMessageList) {\n      return {};\n    }\n    const { chatId, threadId } = currentMessageList;\n\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const {\n      requestedQuery, savedTag, results, fetchingQuery, isHashtag, type,\n    } = selectCurrentMiddleSearch(global) || {};\n    const { totalCount, foundIds, query: lastSearchQuery } = results || {};\n\n    const currentUserId = global.currentUserId;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n\n    const savedTags = isSavedMessages && !isSavedDialog ? global.savedReactionTags?.byKey : undefined;\n\n    return {\n      chat,\n      requestedQuery,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n      savedTags,\n      savedTag,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isSavedMessages,\n      fetchingQuery,\n      isHashtagQuery: isHashtag,\n      currentUserId,\n      searchType: type,\n      lastSearchQuery,\n    };\n  },\n)(MiddleSearch));\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nexport function useClickOutside(\n  refs: React.RefObject<HTMLElement>[], callback: (event: MouseEvent) => void,\n) {\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    const clickedOutside = refs.every((ref) => {\n      return ref.current && !ref.current.contains(event.target as Node);\n    });\n\n    if (clickedOutside) callback(event);\n  });\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent, ThreadId } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  isForEffects?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  effectStickers?: ApiSticker[];\n  effectEmojis?: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  effectStickers,\n  effectEmojis,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n  isForEffects,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat?.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (isForEffects && effectStickers) {\n      const effectSets: StickerSetOrReactionsSetOrRecent[] = [];\n      if (effectEmojis?.length) {\n        effectSets.push({\n          id: EFFECT_EMOJIS_SET_ID,\n          accessHash: '0',\n          title: '',\n          stickers: effectEmojis,\n          count: effectEmojis.length,\n          isEmoji: true,\n        });\n      }\n      if (effectStickers?.length) {\n        effectSets.push({\n          id: EFFECT_STICKERS_SET_ID,\n          accessHash: '0',\n          title: lang('StickerEffects'),\n          stickers: effectStickers,\n          count: effectStickers.length,\n        });\n      }\n      return effectSets;\n    }\n\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    const userSetIds = [...(addedSetIds || [])];\n    if (chatStickerSetId) {\n      userSetIds.unshift(chatStickerSetId);\n    }\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, userSetIds));\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds,\n    stickerSetsById,\n    favoriteStickers,\n    recentStickers,\n    chatStickerSetId,\n    lang,\n    effectStickers,\n    isForEffects,\n    effectEmojis,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents\n  && !noPopulatedSets && (canSendStickers || isForEffects);\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  if (!chat) return undefined;\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers && !isForEffects ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      { !isForEffects && (\n        <div ref={headerRef} className={headerClassName}>\n          <div className=\"shared-canvas-container\">\n            <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n            {allSets.map(renderCover)}\n          </div>\n        </div>\n      ) }\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={\n          buildClassName(\n            styles.main,\n            IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n            !isForEffects && styles.hasHeader,\n          )\n        }\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            noContextMenus={noContextMenus}\n            index={i}\n            idPrefix={prefix}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            isChatStickerSet={stickerSet.id === chatStickerSetId}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            forcePlayback\n            shouldHideHeader={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      effect,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      effectStickers: effect?.stickers,\n      effectEmojis: effect?.emojis,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiMessage,\n  ApiReaction,\n  ApiReactionWithPaid,\n} from '../../../../api/types';\n\nimport {\n  getReactionKey, sortReactions,\n} from '../../../../global/helpers';\nimport { selectChatFullInfo } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nimport ReactionEmoji from '../../../common/reactions/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  selectedReactionIds?: string[];\n  message?: ApiMessage;\n  onReactionSelect: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  isWithPaidReaction?: boolean;\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  reactionsLimit?: number;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  isWithPaidReaction,\n  message,\n  reactionsLimit,\n  onReactionSelect,\n  onReactionContext,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const currentReactions = message?.reactions?.results;\n\n  const shouldUseCurrentReactions = reactionsLimit && currentReactions\n   && currentReactions.length >= reactionsLimit;\n\n  const allAvailableReactions = useMemo(() => {\n    if (shouldUseCurrentReactions) {\n      const reactions = currentReactions.map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactions.unshift({ type: 'paid' });\n      }\n      return reactions;\n    }\n\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      const reactionsToSort: ApiReactionWithPaid[] = (availableReactions || []).map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactionsToSort.unshift({ type: 'paid' });\n      }\n      return sortReactions(reactionsToSort, topReactions);\n    }\n\n    const reactionsToSort: ApiReactionWithPaid[] = enabledReactions.allowed;\n    if (isWithPaidReaction) {\n      reactionsToSort.unshift({ type: 'paid' });\n    }\n\n    return sortReactions(reactionsToSort, topReactions);\n  }, [\n    availableReactions, enabledReactions, topReactions, shouldUseCurrentReactions, currentReactions, isWithPaidReaction,\n  ]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                onContextMenu={onReactionContext}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global.reactions;\n\n    const { maxUniqueReactions } = global.appConfig || {};\n    const { enabledReactions, isPaidReactionAvailable } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n      reactionsLimit: maxUniqueReactions,\n      isWithPaidReaction: isPaidReactionAvailable,\n    };\n  },\n)(ReactionPickerLimited));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MhpiTAwi\",\"wrapper\":\"NIaqmosK\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiReaction,\n  ApiReactionWithPaid,\n  ApiSticker,\n  ApiStory,\n  ApiStorySkipped,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\n\nimport { getReactionKey, getStoryKey, isUserId } from '../../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectIsContextMenuTranslucent,\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../../composer/helpers/customEmoji';\n\nimport { getIsMobile } from '../../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../../../common/CustomEmojiPicker';\nimport Menu from '../../../ui/Menu';\nimport StickerPicker from '../../composer/StickerPicker';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  shouldUseFullPicker?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n  chatId?: string;\n  isForEffects?: boolean;\n  availableEffectById: Record<string, ApiAvailableEffect>;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  shouldUseFullPicker,\n  sendAsMessage,\n  chatId,\n  isForEffects,\n  availableEffectById,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction, saveEffectInDraft,\n    requestEffectInComposer, addLocalPaidReaction, openPaidReactionModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, shouldUseFullPicker]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction: ApiReaction = sticker.isCustomEmoji\n      ? { type: 'custom', documentId: sticker.id }\n      : { type: 'emoji', emoticon: sticker.emoji! };\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    if (reaction.type === 'paid') {\n      addLocalPaidReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, count: 1,\n      });\n    } else {\n      toggleReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeReactionPicker();\n  });\n\n  const handleReactionContextMenu = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (reaction.type !== 'paid') return;\n\n    openPaidReactionModal({\n      chatId: renderedChatId!,\n      messageId: renderedMessageId!,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReactionWithPaid | ApiSticker) => {\n    if ('type' in item && item.type === 'paid') return; // Not supported for stories\n\n    const reaction = 'id' in item ? { type: 'custom', documentId: item.id } as const : item;\n\n    const sticker = 'type' in item && item.type === 'custom' ? getGlobal().customEmojis.byId[item.documentId]\n      : 'id' in item ? item : undefined;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('type' in item && item.type === 'emoji') {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker) => {\n    const availableEffects = Object.values(availableEffectById);\n    const effectId = availableEffects.find((effect) => effect.effectStickerId === sticker.id)?.id;\n\n    if (chatId) saveEffectInDraft({ chatId, threadId: MAIN_THREAD_ID, effectId });\n\n    if (effectId) requestEffectInComposer({});\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push(getReactionKey(reaction));\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !shouldUseFullPicker && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      anchor={renderingPosition}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      {isForEffects && chatId ? (\n        <StickerPicker\n          className=\"\"\n          isHidden={!isOpen}\n          loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n          idPrefix=\"message-effect\"\n          canSendStickers={false}\n          noContextMenus={false}\n          chatId={chatId}\n          isTranslucent={isTranslucent}\n          onStickerSelect={handleStickerSelect}\n          isForEffects={isForEffects}\n        />\n      ) : (\n        <>\n          <CustomEmojiPicker\n            chatId={renderedChatId}\n            idPrefix=\"message-emoji-set-\"\n            isHidden={!isOpen || !(shouldUseFullPicker || renderedStoryId)}\n            loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n            isReactionPicker\n            className={!shouldUseFullPicker && !renderedStoryId ? styles.hidden : undefined}\n            selectedReactionIds={selectedReactionIds}\n            isTranslucent={isTranslucent}\n            onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n            onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n            onReactionContext={handleReactionContextMenu}\n          />\n          {!shouldUseFullPicker && Boolean(renderedChatId) && (\n            <ReactionPickerLimited\n              chatId={renderedChatId}\n              loadAndPlay={isOpen}\n              onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n              onReactionContext={handleReactionContextMenu}\n              selectedReactionIds={selectedReactionIds}\n              message={message}\n            />\n          )}\n        </>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const availableEffectById = global.availableEffectById;\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage, isForEffects,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const { maxUniqueReactions } = global.appConfig || {};\n  const areAllReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n    && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  const currentReactions = message?.reactions?.results;\n  const shouldUseCurrentReactions = Boolean(maxUniqueReactions && currentReactions\n    && currentReactions.length >= maxUniqueReactions);\n\n  return {\n    message,\n    story,\n    position,\n    shouldUseFullPicker: (chat?.isForbidden || areSomeReactionsAllowed || shouldUseCurrentReactions) ? false\n      : (areAllReactionsAllowed || isPrivateChat),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n    isForEffects,\n    chatId,\n    availableEffectById,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"gBh4WvBC\",\"menuContent\":\"qSfKwMzX\",\"storyMenu\":\"srpBMrqr\",\"onlyReactions\":\"dRNSqkOC\",\"hidden\":\"KVwgF6DG\"};","import { fixImageContent } from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QucaiGVU\",\"preview\":\"SHoF85Vw\",\"duration\":\"nI2M1SBH\",\"single\":\"FjrnqGba\",\"no-grouping\":\"g0cTsM9d\",\"noGrouping\":\"g0cTsM9d\",\"file\":\"B6f6GcvN\",\"overlay\":\"bX7LdgxW\",\"action-item\":\"Zo7u5epf\",\"actionItem\":\"Zo7u5epf\",\"delete-file\":\"CYJwy9T_\",\"deleteFile\":\"CYJwy9T_\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { SUPPORTED_PHOTO_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'photo':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <i\n                className={buildClassName('icon', 'icon-delete', styles.actionItem, styles.deleteFile)}\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          <i\n            className={buildClassName(\n              'icon',\n              attachment.shouldSendAsSpoiler ? 'icon-spoiler-disable' : 'icon-spoiler',\n              styles.actionItem,\n            )}\n            onClick={handleSpoilerClick}\n          />\n          {onDelete && (\n            <i\n              className={buildClassName('icon', 'icon-delete', styles.actionItem)}\n              onClick={() => onDelete(index)}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport function getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_PHOTO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'photo';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n\nexport default isFullyVisible;\n","import animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\nimport isFullyVisible from './isFullyVisible';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll(container, allElements[index], position, SCROLL_MARGIN);\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  useEffect(() => {\n    if (!isActive) setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n  }, [isActive, shouldRemoveSelectionOnReset]);\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePreviousDeprecated(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"a27O2Qlr\",\"mobile\":\"khvUZbGZ\",\"symbolMenuOpen\":\"ir5kkMy1\",\"header-border\":\"Pc1k8G8s\",\"headerBorder\":\"Pc1k8G8s\",\"attachments\":\"_bxSIFgj\",\"attachments-bottom-padding\":\"RPVunBe2\",\"attachmentsBottomPadding\":\"RPVunBe2\",\"caption-wrapper\":\"EtmiUn2k\",\"captionWrapper\":\"EtmiUn2k\",\"caption-top-border\":\"FjjSKMYe\",\"captionTopBorder\":\"FjjSKMYe\",\"caption\":\"Te7lIfpB\",\"dropTarget\":\"AT_d9l0W\",\"dropOutlineContainer\":\"d9O65j_I\",\"dropOutline\":\"jzCBDWMw\",\"outline\":\"xjNY3Z8u\",\"hovered\":\"AnO3BgVv\",\"send-wrapper\":\"wDqWK9MD\",\"sendWrapper\":\"wDqWK9MD\",\"send\":\"kNlWmBJI\",\"is-pointer-env\":\"rYZmraWo\",\"isPointerEnv\":\"rYZmraWo\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiMessage, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState, MessageListType } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getAttachmentMediaType, isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  attachments: ApiAttachment[];\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  editingMessage?: ApiMessage;\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  editingMessage,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePreviousDeprecated(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const isEditing = editingMessage && Boolean(editingMessage);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n  const isEditingMessageFile = isEditing && attachments?.length && getAttachmentMediaType(attachments[0]);\n  const notEditingFile = isEditingMessageFile !== 'file';\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean(\n    (shouldSendCompressed || shouldForceCompression || isInAlbum) && !shouldForceAsFile,\n  );\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [updateAttachmentSettings, isOpen, shouldSuggestCompression]);\n\n  function setIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage && !editingMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped, isInvertedMedia);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: true,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [lang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_PHOTO_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  const canInvertMedia = (() => {\n    if (isEditing) return false;\n    if (!hasMedia) return false;\n    if (!shouldForceAsFile && !shouldForceCompression && !isSendingCompressed) return false;\n    if (isMultiple && shouldSendGrouped) return false;\n    return true;\n  })();\n\n  let title = '';\n  if (areAllPhotos) {\n    title = lang(isEditing ? 'EditMessageReplacePhoto' : 'PreviewSender.SendPhoto', renderingAttachments.length, 'i');\n  } else if (areAllVideos) {\n    title = lang(isEditing ? 'EditMessageReplaceVideo' : 'PreviewSender.SendVideo', renderingAttachments.length, 'i');\n  } else if (areAllAudios) {\n    title = lang(isEditing ? 'EditMessageReplaceAudio' : 'PreviewSender.SendAudio', renderingAttachments.length, 'i');\n  } else {\n    title = lang(isEditing ? 'EditMessageReplaceFile' : 'PreviewSender.SendFile', renderingAttachments.length, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        {notEditingFile && !isInAlbum\n          && (\n            <DropdownMenu\n              className=\"attachmeneditingMessaget-modal-more-menu with-menu-transitions\"\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              {Boolean(!editingMessage) && (\n                <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{lang('Add')}</MenuItem>\n              )}\n              {hasMedia && (\n                <>\n                  {\n                    canInvertMedia && (!isInvertedMedia ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-up\" onClick={() => setIsInvertedMedia(true)}>\n                        {lang('PreviewSender.MoveTextUp')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-down\" onClick={() => setIsInvertedMedia(undefined)}>\n                        {lang(('PreviewSender.MoveTextDown'))}\n                      </MenuItem>\n                    ))\n                  }\n                  {\n                    !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                        {lang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                        {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                      </MenuItem>\n                    ))\n                  }\n                  {isSendingCompressed && hasAnySpoilerable && Boolean(!editingMessage) && (\n                    hasSpoiler ? (\n                      <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                        {lang('Attachment.DisableSpoiler')}\n                      </MenuItem>\n                    ) : (\n                      <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                        {lang('Attachment.EnableSpoiler')}\n                      </MenuItem>\n                    )\n                  )}\n                </>\n              )}\n              {isMultiple && (\n                shouldSendGrouped ? (\n                  <MenuItem\n                    icon=\"grouped-disable\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => setShouldSendGrouped(false)}\n                  >\n                    Ungroup All Media\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                    Group All Media\n                  </MenuItem>\n                )\n              )}\n            </DropdownMenu>\n          )}\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={lang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <svg className={styles.dropOutlineContainer}>\n          <rect className={styles.dropOutline} x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n        </svg>\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={lang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule && !editingMessage ? lang('Next') : editingMessage ? lang('Save') : lang('Send')}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { language, shouldSuggestCustomEmoji } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestMeasure, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useOldLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      requestMeasure(() => {\n        list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n      });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const isNoCorrectOptionError = isQuizMode && (correctOption === undefined || !options[correctOption].trim());\n\n    const answers = options\n      .map((text, index) => {\n        text = text.trim();\n\n        if (!text) return undefined;\n\n        return {\n          text: {\n            text,\n          },\n          option: String(index),\n          ...(index === correctOption && { correct: true }),\n        };\n      }).filter(Boolean);\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    if (!questionTrimmed || answers.length < 2) {\n      setQuestion(questionTrimmed);\n      if (answers.length) {\n        const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter(Boolean);\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isNoCorrectOptionError) {\n      setHasErrors(true);\n      return;\n    }\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: {\n          text: questionTrimmed,\n        },\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseHtmlAsFormattedText(solution.substring(0, MAX_SOLUTION_LENGTH)))\n        || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: !options[index].trim() }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        {!shouldBeAnonymous && (\n          <Checkbox\n            label={lang('PollAnonymous')}\n            checked={isAnonymous}\n            onChange={handleIsAnonymousChange}\n          />\n        )}\n        <Checkbox\n          label={lang('PollMultiple')}\n          checked={isMultipleAnswers}\n          disabled={isQuizMode}\n          onChange={handleMultipleAnswersChange}\n        />\n        <Checkbox\n          label={lang('PollQuiz')}\n          checked={isQuizMode}\n          disabled={isMultipleAnswers || isQuiz !== undefined}\n          onChange={handleQuizModeChange}\n        />\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_PACKAGED_ELECTRON } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji/emoji';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_PACKAGED_ELECTRON ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransitionDeprecated(shouldRender);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, string> = {\n  recent: 'icon-recent',\n  people: 'icon-smile',\n  nature: 'icon-animals',\n  foods: 'icon-eats',\n  activity: 'icon-sport',\n  places: 'icon-car',\n  objects: 'icon-lamp',\n  symbols: 'icon-language',\n  flags: 'icon-flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useOldLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll(containerRef.current!, categoryEl, 'start', FOCUS_MARGIN, SMOOTH_SCROLL_DISTANCE);\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <i className={buildClassName('icon', icon)} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getVideoMediaHash, getVideoPreviewMediaHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewHash = !gif.hasVideoPreview && gif.thumbnail && getVideoMediaHash(gif, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash, !loadAndPlay);\n\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n\n  const videoHash = getVideoPreviewMediaHash(gif) || getVideoMediaHash(gif, 'full');\n  const videoData = useMedia(videoHash, !loadAndPlay);\n\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <i className=\"icon icon-close gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useOldLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <i className=\"icon icon-search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <i className=\"icon icon-delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\nimport type { ThreadId } from '../../../types';\nimport type { MenuPositionOptions } from '../../ui/Menu';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n}\n& MenuPositionOptions;\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n  ...menuPositionOptions\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, onClose, false, false);\n\n  const lang = useOldLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...(isAttachmentModal ? menuPositionOptions : {\n        positionX: 'left',\n        positionY: 'bottom',\n      })}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatCommand.scss';\n\ntype OwnProps<T = undefined> = {\n  command: string;\n  description: string;\n  peer?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  clickArg: T;\n  onClick: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst ChatCommand = <T,>({\n  withAvatar,\n  focus,\n  command,\n  description,\n  peer,\n  clickArg,\n  onClick,\n}: OwnProps<T>) => {\n  const handleClick = useLastCallback(() => {\n    onClick(clickArg);\n  });\n\n  return (\n    <ListItem\n      key={command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      onClick={handleClick}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={peer} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{command}</span>\n        <span className=\"subtitle\">{renderText(description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(ChatCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiBotCommand, ApiMessage, ApiQuickReply, ApiUser,\n} from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport ChatCommand from './ChatCommand';\n\nimport styles from './ChatCommandTooltip.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  quickReplies?: ApiQuickReply[];\n  quickReplyMessages?: Record<number, ApiMessage>;\n  self: ApiUser;\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\ntype QuickReplyWithDescription = {\n  id: number;\n  command: string;\n  description: string;\n};\n\nconst ChatCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  withUsername,\n  botCommands,\n  quickReplies,\n  quickReplyMessages,\n  self,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand, sendQuickReply } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSendQuickReply = useLastCallback((id: number) => {\n    sendQuickReply({ chatId, quickReplyId: id });\n    onClick();\n  });\n\n  const quickRepliesWithDescription = useMemo(() => {\n    if (!quickReplies?.length || !quickReplyMessages) return undefined;\n    return quickReplies.map((reply) => {\n      const message = quickReplyMessages[reply.topMessageId];\n      return {\n        id: reply.id,\n        command: reply.shortcut,\n        description: message?.content.text?.text || '',\n      } satisfies QuickReplyWithDescription;\n    });\n  }, [quickReplies, quickReplyMessages]);\n\n  const handleKeyboardSelect = useLastCallback((item: ApiBotCommand | QuickReplyWithDescription) => {\n    if (!item.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    if ('id' in item) {\n      handleSendQuickReply(item.id);\n    } else {\n      handleSendCommand(item);\n    }\n\n    return true;\n  });\n\n  const keyboardNavigationItems = useMemo(() => {\n    if (!botCommands && !quickRepliesWithDescription) return undefined;\n    return ([] as (ApiBotCommand | QuickReplyWithDescription)[])\n      .concat(quickRepliesWithDescription || [], botCommands || []);\n  }, [botCommands, quickRepliesWithDescription]);\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: keyboardNavigationItems,\n    onSelect: handleKeyboardSelect,\n    onClose,\n  });\n\n  const isEmpty = (botCommands && !botCommands.length) || (quickReplies && !quickReplies.length);\n\n  useEffect(() => {\n    if (isEmpty) {\n      onClose();\n    }\n  }, [isEmpty, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  if (!shouldRender || isEmpty) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {quickRepliesWithDescription?.map((reply, index) => (\n        <ChatCommand\n          key={`quickReply_${reply.id}`}\n          command={reply.command}\n          description={reply.description}\n          peer={self}\n          withAvatar\n          clickArg={reply.id}\n          onClick={handleSendQuickReply}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n      {botCommands?.map((command, index) => (\n        <ChatCommand\n          key={`${command.botId}_${command.command}`}\n          command={command.command}\n          description={command.description}\n          // No need for expensive global updates on users and chats, so we avoid them\n          peer={getGlobal().users.byId[command.botId]}\n          withAvatar\n          clickArg={command}\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex + (quickRepliesWithDescription?.length || 0) === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(freezeWhenClosed(ChatCommandTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iaTB59vy\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport ChatCommand from './ChatCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((command: string) => {\n    sendBotCommand({\n      command: `/${command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <ChatCommand\n          key={botCommand.command}\n          command={botCommand.command}\n          description={botCommand.description}\n          clickArg={botCommand.command}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_8sFuAomM\",\"emojiButton\":\"crWzZ2jr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ReactionSelector from '../message/reactions/ReactionSelector';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onRemoveEffect?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  chatId?: string;\n  withEffects?: boolean;\n  hasCurrentEffect?: boolean;\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onRemoveEffect,\n  onClose,\n  onCloseAnimationEnd,\n  chatId,\n  withEffects,\n  hasCurrentEffect,\n  effectReactions,\n  allAvailableReactions,\n  onToggleReaction,\n  canBuyPremium,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  canPlayAnimatedEmojis,\n}) => {\n  const {\n    openEffectPicker,\n  } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [areItemsHidden, hideItems, showItems] = useFlag();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      showItems();\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n\n  const handleOpenMessageEffectsPicker = useLastCallback((position: IAnchorPosition) => {\n    hideItems();\n    if (chatId) openEffectPicker({ chatId, position });\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className={buildClassName(\n        'CustomSendMenu', 'fluid', 'with-menu-transitions', withEffects && 'with-effects',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n\n      {withEffects && !isInStoryViewer && (\n        <ReactionSelector\n          allAvailableReactions={allAvailableReactions}\n          effectReactions={effectReactions}\n          currentReactions={undefined}\n          onToggleReaction={onToggleReaction!}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          isForEffects\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageEffectsPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'CustomSendMenu_items',\n          areItemsHidden && 'CustomSendMenu_items-hidden',\n        )}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{oldLang('SendWithoutSound')}</MenuItem>}\n        {canSchedule && onSendSchedule && (\n          <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n            {oldLang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n        )}\n        {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n          <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n            {oldLang('SendWhenOnline')}\n          </MenuItem>\n        )}\n        {withEffects && hasCurrentEffect && (\n          <MenuItem icon=\"delete\" onClick={onRemoveEffect}>\n            {lang('RemoveEffect')}\n          </MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useOldLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getWebDocumentHash } from '../../../../global/helpers';\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? getWebDocumentHash(thumbnail) : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, url, description, webThumbnail,\n  } = inlineResult;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport { getPhotoMediaHash, getWebDocumentHash } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailBlobUrl = useMedia(getWebDocumentHash(webThumbnail));\n  const mediaBlobUrl = useMedia(photo && getPhotoMediaHash(photo, 'pictogram'));\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl || thumbnailBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailBlobUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      thumbUrl={mediaBlobUrl || thumbnail?.dataUri}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePreviousDeprecated(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <i className=\"icon icon-lock-badge send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  chatFullInfo,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canPostInChat = Boolean(chat) && Boolean(threadId)\n      && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OAKzmAva\",\"withImage\":\"BQ6HUOqN\",\"imageContainer\":\"TmJvv2A6\",\"image\":\"U96CW2I7\",\"round\":\"yxjDeIct\",\"circle\":\"cdfiLmXo\",\"withStoryCircle\":\"BOfHPv20\",\"summary\":\"vXi2JQlj\",\"title\":\"bi3fL59p\",\"info\":\"GUK4ajPK\",\"meta\":\"YH6jeZIh\",\"metaWithIcon\":\"q1LnuIUn\",\"metaIcon\":\"PJZzyVLK\",\"date\":\"C7NpG5Y9\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { StatisticsMessageInteractionCounter, StatisticsStoryInteractionCounter } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\ninterface OwnProps {\n  postStatistic: StatisticsStoryInteractionCounter | StatisticsMessageInteractionCounter;\n}\n\nfunction StatisticsRecentPostMeta({ postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  return (\n    <div className={styles.meta}>\n      {postStatistic.reactionsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"heart-outline\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.reactionsCount)}\n        </span>\n      )}\n\n      {postStatistic.forwardsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"forward\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.forwardsCount)}\n        </span>\n      )}\n\n      {!postStatistic.forwardsCount && !postStatistic.reactionsCount\n        && lang('ChannelStats.SharesCount_ZeroValueHolder')}\n    </div>\n  );\n}\n\nexport default memo(StatisticsRecentPostMeta);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsMessageInteractionCounter } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  postStatistic: StatisticsMessageInteractionCounter;\n  message: ApiMessage;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ postStatistic, message }) => {\n  const lang = useOldLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        Boolean(mediaBlobUrl || mediaThumbnail) && styles.withImage,\n      )}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span>\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName(styles.image, isRoundVideo && styles.round)}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiTypeStory,\n  StatisticsStoryInteractionCounter,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  story?: ApiTypeStory;\n  postStatistic: StatisticsStoryInteractionCounter;\n};\n\nfunction StatisticsRecentStory({ chat, story, postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  const { toggleStoryStatistics } = getActions();\n  const isLoaded = story && 'content' in story;\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const mediaThumbnail = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  const handleClick = useLastCallback(() => {\n    toggleStoryStatistics({ storyId: postStatistic.storyId });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, styles.withImage)}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, chat, imgBlobUrl || mediaThumbnail)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {isLoaded && Boolean(story.date) && formatDateTimeToString(story.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n}\n\nfunction renderSummary(lang: LangFn, chat: ApiChat, blobUrl?: string) {\n  return (\n    <span>\n      {blobUrl ? (\n        <span className={styles.imageContainer}>\n          <img\n            src={blobUrl}\n            alt=\"\"\n            draggable={false}\n            className={buildClassName(styles.image, styles.circle, styles.withStoryCircle)}\n          />\n        </span>\n      ) : (\n        <Avatar\n          peer={chat}\n          size=\"small-mobile\"\n          className={styles.image}\n          withStorySolid\n          forceUnreadStorySolid\n        />\n      )}\n\n      {lang('Story')}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"T1l_4J8z\",\"pie-slim-in\":\"EgyLOizu\",\"pieSlimIn\":\"EgyLOizu\",\"pie-slim-out\":\"TBiNdFb4\",\"pieSlimOut\":\"TBiNdFb4\",\"messages\":\"suY9dEIz\",\"publicForwards\":\"S1x1ovkC\",\"messages-title\":\"evQIkAqx\",\"messagesTitle\":\"evQIkAqx\",\"publicForwards-title\":\"WxL3i5PM\",\"publicForwardsTitle\":\"WxL3i5PM\",\"ready\":\"aUrozL5_\",\"graph\":\"QQHwjG88\",\"hidden\":\"QGctP1Nk\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiChat,\n  ApiGroupStatistics,\n  ApiMessage,\n  ApiTypeStory,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessages,\n  selectPeerStories,\n  selectStatistics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\nimport StatisticsRecentStory from './StatisticsRecentStory';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n  reactionsByEmotionGraph: 'ChannelStats.Graph.Reactions',\n  storyInteractionsGraph: 'ChannelStats.Graph.Stories',\n  storyReactionsByEmotionGraph: 'ChannelStats.Graph.StoriesReactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  chat?: ApiChat;\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n  messagesById: Record<string, ApiMessage>;\n  storiesById?: Record<string, ApiTypeStory>;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  statistics,\n  dcId,\n  isGroup,\n  messagesById,\n  storiesById,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove(styles.hidden);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview\n        statistics={statistics}\n        type={isGroup ? 'group' : 'channel'}\n        title={lang('StatisticOverview')}\n      />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className={buildClassName(styles.graph, styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics).recentPosts?.length) && (\n        <div className={styles.messages}>\n          <h2 className={styles.messagesTitle}>{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentPosts.map((postStatistic) => {\n            if ('msgId' in postStatistic) {\n              const message = messagesById[postStatistic.msgId];\n              if (!message || !('content' in message)) return undefined;\n\n              return (\n                <StatisticsRecentMessage\n                  key={`statistic_message_${postStatistic.msgId}`}\n                  message={message}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            if ('storyId' in postStatistic && chat) {\n              const story = storiesById?.[postStatistic.storyId];\n\n              return (\n                <StatisticsRecentStory\n                  key={`statistic_story_${postStatistic.storyId}`}\n                  chat={chat}\n                  story={story}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            return undefined;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n    const messagesById = selectChatMessages(global, chatId);\n    const storiesById = selectPeerStories(global, chatId)?.byId;\n\n    return {\n      statistics, dcId, isGroup, chat, messagesById, storiesById,\n    };\n  },\n)(Statistics));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oXLpD4Y4\",\"title\":\"paQ2VBe_\",\"views\":\"WvFuOAIf\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsMessagePublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useOldLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => (data.chat ? getMainUsername(data.chat) : undefined), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div>\n        <div className={styles.title}>\n          {data.title}\n        </div>\n\n        <div className={styles.views}>\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessagePublicForward,\n  ApiPostStatistics,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nfunction Statistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadMessagePublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards && messageId) {\n      loadMessagePublicForwards({ chatId, messageId });\n    }\n  });\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {(statistics.publicForwardsData as ApiMessagePublicForward[]).map((item) => (\n              <StatisticsMessagePublicForward key={item.messageId} data={item} />\n            ))}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat, ApiStoryPublicForward, ApiUser,\n} from '../../../api/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiStoryPublicForward;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n};\n\nfunction StatisticsMessagePublicForward({ data, chatsById, usersById }: OwnProps) {\n  const lang = useOldLang();\n  const { openChat } = getActions();\n  const user = usersById[data.peerId];\n  const chat = chatsById[data.peerId];\n\n  const handleClick = useLastCallback(() => {\n    openChat({ id: user.id });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={user || chat} withStorySolid forceUnreadStorySolid />\n\n      <div>\n        <div className={styles.title}>\n          {user ? getUserFullName(user) : getChatTitle(lang, chat)}\n        </div>\n\n        <div className={styles.views}>\n          {data.viewsCount ? lang('ChannelStats.ViewsCount', data.viewsCount, 'i') : lang('NoViews')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiPostStatistics,\n  ApiUser,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsStoryPublicForward from './StatisticsStoryPublicForward';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.StoryInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  storyId?: number;\n  dcId?: number;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n};\n\nfunction StoryStatistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  storyId,\n  chatsById,\n  usersById,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStoryStatistics, loadStoryPublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (storyId) {\n      loadStoryStatistics({ chatId, storyId });\n    }\n  }, [chatId, storyId]);\n\n  useEffect(() => {\n    if (!isActive || storyId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, storyId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, storyId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!storyId) return;\n\n    loadStoryPublicForwards({ chatId, storyId });\n  });\n\n  if (!isReady || !statistics || !storyId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"story\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {statistics.publicForwardsData!.map((item) => {\n              if ('messageId' in item) {\n                return (\n                  <StatisticsMessagePublicForward key={`message_${item.messageId}`} data={item} />\n                );\n              }\n\n              return (\n                <StatisticsStoryPublicForward\n                  key={`story_${item.storyId}`}\n                  data={item}\n                  chatsById={chatsById}\n                  usersById={usersById}\n                />\n              );\n            })}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentStory;\n    const storyId = tabState.statistics.currentStoryId;\n    const { byId: usersById } = global.users;\n    const { byId: chatsById } = global.chats;\n\n    return {\n      statistics, dcId, storyId, usersById, chatsById,\n    };\n  },\n)(StoryStatistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePreviousDeprecated<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useOldLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: text.text,\n            entities: text.entities,\n          })}\n        </span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage } from '../../api/types';\n\nimport { getMessagePoll } from '../../global/helpers';\nimport { selectChat, selectChatMessage, selectTabState } from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  onClose,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = getMessagePoll(message)!;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n        })}\n      </h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${message.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      chat,\n      message,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xrnUE4e6\",\"content\":\"z7kF7tij\",\"section\":\"T6wFpdQO\",\"general\":\"YftUWqqw\",\"top\":\"CWsWIKQ1\",\"bottom\":\"KBl0ycLl\",\"iconWrapper\":\"iJ1U9kDD\",\"icon\":\"Rk6PT_yc\",\"clickable\":\"K1CTKtBS\",\"heading\":\"qlo3vSEw\",\"icon-picker\":\"r06zwL42\",\"iconPicker\":\"r06zwL42\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport {\n  selectChat, selectIsCurrentUserPremium, selectTabState, selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.chatId && editTopicPanel?.topicId\n      ? selectTopic(global, editTopicPanel.chatId, editTopicPanel.topicId) : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiBotInfo, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport {\n  getChatAvatarHash, getMainUsername, getUserFirstOrLastName,\n} from '../../../global/helpers';\nimport {\n  selectBot,\n  selectTabState,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  userId?: string;\n  user?: ApiUser;\n  chatBot?: ApiBotInfo;\n  currentBio?: string;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  maxBioLength: number;\n};\n\nconst ERROR_NAME_MISSING = 'Please provide name';\n\nconst ManageBot: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  onClose,\n  currentBio,\n  isActive,\n  maxBioLength,\n}) => {\n  const {\n    setBotInfo,\n    uploadProfilePhoto,\n    uploadContactProfilePhoto,\n    startBotFatherConversation,\n  } = getActions();\n\n  const [isFieldTouched, markFieldTouched, unmarkProfileTouched] = useFlag(false);\n  const [isAvatarTouched, markAvatarTouched, unmarkAvatarTouched] = useFlag(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  const username = useMemo(() => (user ? getMainUsername(user) : undefined), [user]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentName = user ? getUserFirstOrLastName(user) : '';\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [name, setName] = useState(currentName || '');\n  const [bio, setBio] = useState(currentBio || '');\n\n  const currentAvatarHash = user && getChatAvatarHash(user);\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    unmarkProfileTouched();\n    unmarkAvatarTouched();\n  }, [userId]);\n\n  useEffect(() => {\n    setName(currentName || '');\n    setBio(currentBio || '');\n  }, [currentName, currentBio, user]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkProfileTouched();\n      unmarkAvatarTouched();\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleNameChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n    markFieldTouched();\n\n    if (error === ERROR_NAME_MISSING) {\n      setError(undefined);\n    }\n  });\n\n  const handleBioChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    markFieldTouched();\n  });\n\n  const handlePhotoChange = useLastCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n    markAvatarTouched();\n  });\n\n  const handleProfileSave = useLastCallback(() => {\n    const trimmedName = name.trim();\n    const trimmedBio = bio.trim();\n\n    if (!trimmedName.length) {\n      setError(ERROR_NAME_MISSING);\n      return;\n    }\n\n    setBotInfo({\n      ...(isFieldTouched && {\n        bot: user,\n        name: trimmedName,\n        description: trimmedBio,\n      }),\n    });\n\n    if (photo) {\n      uploadProfilePhoto({\n        file: photo,\n        ...(isAvatarTouched && { bot: user }),\n      });\n    }\n  });\n\n  const handleChangeEditIntro = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-intro` });\n  });\n\n  const handleChangeEditCommands = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-commands` });\n  });\n\n  const handleChangeSettings = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}` });\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSelectAvatar = useLastCallback((file: File) => {\n    markAvatarTouched();\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  });\n\n  if (!user) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title={lang('ChatSetPhotoOrVideo')}\n            disabled={isLoading}\n          />\n          <InputText\n            id=\"user-name\"\n            label={lang('PaymentCheckoutName')}\n            onChange={handleNameChange}\n            value={name}\n            error={error === ERROR_NAME_MISSING ? error : undefined}\n            teactExperimentControlled\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('DescriptionPlaceholder')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n        </div>\n        <div className=\"section\">\n          <div className=\"dialog-buttons\">\n            <ListItem icon=\"bot-commands-filled\" ripple onClick={handleChangeEditIntro}>\n              <span>{lang('BotEditIntro')}</span>\n            </ListItem>\n            <ListItem icon=\"bot-command\" ripple onClick={handleChangeEditCommands}>\n              <span>{lang('BotEditCommands')}</span>\n            </ListItem>\n            <ListItem icon=\"bots\" ripple onClick={handleChangeSettings}>\n              <span>{lang('BotChangeSettings')}</span>\n            </ListItem>\n            <div className=\"section-info section-info_push\">\n              {renderText(lang('BotManageInfo'), ['links'])}\n            </div>\n          </div>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isFieldTouched || isAvatarTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectBot(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    return {\n      userId,\n      user,\n      progress,\n      currentBio: userFullInfo?.bio,\n      maxBioLength,\n    };\n  },\n)(ManageBot));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!canInvite) return;\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId, canInvite]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"channel-title\"\n            label={lang('EnterChannelName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"channel-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            onChange={handleAboutChange}\n            value={about}\n            maxLength={CHANNEL_MAX_DESCRIPTION}\n            maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{formatInteger(chat.membersCount!)}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  isChannel?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n}) => {\n  const { toggleSignatures } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const areSignaturesEnabled = Boolean(chat?.areSignaturesShown);\n  const areProfilesEnabled = Boolean(chat?.areProfilesShown);\n\n  const canAddNewAdmins = Boolean(chat?.isCreator || (chat && getHasAdminRight(chat, 'addAdmins')));\n  const canToggleSignatures = isChannel && getHasAdminRight(chat!, 'postMessages');\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    const [owner, admins] = partition(Object.values(adminMembersById), (member) => member.isOwner);\n\n    return [...owner, ...admins];\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useLastCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  });\n\n  const handleToggleSignatures = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled,\n      areSignaturesEnabled: !areSignaturesEnabled,\n    });\n  });\n\n  const handleToggleProfiles = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled: !areProfilesEnabled,\n      areSignaturesEnabled,\n    });\n  });\n\n  const handleAddAdminClick = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  });\n\n  const getMemberStatus = useLastCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  });\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\" dir=\"auto\">\n            {lang(isChannel\n              ? 'Channel.Management.AddModeratorHelp'\n              : 'Group.Management.AddModeratorHelp')}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <i className=\"icon icon-add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n\n        {canToggleSignatures && (\n          <div className=\"section\">\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={areSignaturesEnabled}\n                label={lang('ChannelSignMessages')}\n                onChange={handleToggleSignatures}\n              />\n            </div>\n            {areSignaturesEnabled && (\n              <>\n                <div className=\"ListItem narrow\">\n                  <Checkbox\n                    checked={areProfilesEnabled}\n                    label={lang('ChannelSignMessagesWithProfile')}\n                    onChange={handleToggleProfiles}\n                  />\n                </div>\n                <p className=\"section-info\">\n                  {lang('ChannelSignProfilesInfo')}\n                </p>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: chat && isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useOldLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <SafeLink url={privateInviteLink} className=\"group-link\" text={privateInviteLink} />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <UsernameInput\n              asLink\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId) && selectManagement(global, chatId));\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n\n    return filterUsersByName(availableMemberIds, usersById, search);\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useOldLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <i className=\"icon icon-add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useOldLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={isJoinToSend}\n                onCheck={handleJoinToSendCheck}\n                label={lang('ChannelSettingsJoinToSend')}\n              />\n            </div>\n            {isJoinToSend && (\n              <div className=\"ListItem narrow\">\n                <Checkbox\n                  checked={isJoinRequest}\n                  onCheck={handleJoinRequestCheck}\n                  label={lang('ChannelSettingsJoinRequest')}\n                />\n              </div>\n            )}\n            <p className=\"text-muted\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId ? selectChat(global, linkedChatId) : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  });\n\n  const handleClickDiscussion = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  });\n\n  const handleClickReactions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  });\n\n  const handleClickPermissions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  });\n\n  const handleClickAdministrators = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  });\n\n  const handleClickInvites = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  });\n\n  const handleClickRequests = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  });\n\n  const handleSetPhoto = useLastCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleTitleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleAboutChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleUpdateGroup = useLastCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  });\n\n  const handleClickMembers = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  });\n\n  const handleTogglePreHistory = useLastCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  });\n\n  const handleForumToggle = useLastCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  });\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useLastCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  });\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"group-title\"\n            label={lang('GroupName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === GROUP_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"group-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            maxLength={GROUP_MAX_DESCRIPTION}\n            maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n            onChange={handleAboutChange}\n            value={about}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n    const canChangeInfo = chat.isCreator || getHasAdminRight(chat, 'changeInfo');\n    const canBanUsers = chat.isCreator || getHasAdminRight(chat, 'banUsers');\n    const canInvite = chat.isCreator || getHasAdminRight(chat, 'inviteUsers');\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo,\n      canBanUsers,\n      canInvite,\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.reactions.availableReactions,\n      canEditForum,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"postStories\"\n              checked={Boolean(permissions.postStories)}\n              label={lang('EditAdminPostStories')}\n              blocking\n              disabled={getControlIsDisabled('postStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"editStories\"\n              checked={Boolean(permissions.editStories)}\n              label={lang('EditAdminEditStories')}\n              blocking\n              disabled={getControlIsDisabled('editStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteStories\"\n              checked={Boolean(permissions.deleteStories)}\n              label={lang('EditAdminDeleteStories')}\n              blocking\n              disabled={getControlIsDisabled('deleteStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens, NewChatMembersProgress } from '../../../types';\n\nimport {\n  filterUsersByName, getHasAdminRight, isChatBasicGroup,\n  isChatChannel, isUserBot, isUserRightBanned, sortUserIds,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Switcher from '../../ui/Switcher';\nimport DeleteMemberModal from '../DeleteMemberModal';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  canAddMembers?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  canAddMembers,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement,\n    toggleParticipantsHidden, setNewChatMembersDialogState, toggleManagement,\n  } = getActions();\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  usePeerStoriesPolling(memberIds);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useLastCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useLastCallback(() => {\n    setDeletingUserId(undefined);\n  });\n\n  const handleToggleParticipantsHidden = useLastCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  });\n\n  const handleNewMemberDialogOpen = useLastCallback(() => {\n    toggleManagement();\n    setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.InProgress });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"custom-scroll\">\n        {canHideParticipants && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canAddMembers && (\n        <FloatingActionButton\n          isShown\n          onClick={handleNewMemberDialogOpen}\n          ariaLabel={lang('lng_channel_add_users')}\n        >\n          <Icon name=\"add-user-filled\" />\n        </FloatingActionButton>\n      )}\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const canAddMembers = chat && ((getHasAdminRight(chat, 'inviteUsers')\n        || (!isChannel && !isUserRightBanned(chat, 'inviteUsers')))\n      || chat.isCreator\n    );\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      canAddMembers,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n};\n\nconst ITEM_HEIGHT = 24 + 12;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  currentUserId,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatDefaultBannedRights } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  }, [chat, permissions, setIsLoading, updateChatDefaultBannedRights]);\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = lang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, lang]);\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            dropdownClassName=\"DropdownListTrap\"\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n          />\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{oldLang('UserRestrictionsCanDo')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            dropdownClassName=\"DropdownListTrap\"\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n            getControlIsDisabled={getControlIsDisabled}\n          />\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {oldLang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={oldLang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text={lang('GroupManagementBanUserConfirm')}\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"text-muted hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-header\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"text-muted hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-header\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"text-muted hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId] || {};\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    showNotification,\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  const handleCopyClicked = useCallback(() => {\n    copyTextToClipboard(invite!.link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [invite, lang, showNotification]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p>{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"text-muted\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p>{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"text-muted\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"custom-scroll\">\n        {!invite && (\n          <p className=\"text-muted\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <h3 className=\"link-title\">{invite.title || invite.link}</h3>\n              <input\n                className=\"form-control\"\n                value={invite.link}\n                readOnly\n                onClick={handleCopyClicked}\n              />\n              <Button className=\"copy-link\" onClick={handleCopyClicked}>{lang('CopyLink')}</Button>\n              {Boolean(expireDate) && (\n                <p className=\"text-muted\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p>{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId] || {};\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport LinkField from '../../common/LinkField';\nimport NothingFound from '../../common/NothingFound';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(forceUpdate, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = lang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = lang('PeopleJoined', usage);\n    } else {\n      text = lang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${lang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${lang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${lang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += lang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += lang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${lang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: lang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: lang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: lang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: lang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"text-muted\">{isChannel ? lang('PrimaryLinkHelpChannel') : lang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <LinkField\n            className=\"section\"\n            link={primaryInviteLink}\n            withShare\n            onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n            title={chat?.usernames ? lang('PublicLink') : lang('lng_create_permanent_link_title')}\n          />\n        )}\n        <div className=\"section\" teactFastList>\n          <Button isText key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {lang('CreateNewLink')}\n          </Button>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"text-muted hint\" key=\"links-hint\">{lang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"text-muted\" key=\"title\">{lang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{lang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={lang('DeleteAllRevokedLinks')}\n        text={lang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={lang('RevokeLink')}\n        text={lang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={lang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={lang('DeleteLink')}\n        text={lang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId] || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useOldLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"text-muted\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport {\n  MAX_UNIQUE_REACTIONS,\n} from '../../../config';\nimport { isChatChannel, isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions: number;\n  reactionsLimit?: number;\n  isChannel?: boolean;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n  maxUniqueReactions,\n  reactionsLimit,\n  isChannel,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useOldLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  const [localReactionsLimit, setLocalReactionsLimit] = useState(reactionsLimit);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n      reactionsLimit: localReactionsLimit,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions, localReactionsLimit]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n    setLocalReactionsLimit(reactionsLimit);\n  }, [enabledReactions, reactionsLimit]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  useEffect(() => {\n    if (localReactionsLimit !== undefined && localReactionsLimit !== reactionsLimit) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some') {\n      const isReactionsDisabled = enabledReactions?.type !== 'all' && enabledReactions?.type !== 'some';\n\n      if (isReactionsDisabled && localEnabledReactions.allowed.length === 0) {\n        setIsTouched(false);\n        return;\n      }\n    }\n\n    if (localEnabledReactions?.type !== enabledReactions?.type) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some' && enabledReactions?.type === 'some') {\n      const localAllowedReactions = localEnabledReactions.allowed;\n      const enabledAllowedReactions = enabledReactions?.allowed;\n\n      if (localAllowedReactions.length !== enabledAllowedReactions.length\n      || localAllowedReactions.reverse().some(\n        (localReaction) => !enabledAllowedReactions.find(\n          (enabledReaction) => isSameReaction(localReaction, enabledReaction),\n        ),\n      )) {\n        setIsTouched(true);\n        return;\n      }\n    }\n\n    setIsTouched(false);\n  }, [\n    localReactionsLimit,\n    reactionsLimit,\n    localEnabledReactions,\n    enabledReactions,\n  ]);\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n      setLocalReactionsLimit(reactionsLimit);\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n      setLocalReactionsLimit(reactionsLimit);\n    } else {\n      setLocalEnabledReactions(undefined);\n      setLocalReactionsLimit(undefined);\n    }\n  }, [enabledReactions, reactionsLimit]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  const handleReactionsLimitChange = useCallback((value: number) => {\n    setLocalReactionsLimit(value);\n  }, []);\n\n  const renderReactionsMaxCountValue = useCallback((value: number) => {\n    return lang('PeerInfo.AllowedReactions.MaxCountValue', value);\n  }, [lang]);\n\n  const shouldShowReactionsLimit = isChannel\n  && (localEnabledReactions?.type === 'all' || localEnabledReactions?.type === 'some');\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        { localReactionsLimit && shouldShowReactionsLimit && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('MaximumReactionsHeader')}\n            </h3>\n            <RangeSlider\n              min={1}\n              max={maxUniqueReactions}\n              value={localReactionsLimit}\n              onChange={handleReactionsLimitChange}\n              renderValue={renderReactionsMaxCountValue}\n              isCenteredLayout\n            />\n            <p className=\"section-info mt-4\">\n              {lang('ChannelReactions.MaxCount.Info')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info mt-4\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section section-with-fab\">\n            <h3 className=\"section-heading\">\n              {lang('OnlyAllowThisReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  withIcon\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { maxUniqueReactions = MAX_UNIQUE_REACTIONS } = global.appConfig || {};\n\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n    const isChannel = isChatChannel(chat);\n\n    return {\n      enabledReactions: chatFullInfo?.enabledReactions,\n      availableReactions: global.reactions.availableReactions,\n      chat,\n      maxUniqueReactions,\n      reactionsLimit,\n      isChannel,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <InputText\n            id=\"user-first-name\"\n            label={lang('UserInfo.FirstNamePlaceholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            id=\"user-last-name\"\n            label={lang('UserInfo.LastNamePlaceholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n          />\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"text-muted\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageBot from './ManageBot';\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'bot':\n          return (\n            <ManageBot\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Record<string, string>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"maC_9u6e\",\"description\":\"zQ6lEVJ2\",\"checkout-picture\":\"JgWvLdK2\",\"checkoutPicture\":\"JgWvLdK2\",\"text\":\"T2pYH395\",\"checkout-title\":\"HadolzeF\",\"checkoutTitle\":\"HadolzeF\",\"checkout-description\":\"oZW7mUNP\",\"checkoutDescription\":\"oZW7mUNP\",\"price-info\":\"P618Q3yr\",\"priceInfo\":\"P618Q3yr\",\"price-info-item\":\"XNNG_ajy\",\"priceInfoItem\":\"XNNG_ajy\",\"price-info-item-main\":\"D9gYNLVk\",\"priceInfoItemMain\":\"D9gYNLVk\",\"price-info-item-title\":\"NtY5Aah7\",\"priceInfoItemTitle\":\"NtY5Aah7\",\"tipsList\":\"WHO341eB\",\"tipsItem\":\"ksLlzBxw\",\"tipsItem_active\":\"J4yem62L\",\"tipsItemActive\":\"J4yem62L\",\"invoice-info\":\"U2IBOLP1\",\"invoiceInfo\":\"U2IBOLP1\",\"provider\":\"kqWcdro1\",\"stripe\":\"xKztZrna\",\"smartglocal\":\"X_Ge1o4u\",\"checkout-info-item-info-title\":\"ysWuPklS\",\"checkoutInfoItemInfoTitle\":\"ysWuPklS\",\"checkout-info-item-info-data\":\"MpC_P8_c\",\"checkoutInfoItemInfoData\":\"MpC_P8_c\",\"tos-checkbox\":\"OrRb0xG7\",\"tosCheckbox\":\"OrRb0xG7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiInvoice, ApiPaymentCredentials,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { LangCode, Price } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  invoice?: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n    botName?: string;\n  };\n  prices?: Price[];\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: Price[];\n  currency: string;\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst Checkout: FC<OwnProps> = ({\n  invoice,\n  prices,\n  shippingPrices,\n  checkoutInfo,\n  currency,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const lang = useOldLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    photo, title, text, termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(tipAmount!, currency, lang.code)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(tip, currency, lang.code, { shouldOmitFractions: true })}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = lang('PaymentCheckoutAcceptRecurrent', botName);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, lang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && <img className={styles.checkoutPicture} src={photoUrl} draggable={false} alt=\"\" />}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {text && <div className={styles.checkoutDescription}>{renderText(text, ['br', 'links', 'emoji'])}</div>}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {prices && prices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang.code, lang('Checkout.TotalAmount'), totalPrice, currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {!isPaymentFormUrl && renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: lang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: lang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || (!isInteractive && shippingAddress)) && renderCheckoutItem({\n          title: shippingAddress,\n          label: lang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: lang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: lang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || (!isInteractive && shippingMethod)) && renderCheckoutItem({\n          title: shippingMethod,\n          label: lang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  langCode: LangCode | undefined, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(value, currency, langCode)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  const isMultiline = Boolean(title && label !== title);\n\n  return (\n    <ListItem\n      multiline={isMultiline}\n      narrow={isMultiline}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n      leftElement={customIcon && <i className={buildClassName('icon', customIcon)} />}\n    >\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n  onPaymentFormSubmit?: (eventData: PaymentFormSubmitEvent['eventData']) => void;\n};\n\nexport interface PaymentFormSubmitEvent {\n  eventType: 'payment_form_submit';\n  eventData: {\n    credentials: {\n      token: string;\n      type: string;\n    };\n    title: string;\n  };\n}\n\ninterface WebAppOpenTgLinkEvent {\n  eventType: 'web_app_open_tg_link';\n  eventData: {\n    path_full?: string;\n  };\n}\n\ntype IframeCallbackEvent = PaymentFormSubmitEvent | WebAppOpenTgLinkEvent;\n\nconst ConfirmPayment: FC<OwnProps> = ({\n  url, noRedirect, onClose, onPaymentFormSubmit,\n}) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useOldLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n      switch (eventType) {\n        case 'web_app_open_tg_link':\n          if (!noRedirect) {\n            const linkUrl = TME_LINK_PREFIX + eventData.path_full!;\n            openTelegramLink({ url: linkUrl });\n          }\n          onClose();\n          break;\n        case 'payment_form_submit':\n          if (onPaymentFormSubmit) {\n            onPaymentFormSubmit(eventData);\n          }\n          break;\n        default:\n          onClose();\n          break;\n      }\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink, onPaymentFormSubmit]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  error?: string;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  error,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const lang = useOldLang();\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={error ? lang(error) : undefined}\n        hint={passwordHint}\n        description={lang('PaymentConfirmationMessage', cardName)}\n        placeholder={lang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    error: payment.error?.message,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.savedCredentials,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMeasure(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 19;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const lang = useOldLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber}\n        />\n        { needCardholderName && (\n          <InputText\n            label={lang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry}\n          />\n          <InputText\n            label={lang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv}\n            teactExperimentControlled\n          />\n        </section>\n        { needCountry || needZip ? (\n          <h5>{lang('PaymentBillingAddress')}</h5>\n        ) : undefined }\n        { needCountry && (\n          <Select\n            label={lang('PaymentShippingCountry')}\n            onChange={handleCountryChange}\n            value={state.billingCountry}\n            hasArrow={Boolean(true)}\n            id=\"billing-country\"\n            error={formErrors.billingCountry}\n            tabIndex={0}\n            ref={selectCountryRef}\n          >\n            {\n              countryList.map(({ defaultName, name }) => (\n                <option\n                  value={defaultName}\n                  className=\"county-item\"\n                  selected={defaultName === state.billingCountry}\n                >\n                  {defaultName || name}\n                </option>\n              ))\n            }\n          </Select>\n        ) }\n        { needZip && (\n          <InputText\n            label={lang('PaymentShippingZipPlaceholder')}\n            onChange={handleBillingPostCodeChange}\n            value={state.billingZip}\n            inputMode=\"text\"\n            tabIndex={0}\n            maxLength={12}\n            error={formErrors.billingZip}\n          />\n        )}\n        <Checkbox\n          label={lang('PaymentCardSavePaymentInformation')}\n          checked={canSaveCredentials ? state.saveCredentials : false}\n          tabIndex={0}\n          onChange={handleChangeSaveCredentials}\n          disabled={!canSaveCredentials}\n        />\n        <p className=\"description\">\n          {lang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useOldLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(amount, currency, lang.code),\n    value,\n  }))), [shippingOptions, currency, lang.code]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{lang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const lang = useOldLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{lang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={lang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1}\n            />\n            <InputText\n              label={lang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2}\n            />\n            <InputText\n              label={lang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city}\n            />\n            <InputText\n              label={lang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state}\n            />\n            <Select\n              label={lang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={lang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{lang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={lang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={lang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={lang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={lang('PaymentShippingSave')}\n          subLabel={lang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiCountry, ApiPaymentCredentials } from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { Price, ShippingOption } from '../../types';\nimport type { PaymentFormSubmitEvent } from './ConfirmPayment';\nimport { PaymentStep } from '../../types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrencyAsString } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst DONATE_PROVIDER_URL = 'https://payment.smart-glocal.com';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isNameRequested?: boolean;\n  isShippingAddressRequested?: boolean;\n  isPhoneRequested?: boolean;\n  isEmailRequested?: boolean;\n  shouldSendPhoneToProvider?: boolean;\n  shouldSendEmailToProvider?: boolean;\n  currency?: string;\n  prices?: Price[];\n  isProviderError?: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions?: boolean;\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\ntype GlobalStateProps = Pick<TabState['payment'], (\n  'step' | 'shippingOptions' |\n  'savedInfo' | 'canSaveCredentials' | 'nativeProvider' | 'passwordMissing' | 'invoice' | 'error'\n)>;\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps & GlobalStateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  shippingOptions,\n  savedInfo,\n  canSaveCredentials,\n  isNameRequested,\n  isShippingAddressRequested,\n  isPhoneRequested,\n  isEmailRequested,\n  shouldSendPhoneToProvider,\n  shouldSendEmailToProvider,\n  currency,\n  passwordMissing,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  prices,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n    setSmartGlocalCardInfo,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePreviousDeprecated(step, true);\n  const prevRequestId = usePreviousDeprecated(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.message,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [savedInfo, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.description || 'Error'}</h4>\n        <p>{error.description || 'Error'}</p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handlePaymentFormSubmit = useCallback((eventData: PaymentFormSubmitEvent['eventData']) => {\n    const { credentials } = eventData;\n    setSmartGlocalCardInfo(credentials);\n    sendForm();\n  }, [sendForm]);\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            prices={prices}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            isPaymentFormUrl={isPaymentFormUrl}\n            currency={currency!}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n            botName={botName}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!passwordMissing && canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(isShippingAddressRequested)}\n            needEmail={Boolean(isEmailRequested || shouldSendEmailToProvider)}\n            needPhone={Boolean(isPhoneRequested || shouldSendPhoneToProvider)}\n            needName={Boolean(isNameRequested)}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={currency!}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onPaymentFormSubmit={handlePaymentFormSubmit}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const handleButtonClick = useLastCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (isPaymentFormUrl) {\n          setIsLoading(true);\n          setStep(PaymentStep.ConfirmPayment);\n          return;\n        }\n\n        if (savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (isEmailRequested && !email)\n          || (isPhoneRequested && !phone)\n          || (isNameRequested && !fullName);\n\n        if ((isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (isShippingAddressRequested && !paymentState.shipping && shippingOptions?.length) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  });\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return lang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return lang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return lang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return lang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return lang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return lang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return lang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, lang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? lang('Checkout.PayPrice', formatCurrencyAsString(totalPrice, currency!, lang.code))\n    : lang('Next');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.termsUrl) && !isTosAccepted;\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <i className={buildClassName(\n            'icon', step === PaymentStep.Checkout ? 'icon-close' : 'icon-arrow-left',\n          )}\n          />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition\n          name=\"slide\"\n          activeKey={step}\n          shouldCleanup\n          cleanupOnlyKey={PaymentStep.ConfirmPayment}\n        >\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps & GlobalStateProps => {\n    const {\n      step,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      invoice,\n      invoiceContainer,\n      nativeProvider,\n      nativeParams,\n      passwordMissing,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      savedCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n      url,\n      botId,\n      type,\n    } = selectTabState(global).payment;\n\n    const countryList = global.countryList.general;\n\n    // Handled in `StarPaymentModal`\n    if (type === 'stars') {\n      return {\n        countryList,\n      };\n    }\n\n    let providerName = nativeProvider;\n    if (!providerName && url) {\n      providerName = url.startsWith(DONATE_PROVIDER_URL) ? DONATE_PROVIDER : undefined;\n    }\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId!) : undefined;\n    const isProviderError = Boolean(invoice && (!providerName || !SUPPORTED_PROVIDERS.has(providerName)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const {\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n    } = (invoiceContainer || {});\n    const bot = botId ? selectUser(global, botId) : undefined;\n    const botName = getUserFullName(bot);\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      nativeProvider: providerName,\n      passwordMissing,\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n      isProviderError,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl: confirmPaymentUrl ?? url,\n      isPaymentFormUrl: Boolean(!nativeProvider && url),\n      countryList,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      savedCredentials,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n      botName,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: Price[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiInvoice, ApiShippingAddress, ApiWebDocument } from '../../api/types';\nimport type { Price } from '../../types';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  prices?: Price[];\n  shippingPrices: any;\n  tipAmount?: number;\n  totalAmount?: number;\n  currency?: string;\n  info?: {\n    shippingAddress?: ApiShippingAddress;\n    phone?: string;\n    name?: string;\n  };\n  photo?: ApiWebDocument;\n  text?: string;\n  title?: string;\n  credentialsTitle?: string;\n  shippingMethod?: string;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  prices,\n  shippingPrices,\n  tipAmount,\n  totalAmount,\n  currency,\n  info,\n  photo,\n  text,\n  title,\n  credentialsTitle,\n  shippingMethod,\n}) => {\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const checkoutInfo = useMemo(() => {\n    return getCheckoutInfo(credentialsTitle, info, shippingMethod);\n  }, [info, shippingMethod, credentialsTitle]);\n\n  const invoice: ApiInvoice = useMemo(() => {\n    return {\n      mediaType: 'invoice',\n      photo,\n      text: text!,\n      title: title!,\n      amount: totalAmount!,\n      currency: currency!,\n    };\n  }, [currency, photo, text, title, totalAmount]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      <div>\n        <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className=\"close-button\"\n            color=\"translucent\"\n            round\n            size=\"smaller\"\n            onClick={closeModal}\n            ariaLabel=\"Close\"\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <h3> {lang('PaymentReceipt')} </h3>\n        </div>\n        <div className=\"receipt-content custom-scroll\">\n          <Checkout\n            prices={prices}\n            shippingPrices={shippingPrices}\n            totalPrice={totalAmount}\n            tipAmount={tipAmount}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            currency={currency!}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n    const {\n      currency,\n      prices,\n      info,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n      tipAmount,\n    } = (receipt || {});\n\n    return {\n      currency,\n      prices,\n      info,\n      tipAmount,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?:\n  { phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"n8eENbaR\",\"closeButton\":\"smosGkw9\",\"contentText\":\"Qo4PtFZI\",\"title\":\"wtfpombl\",\"separator\":\"UoMeVIyC\",\"userPicker\":\"nEYyTS_m\",\"sendInvites\":\"Ttkq3nqt\",\"avatarList\":\"Nc3SOtKd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './InviteViaLinkModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['inviteViaLinkModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n};\n\nconst InviteViaLinkModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n}) => {\n  const { sendInviteMessages, closeInviteViaLinkModal, openPremiumModal } = getActions();\n  const { missingUsers } = modal || {};\n\n  const lang = useOldLang();\n  const [selectedMemberIds, setSelectedMemberIds] = useState<string[]>([]);\n\n  const userIds = useMemo(() => missingUsers?.map((user) => user.id) || MEMO_EMPTY_ARRAY, [missingUsers]);\n  const [unselectableIds, selectableIds] = useMemo(() => {\n    if (!missingUsers?.length) return [[], []];\n    const [requirePremiumIds, regularIds] = partition(missingUsers, (user) => user.isRequiringPremiumToMessage);\n    return [requirePremiumIds.map((user) => user.id), regularIds.map((user) => user.id)];\n  }, [missingUsers]);\n\n  const invitableWithPremiumIds = useMemo(() => {\n    return missingUsers?.filter((user) => user.isRequiringPremiumToInvite || user.isRequiringPremiumToMessage)\n      .map((user) => user.id);\n  }, [missingUsers]);\n\n  const isEveryPremiumBlocksPm = useMemo(() => {\n    if (!missingUsers) return undefined;\n    return !missingUsers.some((user) => user.isRequiringPremiumToInvite && !user.isRequiringPremiumToMessage);\n  }, [missingUsers]);\n\n  const topListPeers = useMemo(() => {\n    const users = getGlobal().users.byId;\n    return invitableWithPremiumIds?.map((id) => users[id]);\n  }, [invitableWithPremiumIds]);\n\n  useEffect(() => {\n    setSelectedMemberIds(selectableIds);\n  }, [selectableIds]);\n\n  const handleClose = useLastCallback(() => closeInviteViaLinkModal());\n\n  const handleSendInviteLink = useCallback(() => {\n    sendInviteMessages({ chatId: chat!.id, userIds: selectedMemberIds! });\n    closeInviteViaLinkModal();\n  }, [selectedMemberIds, chat]);\n\n  const handleOpenPremiumModal = useCallback(() => {\n    openPremiumModal();\n  }, []);\n\n  const canSendInviteLink = useMemo(() => {\n    if (!chat) return undefined;\n    return Boolean(chat?.isCreator || chat?.adminRights?.inviteUsers);\n  }, [chat]);\n\n  const inviteSectionText = useMemo(() => {\n    return canSendInviteLink\n      ? lang(missingUsers?.length === 1 ? 'InviteBlockedOneMessage' : 'InviteBlockedManyMessage')\n      : lang('InviteRestrictedUsers2', missingUsers?.length);\n  }, [canSendInviteLink, lang, missingUsers?.length]);\n\n  const premiumSectionText = useMemo(() => {\n    if (!invitableWithPremiumIds?.length || !topListPeers?.length) return undefined;\n    const prefix = isEveryPremiumBlocksPm ? 'InviteMessagePremiumBlocked' : 'InvitePremiumBlocked';\n    let langKey = `${prefix}One`;\n    let params = [getUserFullName(topListPeers[0])];\n    if (invitableWithPremiumIds.length === 2) {\n      langKey = `${prefix}Two`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1])];\n    } else if (invitableWithPremiumIds.length === 3) {\n      langKey = `${prefix}Three`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1]), getUserFullName(topListPeers[2])];\n    } else if (invitableWithPremiumIds.length > 3) {\n      langKey = `${prefix}Many`;\n      params = [\n        getUserFullName(topListPeers[0]),\n        getUserFullName(topListPeers[1]),\n        (invitableWithPremiumIds!.length - 2).toString(),\n      ];\n    }\n\n    return lang(langKey, params, undefined, topListPeers.length);\n  }, [invitableWithPremiumIds, isEveryPremiumBlocksPm, lang, topListPeers]);\n\n  const hasPremiumSection = Boolean(topListPeers?.length);\n  const hasSelectableSection = Boolean(selectableIds?.length);\n\n  return (\n    <Modal\n      isOpen={Boolean(userIds && chat)}\n      contentClassName={styles.content}\n      onClose={handleClose}\n      isSlim\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {premiumSectionText && (\n        <>\n          <AvatarList\n            className={styles.avatarList}\n            peers={topListPeers}\n            size=\"large\"\n          />\n          <h3 className={styles.title}>\n            {canSendInviteLink ? lang('InvitePremiumBlockedTitle') : lang('ChannelInviteViaLinkRestricted')}\n          </h3>\n          <p className={styles.contentText}>\n            {renderText(premiumSectionText, ['simple_markdown'])}\n          </p>\n          <Button\n            withPremiumGradient\n            isShiny\n            size=\"smaller\"\n            onClick={handleOpenPremiumModal}\n          >\n            {lang('InvitePremiumBlockedSubscribe')}\n          </Button>\n        </>\n      )}\n      {hasPremiumSection && hasSelectableSection && (\n        <Separator className={styles.separator}>\n          {lang('InvitePremiumBlockedOr')}\n        </Separator>\n      )}\n      {hasSelectableSection && (\n        <>\n          <h3 className={styles.title}>{lang('InviteBlockedTitle')}</h3>\n          <p className={styles.contentText}>\n            {inviteSectionText}\n          </p>\n          <PeerPicker\n            className={styles.userPicker}\n            itemIds={userIds}\n            selectedIds={selectedMemberIds}\n            lockedUnselectedIds={unselectableIds}\n            lockedUnselectedSubtitle={lang('InvitePremiumBlockedUser')}\n            onSelectedIdsChange={setSelectedMemberIds}\n            isViewOnly={!canSendInviteLink}\n            allowMultiple\n            withStatus\n            itemInputType=\"checkbox\"\n          />\n          {canSendInviteLink && (\n            <Button\n              className={styles.sendInvites}\n              size=\"smaller\"\n              onClick={handleSendInviteLink}\n              disabled={!selectedMemberIds.length}\n            >\n              {lang('SendInviteLink.ActionInvite')}\n            </Button>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal?.chatId ? selectChat(global, modal.chatId) : undefined;\n\n    return {\n      chat,\n    };\n  },\n)(InviteViaLinkModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c3xMWwzW\",\"fade-in-opacity\":\"cHb04cFv\",\"fadeInOpacity\":\"cHb04cFv\",\"closing\":\"_0HkZ8ITm\",\"voice\":\"VLiJWMs0\",\"video\":\"ML2YEpGq\",\"footer\":\"VWy1qXJL\",\"closeBtn\":\"FfMrCmD9\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { isOwnMessage } from '../../../global/helpers';\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Audio from '../../common/Audio';\nimport RoundVideo from '../../middle/message/RoundVideo';\nimport Button from '../../ui/Button';\n\nimport styles from './OneTimeMediaModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['oneTimeMediaModal'];\n};\n\nconst OneTimeMediaModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    closeOneTimeMediaModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const message = useCurrentOrPrev(modal?.message, true);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(modal));\n\n  const handlePlayVoice = useLastCallback(() => {\n    return undefined;\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeOneTimeMediaModal();\n  });\n\n  if (!shouldRender || !message) {\n    return undefined;\n  }\n\n  const isOwn = isOwnMessage(message);\n  const theme = selectTheme(getGlobal());\n  const closeBtnTitle = isOwn ? lang('Chat.Voice.Single.Close') : lang('Chat.Voice.Single.DeleteAndClose');\n\n  function renderMedia() {\n    if (!message?.content) {\n      return undefined;\n    }\n    const { voice, video } = message.content;\n    if (voice) {\n      return (\n        <Audio\n          className={styles.voice}\n          theme={theme}\n          message={message}\n          origin={AudioOrigin.OneTimeModal}\n          autoPlay\n          onPlay={handlePlayVoice}\n          onPause={handleClose}\n        />\n      );\n    } else if (video?.isRound) {\n      return (\n        <RoundVideo\n          className={styles.video}\n          message={message}\n          origin=\"oneTimeModal\"\n          onStop={handleClose}\n        />\n      );\n    }\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, transitionClassNames)}>\n      {renderMedia()}\n      <div className={styles.footer}>\n        <Button\n          faded\n          onClick={handleClose}\n          pill\n          size=\"smaller\"\n          color={theme === 'dark' ? 'dark' : 'secondary'}\n          className={styles.closeBtn}\n        >\n          {closeBtnTitle}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(OneTimeMediaModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hyRfEyRz\",\"top\":\"p_Ny8jqJ\",\"badge\":\"QRrryqp4\",\"text\":\"I5jdPgFL\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerBadge.module.scss';\n\ntype OwnProps = {\n  peer: ApiPeer | CustomPeer;\n  text?: string;\n  badgeText?: string;\n  badgeIcon?: IconName;\n  className?: string;\n  badgeClassName?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PeerBadge = ({\n  peer,\n  text,\n  badgeText,\n  badgeIcon,\n  className,\n  badgeClassName,\n  onClick,\n}: OwnProps) => {\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n    >\n      <div className={styles.top}>\n        <Avatar size=\"large\" peer={peer} />\n        {badgeText && (\n          <div className={buildClassName(styles.badge, badgeClassName)}>\n            {badgeIcon && <Icon name={badgeIcon} />}\n            {badgeText}\n          </div>\n        )}\n      </div>\n      {text && <p className={styles.text}>{text}</p>}\n    </div>\n  );\n};\n\nexport default memo(PeerBadge);\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal, { type OwnProps as ModalProps } from '../../ui/Modal';\n\nimport styles from './PickerModal.module.scss';\n\ntype OwnProps = {\n  confirmButtonText?: string;\n  isConfirmDisabled?: boolean;\n  shouldAdaptToSearch?: boolean;\n  withFixedHeight?: boolean;\n  withPremiumGradient?: boolean;\n  onConfirm?: NoneToVoidFunction;\n} & ModalProps;\n\nconst PickerModal = ({\n  confirmButtonText,\n  isConfirmDisabled,\n  shouldAdaptToSearch,\n  withFixedHeight,\n  onConfirm,\n  withPremiumGradient,\n  ...modalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hasOnClickHandler = Boolean(onConfirm || modalProps.onClose);\n\n  return (\n    <Modal\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...modalProps}\n      isSlim\n      className={buildClassName(\n        shouldAdaptToSearch && styles.withSearch,\n        withFixedHeight && styles.fixedHeight,\n        modalProps.className,\n      )}\n      contentClassName={buildClassName(styles.content, modalProps.contentClassName)}\n      headerClassName={buildClassName(styles.header, modalProps.headerClassName)}\n    >\n      {modalProps.children}\n      {hasOnClickHandler && (\n        <div className={styles.buttonWrapper}>\n          <Button\n            withPremiumGradient={withPremiumGradient}\n            onClick={onConfirm || modalProps.onClose}\n            color=\"primary\"\n            size=\"smaller\"\n            disabled={isConfirmDisabled}\n          >\n            {confirmButtonText || lang('Confirm')}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(PickerModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"FuFYE0AA\",\"fixedHeight\":\"CrEsDylb\",\"withSearch\":\"WGSZ8u75\",\"header\":\"iEptOmIp\",\"buttonWrapper\":\"HqeDTaSr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"KYHkJ9Qf\",\"title\":\"AwnUe4Qk\",\"value\":\"JGH6P9Az\",\"table\":\"DFRB0Ad4\",\"cell\":\"Cnh5ENvm\",\"avatar\":\"SHQbPR5Y\",\"chatItem\":\"aS9U4hiQ\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\ntype ChatItem = { chatId: string };\n\nexport type TableData = [TeactNode, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  className?: string;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerAvatarPeer,\n  header,\n  footer,\n  buttonText,\n  className,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      isSlim\n      title={title}\n      className={className}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {headerAvatarPeer && (\n        <Avatar peer={headerAvatarPeer} size=\"jumbo\" className={styles.avatar} />\n      )}\n      {header}\n      <div className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <>\n            <div className={buildClassName(styles.cell, styles.title)}>{label}</div>\n            <div className={buildClassName(styles.cell, styles.value)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PickerSelectedItem\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  fluid\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </div>\n          </>\n        ))}\n      </div>\n      {footer}\n      {buttonText && (\n        <Button size=\"smaller\" onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"options\":\"OnCj9kef\",\"option\":\"tpTHQAUF\",\"active\":\"U_9MXPG5\",\"wideOption\":\"dJcJl33b\",\"optionTop\":\"x9G4lqMf\",\"stackedStars\":\"etXLebjM\",\"stackedStar\":\"swttXv9P\",\"optionBottom\":\"tK7La7L2\",\"moreOptions\":\"AWXBaWLW\",\"iconDown\":\"zWYHZJmd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiStarGiveawayOption, ApiStarTopupOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './StarTopupOptionList.module.scss';\n\nconst MAX_STARS_COUNT = 6;\n\ntype OwnProps = {\n  isActive?: boolean;\n  options?: ApiStarTopupOption[] | ApiStarGiveawayOption[];\n  selectedStarOption?: ApiStarTopupOption | ApiStarGiveawayOption;\n  selectedStarCount?: number;\n  starsNeeded?: number;\n  className?: string;\n  onClick: (option: ApiStarTopupOption | ApiStarGiveawayOption) => void;\n};\n\nconst StarTopupOptionList: FC<OwnProps> = ({\n  isActive,\n  className,\n  options,\n  selectedStarOption,\n  selectedStarCount,\n  starsNeeded,\n  onClick,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n\n  useEffect(() => {\n    if (!isActive) {\n      unmarkOptionsExtended();\n    }\n  }, [isActive]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!options) return [undefined, false];\n\n    const maxOption = options.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption | ApiStarGiveawayOption; starsCount: number; isWide: boolean }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    options.forEach((option, index) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: Math.min(currentStackedStarsCount, MAX_STARS_COUNT),\n        isWide: index === options.length - 1,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, options, starsNeeded]);\n\n  return (\n    <div className={buildClassName(styles.options, className)}>\n      {renderingOptions?.map(({ option, starsCount, isWide }) => {\n        const length = renderingOptions?.length;\n        const isOdd = length % 2 === 0;\n        const isActiveOption = option === selectedStarOption;\n\n        let perUserStarCount;\n        if (option && 'winners' in option) {\n          const winner = option.winners.find((opt) => opt.users === selectedStarCount)\n            || option.winners.reduce((max, opt) => (opt.users > max.users ? opt : max), option.winners[0]);\n          perUserStarCount = winner?.perUserStars;\n        }\n\n        return (\n          <div\n            className={buildClassName(\n              styles.option, (!isOdd && isWide) && styles.wideOption, isActiveOption && styles.active,\n            )}\n            key={option.stars}\n            onClick={() => onClick?.(option)}\n          >\n            <div className={styles.optionTop}>\n              +{formatInteger(option.stars)}\n              <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n                {Array.from({ length: starsCount }).map(() => (\n                  <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n                ))}\n              </div>\n            </div>\n            <div className={styles.optionBottom}>\n              {formatCurrency(option.amount, option.currency, oldLang.code)}\n            </div>\n            {(isActiveOption || (selectedStarOption && 'winners' in selectedStarOption)) && perUserStarCount && (\n              <div className={styles.optionBottom}>\n                <div className={styles.perUserStars}>\n                  {renderText(oldLang('BoostGift.Stars.PerUser', formatInteger(perUserStarCount)))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      })}\n      {!areOptionsExtended && canExtend && (\n        <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n          {oldLang('Stars.Purchase.ShowMore')}\n          <Icon className={styles.iconDown} name=\"down\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StarTopupOptionList);\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n"],"names":["getViewableMedia","params","type","media","mediaIndex","isSingle","length","avatar","profilePhotos","photos","action","document","photo","video","webPage","paidMedia","getMessageContent","message","isDocumentPhoto","isDocumentVideo","webPagePhoto","webPageVideo","extendedMedia","extendedPhoto","extendedVideo","isGif","createGhost","source","origin","ghost","createElement","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","ProfileAvatar","SettingsAvatar","profileInfo","querySelector","cloneNode","isMessageImageFullyVisible","container","imageEl","messageListElement","imgOffsetTop","offsetTop","closest","id","includes","parentElement","scrollTop","offsetHeight","getNodes","index","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","PreviewMedia","SharedMedia","SearchResult","MiddleHeaderAvatar","SuggestedAvatar","StarsTransaction","undefined","SponsoredMessage","MESSAGE_CONTENT_SELECTOR","ScheduledInline","Inline","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","style","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","FALLBACK_DIMENSIONS","AVATAR_FULL_DIMENSIONS","useMediaProps","_ref","isAvatar","delay","isPhotoAvatar","mediaType","isVideo","isVideoAvatar","isDocument","isRound","isPhoto","isFromSharedMedia","isFromSearch","getMediaOrAvatarHash","useMemo","isFull","getVideoProfilePhotoMediaHash","getMediaHash","getProfilePhotoMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","BlobUrl","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","arguments","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","useEffect","onload","blurredDataUri","size","clear","set","window","setTimeout","useBlur","Boolean","useBlurSync","getMediaThumbUri","bestData","mediaSize","getMediaFileSize","isLocal","dimensions","VIDEO_AVATAR_FULL_DIMENSIONS","getPhotoFullDimensions","getVideoDimensions","getZoomChange","setZoomChange","useZoomChange","useUnmountCleanup","memo","isOpen","profileId","onClose","onConfirm","deleteProfilePhoto","deleteChatPhoto","getActions","handleDeletePhoto","useCallback","isUserId","chatId","lang","useOldLang","React","Modal","onEnter","className","title","Button","color","isText","onClick","withGlobal","global","_ref4","item","canUpdateMedia","tabState","selectTabState","mediaViewer","avatarOwner","avatarPhoto","currentMessageList","selectCurrentMessageList","threadId","isProtected","selectIsMessageProtected","activeDownloads","selectActiveDownloads","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","selectAllowedMessageActionsSlow","isCurrentAvatar","avatarPhotoId","canDeleteAvatar","canUpdate","messageListType","canReportAvatar","onReportAvatar","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","useFlag","isMobile","useAppLayout","downloadMedia","cancelMediaDownload","updateProfilePhoto","updateChatPhoto","openMediaViewer","openDeleteMessageModal","isMessage","fileName","getMediaFilename","isDownloading","getIsDownloading","downloadProgress","handleDownloadClick","useLastCallback","originMessage","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","isAvatarView","forceOnHeavyAnimation","MenuButton","_ref2","onTrigger","round","ariaLabel","renderDeleteModal","DeleteProfilePhotoModal","openDeleteModalHandler","isSchedule","menuItems","isForwardingAllowed","content","push","icon","children","Math","href","download","destructive","DropdownMenu","trigger","positionX","map","_ref3","MenuItem","key","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","text","buttonText","isForVideo","handleSponsoredClick","isForceMobileVersion","isMultiline","setIsMultiline","useState","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","onButtonClick","classNames","buildClassName","e","stopPropagation","dir","isRectangular","getCurrentTime","setCurrentTime","useCurrentTimeSignal","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","forEach","connector","request","name","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","data","result","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","duration","bufferedRanges","isReady","posterSize","playbackRate","isActive","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","remaining","animateNumber","from","to","onUpdate","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","stopAnimation","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","styles","start","end","PLAYBACK_RATES","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","SeekLine","ripple","RangeSlider","bold","value","onChange","renderTime","formatFileSize","Menu","positionY","autoClose","rate","disabled","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","isSponsoredMessage","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","isUnsupported","useUnsupportedMedia","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onContextMenu","onDoubleClick","_extends","autoPlay","controlsList","playsInline","loop","onWaiting","onPlay","onEnded","onPause","onTimeUpdate","join","VideoPlayerControls","sponsoredMessage","textMessage","withAnimation","isMoving","onFooterClick","toggleControlsOnMove","VideoPlayer","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","textParts","renderMessageText","forcePlayback","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","MediaViewerFooter","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelZoomAnimation","SwipeDirection","isLoadingMoreMedia","isSynced","loadMoreItemsIfNeeded","getNextItem","selectItem","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveItem","setActiveItem","activeItemRef","isScaled","activeItem","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectItemDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","useTimeout","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","cActiveItem","nextItem","timing","changeSlideOnClick","target","calculateOffsetBoundaries","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","max","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","min","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","event","captureEvent","cancelDrag","dragOffsetX","dragOffsetY","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","_ref5","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","prevItem","hasPrev","hasNext","MediaViewerContent","isRtl","toFixed","element","selector","matches","messageSender","selectSender","owner","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","subtitle","isFallbackAvatar","fallbackPhoto","isPersonalAvatar","personalPhoto","date","formattedDate","formatMediaDateTime","count","currentIndex","countText","parts","chat","isChannel","isChatChannel","isGroup","isChatGroup","senderTitle","getSenderTitle","Avatar","peer","renderText","shouldSkipHistoryAnimations","withDynamicLoading","standaloneMedia","selectPerformanceSettingsValue","currentUserId","isChatWithSelf","selectIsChatWithSelf","selectPeer","isChatAdmin","selectPeerPhotos","isLoading","chatMessages","selectScheduledMessage","selectChatMessage","selectSponsoredMessage","selectChatScheduledMessages","selectChatMessages","isOriginInline","isOriginAlbum","collectedMessageIds","currentSearch","selectCurrentChatMediaSearch","foundIds","currentSegment","selectCurrentSharedMediaSearch","resultsByType","selectOutlyingListByMessageId","selectListedIds","openForwardMenu","searchChatMediaMessages","loadMoreProfilePhotos","clickSponsoredMessage","openUrl","animationKey","senderId","prevSenderId","usePreviousDeprecated","headerAnimation","isGhostAnimation","isReportAvatarModalOpen","openReportAvatarModal","closeReportAvatarModal","currentItem","getMediaViewerItem","info","messageMediaIds","getChatMediaMessageIds","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","prevMessage","prevIsHidden","prevOrigin","prevBestImageData","shouldAnimateOpening","beginHeavyAnimation","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","handleFooterClick","isFromMedia","isMedia","handleForward","fromChatId","messageIds","captureEscKeyListener","stopCurrentAudio","peerId","currentMediaMessageId","fromMedia","fromMediaIndex","nextIndex","fromAvatarOwner","fromProfilePhotos","fromSponsoredMessage","fromSponsoredMessageIndex","fromMessage","getMessagePaidMedia","indexOf","nextMessageId","nextMessage","openMediaViewerItem","itemChatId","itemMessageId","itemStandaloneMedia","handleBeforeDelete","prevMedia","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","SenderInfo","MediaViewerActions","ReportModal","subject","MediaViewerSlides","avatarOwnerId","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","ctx","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","RADIUS","userId","getPeerStoryHtmlId","StoryViewerOrigin","StoryRibbon","storyRibbonStyles","root","ChatList","BASE_SCREEN_WIDTH","BASE_SCREEN_HEIGHT","BASE_ACTIVE_SLIDE_WIDTH","BASE_ACTIVE_SLIDE_HEIGHT","BASE_SLIDE_WIDTH","BASE_SLIDE_HEIGHT","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","slide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","story","isCurrentUserPremium","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","hasForwardInfo","forwardInfo","thumbnail","previewHash","getStoryMediaHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","canDownload","noForwards","downloadHash","downloadMediaData","storyViewer","isStealthModalOpen","stealthMode","stories","selectIsCurrentUserPremium","toggleStealthModal","activateStealthMode","showNotification","openPremiumModal","isOnCooldown","setIsOnCooldown","serverTime","getServerTime","cooldownUntil","handleTimerEnds","handleActivate","initialSection","contentClassName","isSlim","ListItem","multiline","inactive","leftElement","isShiny","withPremiumGradient","TextTimer","langKey","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","storyId","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","contactListIds","usersById","selectedIds","lockedIds","onSelect","searchQuery","setSearchQuery","displayedIds","contactIds","unique","filterUsersByName","PeerPicker","itemIds","MEMO_EMPTY_ARRAY","lockedSelectedIds","filterValue","filterPlaceholder","searchInputId","isSearchable","withDefaultPadding","forceShowSelf","onSelectedIdsChange","onFilterChange","allowMultiple","withStatus","itemInputType","saveCloseFriends","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","closeFriendIds","isCloseFriend","useEffectWithPrevDeps","prevIsActive","handleSelectedContactIdsChange","handleSubmit","userIds","Fragment","FloatingActionButton","isShown","OPTIONS","actions","Screens","selectPeerStory","visibility","contactList","users","byId","editStoryPrivacy","toggleStoryInProfile","isOpenModal","openModal","closeModal","privacy","setPrivacy","isPinned","setIsPinned","isInProfile","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","allowUserIds","selectedBlockedIds","blockUserIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","renderContent","storyLifeTime","seconds","hours","remainingSeconds","convertSecondsToHours","expireDate","section","list","option","checked","input","handleVisibilityChange","newVisibility","teactExperimentControlled","optionContent","option_name","tabIndex","role","closeFriends","denyList","handleActionClick","actionInner","getUserFullName","Switcher","label","footer","submit","renderPrivacyList","CloseFriends","AllowDenyList","modal","noBackdrop","onCloseAnimationEnd","header","closeButton","headerTitle","renderHeaderContent","slideClassName","scrollLockEl","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","scrollHeight","preventDefaultForScrollKeys","HTMLElement","tagName","toLowerCase","getAttribute","isTextBox","disableScrolling","el","_excludedClosestSelector","passive","onkeydown","enableScrolling","sender","fromPeerId","openStoryViewer","loadPeerStoriesByIds","openChat","storyIds","fromName","openOriginalStory","isDeleted","isSingleStory","handleMouseDown","useFastClick","getPeerColorClass","onMouseDown","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","renderTextContent","Icon","renderSender","isExpanded","onExpand","onFold","contentRef","textRef","showMoreButtonRef","renderingStory","useCurrentOrPrev","caption","hasOverflow","setHasOverflow","prevIsExpanded","usePrevDuringAnimation","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","requestMeasure","button","offsetWidth","setProperty","requestForcedReflow","textContainer","textOffsetTop","lineHeight","totalLines","calcTextLineHeightAndCount","isOverflowing","overflowShift","scrollTo","fullClassName","EmbeddedStoryForward","MessageText","messageOrStory","withTranslucentThumbs","openStoryViewModal","sendStoryReaction","views","isOut","sentReaction","viewsCount","forwardsCount","reactionsCount","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","canForward","isPublic","containerId","getStoryKey","recentViewers","getGlobal","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","reaction","AvatarList","peers","nonInteractive","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","DEFAULT_STORY_DURATION_S","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","VIDEO_MIN_READY_STATE","IS_SAFARI","isReportModalOpen","appConfig","user","selectUser","selectChat","viewModal","isPrivacyModalOpen","storyList","forwardMessages","forwardedStoryId","premiumModal","safeLinkModalUrl","mapModal","isPremiumModalOpen","shouldForcePause","reactionPicker","mediaAreas","forwardSenderId","find","area","channelId","forwardSender","withHeaderAnimation","fromPeer","fromId","orderedIds","storyIdsByPeerId","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","areChatSettingsLoaded","settings","isArchivedStories","isPrivateStories","getIsAnimating","onDelete","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openStoryPrivacyEditor","loadChatSettings","fetchChat","loadStoryViews","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","isUserStory","isChatStory","isChannelStory","canPinToProfile","canUnpinFromProfile","areViewsExpired","forwardSenderTitle","canCopyLink","usernames","canShare","canPlayStory","shouldShowComposer","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","thumbRef","useCanvasBlur","previewTransitionClassNames","useMediaTransitionDeprecated","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","shouldRenderCaption","captionAppearanceAnimationClassNames","isStreamingSupported","useStreaming","PRIMARY_VIDEO_MIME","useStoryPreloader","canWrite","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","onMouseLeave","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","useLongPress","onStart","hasAllData","useBackgroundMode","load","keyCode","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleOpenChat","handleForwardPeerClick","handleFromPeerClick","handleOpenPrevStory","handleOpenNextStory","handleVideoStoryTimeUpdate","captureKeyboardListeners","onRight","onLeft","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","diff","handleDownload","StoryProgress","formatRelativeTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","Skeleton","OptimizedVideo","canPlay","isPriority","disableRemotePlayback","SECONDARY_VIDEO_MIME","MediaAreaOverlay","withStory","storyViewerMode","StoryFooter","StoryCaption","Composer","MAIN_THREAD_ID","getIsMobile","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","editableInputId","EDITABLE_STORY_INPUT_ID","inputId","inputPlaceholder","onFocus","onBlur","lastViewedByPeerIds","lastViewedId","storyIdsForViewer","peerStories","lastReadId","hasUnreadStories","previewIndexId","isLoaded","imageHash","thumbUrl","currentPeerId","currentStoryId","isSinglePeer","isPrivate","isArchive","byPeerId","orderedPeerIds","active","peerIds","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","rendersRef","setIsAnimating","setRef","renderingPeerIds","slice","renderingPeerPosition","currentPeerPosition","calculateTransformX","reduce","transformX","getCurrentStoryRef","composer","focusEditableElement","Object","entries","String","handleTransitionEnd","Story","onTransitionEnd","buildStyle","renderStory","StoryPreview","renderStoryPreview","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","DEFAULT_REACTION_SIZE","storyView","availableReactions","reactions","closeStoryViewer","unblockUser","blockUser","deleteContact","updateStoryView","closeStoryViewModal","contextActions","areStoriesBlocked","isUserBlocked","isContact","fullName","handler","isOnlyStories","statusIcon","shouldColorStatus","status","isModified","formatDateAtTime","opacityFadeIn","blocked","rightElement","ReactionStaticEmoji","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","PrivateChatInfo","withColoredStatus","noStatusOrTyping","GroupChatInfo","nextOffset","loadStoryViewList","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","query","setQuery","isExpired","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViews","sort","a","b","reactionA","reactionB","prepareComparator","placeholderCount","notAllAvailable","handleLoadMore","MoreMenuButton","isMenuOpen","fluid","sortButton","topButton","faded","iconSort","iconDown","viewsList","contactFilter","selected","check","SearchInput","search","topScrolled","onScroll","centeredInfo","InfiniteScroll","items","onLoadMore","view","additionalKeyId","StoryView","Array","_","i","PlaceholderChatInfo","bottomInfo","closeStoryPrivacyEditor","storyToDelete","setStoryToDelete","openReportModal","closeReportModal","isPrevOpen","handleOpenDeleteModal","s","handleCloseDeleteModal","thumb","safeAreaBottom","getComputedStyle","documentElement","getPropertyValue","parseFloat","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StealthModeModal","StorySettings","TOPIC_ICON_SIZE","ITEM_CLASS_NAME","chatOrUserIds","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","selectTopicsById","selectTopics","forumTopicsById","useSelector","topicIds","topics","chatsById","chats","chatFullInfoById","fullInfoById","searchTitle","values","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","renderChatItem","isSelf","isApiPeerChat","subtitleClassName","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","getSubtitle","PickerItem","FullNameTitle","isSavedMessages","avatarElement","PEER_PICKER_ITEM_HEIGHT_PX","InputText","onKeyDown","placeholder","withAbsolutePositioning","maxHeight","Loading","topicId","TopicIcon","letterClassName","itemSelector","listIds","orderedPinnedIds","activeListIds","archivedListIds","archived","pinnedIds","API_CHAT_TYPES","onSelectRecipient","setSearch","ids","priorityIds","chatIds","isDeletedUser","sorted","sortChatIds","filterChatsByName","filterChatIdsByType","renderingIds","ChatOrUserPicker","isForwarding","isManyMessages","isStory","openChatOrTopicWithReplyInDraft","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","toChatId","getUserFirstOrLastName","getChatTitle","RecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","error","isSlowMode","hasErrorKey","dialogs","dismissDialog","sendMessage","isModalOpen","dialog","contactRequest","handleConfirm","contact","pick","messageList","getReadableErrorText","notifications","dismissNotification","notification","Notification","localId","actionText","cacheBreaker","shouldDisableClickDismiss","disableClickDismiss","dismissAction","shouldShowTimer","onDismiss","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","closeMapModal","point","geoPoint","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","IS_MAC_OS","currentUser","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","isWriteAllowed","handleLoginChecked","Checkbox","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","padStart","formatDay","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","getHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleChangeHours","replace","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","handleDateSelect","inputMode","historyCalendarSelectedAt","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","timestamp","CalendarModal","phoneCodeList","countryList","phoneCodes","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","resizeTimeout","webApps","activeWebApp","modalState","openedWebApps","isMinimizedState","activeTabBot","changeWebAppModalState","closeWebAppModal","oldLang","useLang","openedWebAppsValues","openedTabsCount","activeTabBotId","app","handleCloseClick","handleExpandClick","activeTabName","botName","renderTitle","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","cancel","activeBotId","isMaximizedState","attachBot","attachMenu","bots","selectCurrentChat","theme","selectTheme","isPaymentModalOpen","payment","isStarPaymentModalOpen","paymentStatus","webApp","registerSendEventCallback","registerReloadFrameCallback","isDragging","frameSize","isMultiTabSupported","closeActiveWebApp","sendWebViewData","toggleAttachBot","openTelegramLink","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","updateWebApp","mainButton","setMainButton","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequestingWriteAccess","setIsRequestingWriteAccess","unlockPopupsAt","handlePopupOpened","handlePopupClosed","sequentialLimit","resetAfter","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","headerColor","serverHeaderColorKey","serverHeaderColor","isCloseModalOpen","isRemoveModalOpen","webAppKey","getWebAppKey","activeWebAppKey","updateCurrentWebApp","updatedPartialWebApp","updatedWebApp","themeParams","extractCurrentThemeParams","bg_color","backgroundColor","frameRef","isSimple","reloadFrame","sendEvent","sendViewport","sendTheme","useWebAppFrame","isSimpleView","onEvent","onLoad","openInvoice","closeWebApp","isReloadSupported","reloadTimeout","ignoreEventsRef","lastFrameSizeRef","handleLoad","contentWindow","JSON","stringify","forceReloadFrame","once","eventType","isNonStable","eventData","is_expanded","is_state_stable","theme_params","sendCustomStyle","handleMessage","parse","skipClosingConfirmation","scrollbarColor","reload_supported","req_id","slug","linkUrl","available","TME_LINK_PREFIX","path_full","isBackButtonVisible","is_visible","isSettingsButtonVisible","validateHexColor","calculateHeaderColor","color_key","button_color","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","shouldConfirmClosing","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","shouldShowMainButton","handleHideCloseModal","handleConfirmCloseModal","handleHideRemoveModal","handleMainButtonClick","buttonId","button_id","handleAppPopupModalClose","serverColorKey","serverColor","newColor","updateHeaderColor","sendThemeCallback","prevIsPaymentModalOpen","handleRemoveAttachBot","isEnabled","handleAcceptPhone","handleAcceptWriteAccess","prevMainButtonColor","prevMainButtonTextColor","prevMainButtonIsActive","prevMainButtonText","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideButton","setShouldHideButton","buttonChangeTimeout","frameWidth","frameHeight","frameStyle","sandbox","allow","allowFullScreen","hasCloseButton","prolongWebView","openWebAppTab","maximizedStateSize","minimizedStateSize","getFrameSize","setFrameSize","getSize","openedOrderedKeys","sessionKeys","tabs","supportMultiTabMode","menuRef","getTriggerElement","getRootElement","getMenuElement","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","isDraggingEnabled","setIsDraggingEnabled","headerElement","containerElement","draggableStyle","dragHandleElementRef","originalSize","elementCurrentPosition","setElementCurrentPosition","elementCurrentSize","setElementCurrentSize","getElementPositionOnStartDrag","setElementPositionOnStartDrag","getDragStartPoint","setDragStartPoint","elementPositionOnStartDrag","dragStartPoint","dragHandleElement","isInitiated","setIsInitiated","wasElementShown","setWasElementShown","startDragging","stopDragging","isWindowsResizing","startWindowResizing","stopWindowResizing","getVisibleArea","innerWidth","innerHeight","getCenteredPosition","visibleArea","centeredPosition","handleStartDrag","handleRelease","ensurePositionInVisibleArea","visibleAreaWidth","visibleAreaHeight","componentWidth","componentHeight","newX","newY","adjustPositionWithinBounds","newPosition","ensureSizeInVisibleArea","sizeForCheck","newSize","adjustSizeWithinBounds","handleDrag","cursorStyle","useDraggable","currentSize","currentWidth","currentHeight","queryId","openTabsCount","useInterval","replyInfo","sendEventCallback","reloadFrameCallback","callback","handleSettingsButtonClick","handleRefreshClick","handleModalClose","handleTabClose","handleToggleClick","handleBackClick","handleCollapseClick","handleTabClick","tab","openBotChat","renderMenuItems","isAttachBot","backButtonClassName","headerTextVar","r","g","hexToRgb","luma","getColorLuma","renderTabCurveBorder","viewBox","fill","useHorizontalScroll","dialogRef","dialogStyle","isLowStackPriority","shortName","renderActiveTab","anchor","MinimizedWebAppModal","noBackdropClose","WebAppModalTabContent","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","split","linkText","MINI_APP_TOS_URL","rel","isConfirmDisabled","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","COLORS","isFontIcon","newIndex","colorA","colorB","ceil","lerpRgb","buttonClassName","fontIcon","description","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","isLast","isPreLast","isFirst","isPreFirst","isInvisible","leftValue","rightValue","floatingBadgeIcon","rightStyle","COLOR_START","COLOR_END","colorStepProgress","lerp","PremiumLimitsCompare","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","AnimatedSticker","tgsUrl","play","isLowPriority","noLoop","stickers","premium","setOffset","setSize","renderedStickers","cycleRestrict","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","circleRef","dpr","useDevicePixelRatio","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","PremiumFeatureItem","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","saved_tags","last_seen","message_privacy","effects","PREMIUM_FEATURE_DESCRIPTIONS","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","recommendedChannels","LIMITS_DESCRIPTIONS","promo","isPremium","limits","premiumPromoOrder","subscriptionOption","onClickSubscribe","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","PREMIUM_FEATURE_SECTIONS","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","filteredSections","subscriptionButtonText","amount","months","currency","perMonthPrice","formatCurrency","handleLimitsScroll","scrollContainer","animateHorizontalScroll","then","handleSelectSlide","scrollLeft","scrollLeftOriginal","reverseIndex","prevElement","reverseElement","toString","toggleExtraClass","PREMIUM_LIMITS_ORDER","defaultLimit","premiumLimit","PremiumLimitPreview","PremiumFeaturePreviewStickers","PremiumFeaturePreviewStories","videoSections","PremiumFeaturePreviewVideo","videos","PREMIUM_BOTTOM_VIDEOS","SliderDots","fullMonthlyAmount","isGiveaway","perMonth","isUserCountPlural","discount","handleChange","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","PremiumTags","PremiumLastSeen","PremiumMessagePrivacy","PremiumEffects","fromUser","fromUserId","fromUserStatusEmoji","emojiStatus","customEmojis","documentId","fromUserStatusSet","selectStickerSet","stickerSetInfo","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","closePremiumModal","requestConfetti","loadStickers","openStickerSet","isHeaderHidden","setHeaderHidden","currentSection","setCurrentSection","selectedSubscriptionOption","setSubscriptionOption","handleOpenSection","handleResetSection","handleClickWithStartParam","handleChangeSubscriptionOption","foundOption","options","showConfetti","withStars","prevIsPremium","defaultOption","handleOpenStatusSet","stickerSetTitle","template","first","second","emoji","thumbCustomEmojiId","CustomEmoji","link","monthOption","subscribeButtonText","PremiumFeatureModal","isBig","PremiumLogo","PremiumSubscriptionOption","statusText","entities","statusEntities","renderFooterText","gifts","forUserIds","isCompleted","giftModal","boostPerSentGift","boostsPerSentGift","BOOST_PER_SENT_GIFT","closePremiumGiftModal","selectedMonthOption","setSelectedMonthOption","selectedUserQuantity","giftingUserList","selectedGift","gift","filteredGifts","fullMonthlyGiftAmount","basicGift","handlePremiumClick","userNameList","modalDialog","main","avatars","headerText","center","part","subpart","boostIcon","giftSection","subscriptionOptions","match","premiumFeatures","Link","isPrimary","renderPremiumFeaturesLink","notFoundText","noScrollRestore","isViewOnly","itemClassName","onDisabledClick","optionalProps","lockedSelectedValues","lockedUnselectedValues","timeoutId","selectedValues","selectedValue","lockedSelectedValuesSet","Set","lockedUnselectedValuesSet","sortedItemValuesList","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","has","concat","handleItemClick","newSelectedValues","splice","onSelectedValuesChange","onSelectedValueChange","viewportValuesList","handleFilterChange","renderItem","itemOption","subLabel","isItemLoading","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","inputElement","Radio","onlyInput","pickerList","padded","noResults","selectionLimit","selectedCountryIds","setSelectedCountryIds","noPickerScrollRestore","country","iso2","defaultName","handleSelectedIdsChange","newSelectedIds","pickerSelector","pickerTitle","ItemPicker","picker","giveawayChatId","initialSelectedIds","onSelectedIdsConfirmed","pendingChannelId","setPendingChannelId","isConfirmModalOpen","openConfirmModal","closeConfirmModal","setSelectedIds","channelIds","isChatSuperGroup","displayedChannelIds","foundChannelIds","handleSelectedChannelIdsChange","privateLinkChannelId","isChatPublic","confirmPrivateLinkChannelSelection","handleModalConfirm","PickerModal","shouldAdaptToSearch","withFixedHeight","confirmButtonText","isLink","onClickAction","userNames","selectedMemberIds","displayText","chatFullInfo","selectChatFullInfo","members","adminMembersById","memberIds","statusesById","adminIdsSet","sortUserIds","displayedMemberIds","filteredContactIds","isUserBot","handleSelectedMemberIdsChange","GIVEAWAY_IMG_LIST","GiftGreenRound","GiftBlueRound","GiftRedRound","giveawayModal","selectedMemberList","selectedChannelList","selectedChannelIds","giveawayBoostPerPremiumLimit","giveawayBoostsPerPremium","isStarsGiftsEnabled","userSelectionLimit","giveawayAddPeersMax","countrySelectionLimit","giveawayCountriesMax","general","prepaidGiveaway","starsGiftOptions","starOptions","GIVEAWAY_BOOST_PER_PREMIUM","GIVEAWAY_MAX_ADDITIONAL_COUNTRIES","GIVEAWAY_MAX_ADDITIONAL_USERS","closeGiveawayModal","launchPrepaidGiveaway","launchPrepaidStarsGiveaway","isCalendarOpened","openCalendar","closeCalendar","isCountryPickerModalOpen","openCountryPickerModal","closeCountryPickerModal","isUserPickerModalOpen","openUserPickerModal","closeUserPickerModal","isChannelPickerModalOpen","openChannelPickerModal","closeChannelPickerModal","TYPE_OPTIONS","GiftStar","customExpireDate","setCustomExpireDate","selectedRandomUserCount","setSelectedRandomUserCount","selectedGiveawayOption","setGiveawayOption","selectedStarOption","setSelectedStarOption","selectedSubscriberOption","setSelectedSubscriberOption","selectedUserIds","setSelectedUserIds","setSelectedChannelIds","shouldShowWinners","setShouldShowWinners","shouldShowPrizes","setShouldShowPrizes","prizeDescription","setPrizeDescription","dataPrepaidGiveaway","setDataPrepaidGiveaway","dataStarsPrepaidGiveaway","setDataStarsPrepaidGiveaway","isPremiumGiveaway","isStarsGiveaway","selectedUserCount","boostQuantity","boostStarsQuantity","yearlyBoosts","SUBSCRIBER_OPTIONS","monthQuantity","isStarsPrepaidGiveaway","isPremiumPrepaidGiveaway","selectedStarsGift","stars","userCountOptions","winner","winnerCountOptions","winners","quantity","boostChannelId","additionalChannelIds","isOnlyForNewSubscribers","countries","areWinnersVisible","untilDate","confirmLaunchPrepaidGiveaway","giveawayId","paymentPurpose","handleRandomUserCountChange","newValue","handleWinnerCountChange","handlePrizeDescriptionChange","handleChangeSubscriberOption","handleChangeTypeOption","handleExpireDateChange","handleSetCountriesListChange","handleSelectedUserIdsChange","handleShouldShowWinnersChange","handleShouldShowPrizesChange","onClickActionHandler","handleStarClick","renderGiveawayOptionList","filteredChannelIds","deleteParticipantsHandler","iconClassName","RadioGroup","subLabelClassName","formatDateTimeToString","boosts","GiveawayTypeOption","RangeSliderWithMarks","rangeCount","marks","StarTopupOptionList","selectedStarCount","CountryPickerModal","GiveawayUserPickerModal","GiveawayChannelPickerModal","GIVEAWAY_MAX_ADDITIONAL_CHANNELS","closePremiumGiftingModal","openPremiumGiftModal","displayedUserIds","handleSendIdList","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","savedDialogsPinned","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","closeLimitReachedModal","isClosing","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","stickerSetEl","isClose","animateScroll","stickerSet","STICKER_SIZE_PICKER_HEADER","observeIntersection","sharedCanvasRef","hasThumbnail","hasVideoThumb","hasAnimatedThumb","hasStaticThumb","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","useIsIntersecting","shouldPlay","shouldFallbackToStatic","IS_WEBM_SUPPORTED","staticHash","getStickerMediaHash","staticMediaData","mediaHash","coords","useCoordsInSharedCanvas","observeIntersectionForPlaying","selectIsAlwaysHighPriorityEmoji","sharedCanvas","sharedCanvasCoords","forceAlways","getFirstLetters","contentForStatusMenuContext","arg","noContextMenu","isStatusPicker","canViewSet","observeIntersectionForShowing","isSelected","shouldIgnorePremium","noShowPremium","withTranslucentThumb","clickArg","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","isEffectEmoji","setEmojiStatus","isFree","hasEffect","isCustomEmoji","shouldLoad","isIntesectingForShowing","handleBeforeContextMenu","shouldRenderContextMenu","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","expires","getServerTimeOffset","shouldShowCloseButton","contextMenuItems","preventMessageInputBlurWithBubbling","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","noVideoOnMobile","withSharedAnimation","noFastClick","loadAndPlay","sharedCanvasHqRef","isCustom","availableReaction","staticIcon","animationId","selectAnimation","getDocumentMediaHash","LOCAL_TGS_URLS","StarReaction","EMOJI_SIZE_PICKER","AnimatedIconWithPreview","isNearActive","favoriteStickers","isReactionPicker","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isChatEmojiSet","isChatStickerSet","isTranslucent","noContextMenus","onReactionSelect","onReactionContext","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","isLottie","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","accessHash","isInstalled","installedDate","isArchived","canCut","EFFECT_EMOJIS_SET_ID","EFFECT_STICKERS_SET_ID","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","withAddSetButton","addSetButtonText","pill","grey","reactionId","ReactionEmoji","isHqEmoji","canvasRef","StickerButton","HEADER_BUTTON_WIDTH","DEFAULT_ID_PREFIX","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","setsById","stickerSetsById","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","defaultTags","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","chatEmojiSetId","emojiSet","isWithPaidReaction","isPaidReactionAvailable","defaultTagReactions","pickerListClassName","withDefaultTopicIcons","onCustomEmojiSelect","handleContentScroll","shouldHideTopBorder","pickTruthy","prefix","areAddedLoaded","allSets","defaultSets","TOP_SYMBOL_SET_ID","topReactionsSlice","unshift","cleanRecentReactions","some","topReaction","cleanAvailableReactions","isInactive","allRecentReactions","defaultStatusIconsPack","defaultTopicIconsPack","userSetIds","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","newLeft","handleEmojiSelect","pickerStyles","headerClassName","listClassName","firstSticker","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","isFaded","StickerSetCover","StickerSet","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","transformOriginX","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","CustomEmojiPicker","getFirstAvailableBoost","myBoosts","boost","firstBoost","prevBoostedChat","applyBoost","closeBoostModal","loadFullChat","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","descriptionText","canBoostMore","boostStatus","hasMyBoost","areBoostsInDifferentChannels","every","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getBoostProgressInfo","hasBoost","moreBoosts","modalTitle","boostsLeftToUnrestrict","boostsToUnrestrict","boostsApplied","boostTimes","isBoostDisabled","isReplacingBoost","handleApplyBoost","slots","slot","handleProceedPremium","handleButtonClick","PremiumProgress","floatingBadgeText","isOnlyConfirm","formatDateInFuture","chatMessage","closeGiftCodeModal","applyGiftCode","canUse","toId","usedAt","handleOpenGiveaway","giveawayMessageId","modalData","LinkField","tableData","isFromGiveaway","TableInfoModal","invite","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","newChatsCount","badgeText","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","alreadyPeerIds","Badge","buttonBadge","isAlternateColor","suggestedPeerIds","leaveChatlist","joinedIds","isNotJoined","selectedCount","removal","selectChatFolder","renderingInfo","renderingFolderTitle","folderTabNumber","ChatlistAlready","ChatlistNew","ChatlistDelete","folderTitle","foldersWrapper","folders","badgeCount","isBadgeActive","acceptChatInvite","closeChatInviteModal","participantsRef","prevModal","usePrevious","hash","inviteInfo","about","isBroadcast","participantIds","participantsCount","isRequestNeeded","handleAccept","acceptLangKey","requestToJoinLangKey","customPeer","getCustomPeerFromInvite","participants","withVideo","participantCount","participant","PeerBadge","listItemData","headerIconName","isStatic","Separator","isMonetizationSharing","minLevelSignal","useSelectorSignal","channelRestrictAdsLevelMin","minLevelToRestrictAds","regularAdContent","SafeLink","TableAboutModal","blockchainText","withNodes","monetizationTitle","specialReplacement","passwordHint","clearMonetizationInfo","loadMonetizationRevenueWithdrawalUrl","shouldShowPassword","setShouldShowPassword","password","currentPassword","onSuccess","handleClearError","PasswordForm","shouldShowSubmit","clearError","hint","isPasswordVisible","shouldResetValue","onChangePasswordVisibility","reportSponsoredMessage","closeReportAdModal","openPreviousReportAdModal","transitionRef","handleOptionClick","randomId","renderingSection","renderingDepth","sectionDepth","sections","bottomText","hasSubtitle","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","narrow","secondaryIcon","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","permissions","setPermissions","havePermissionChanged","setHavePermissionChanged","setIsLoading","handlePermissionChange","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","sendGifs","checkMedia","mediaPermissions","v","sendMedia","assign","embedLinks","sendPlain","sendMessages","resetPermissions","permissionKeyList","fullInfo","hasLinkedChat","linkedChatId","isMediaDropdownOpen","setIsMediaDropdownOpen","shiftedClassName","dropdownClassName","withCheckbox","getControlIsDisabled","permissionGroup","shouldDisablePermissionForPublicGroup","countCheckedPermissions","handleOpenMediaDropdown","handleDisabledClick","blocking","labelText","rightIcon","onClickLabel","sendPhotos","sendVideos","sendStickers","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","inviteUsers","pinMessages","changeInfo","manageTopics","deleteMessageModal","canDeleteForAll","messageIdList","selectCurrentMessageIds","isChatBasicGroup","isSuperGroup","contactName","getPrivateChatUserId","isChatWithBot","selectBot","chatBot","REPLIES_USER_ID","canBanUsers","isCreator","getHasAdminRight","isOwn","isOwnMessage","willDeleteForCurrentUserOnly","willDeleteForAll","album","deleteMessages","deleteScheduledMessages","reportMessages","deleteChatMember","updateChatMemberBannedRights","closeDeleteMessageModal","defaultBannedRights","chosenDeleteOption","setChosenDeleteOption","chosenBanOption","setChosenBanOptions","chosenSpanOption","setChosenSpanOptions","isAdditionalOptionsVisible","setIsAdditionalOptionsVisible","isSenderOwner","isOwner","shouldShowAdditionalOptions","shouldShowOptions","userName","ACTION_SPAM_OPTION","ACTION_DELETE_OPTION","ACTION_BAN_OPTION","toggleAdditionalOptions","filterMessageIdByUserId","selectedMessageIdList","msgId","senderPeer","selectSenderFromMessage","handleDeleteMessages","filteredMessageIdList","shouldDeleteForAll","handleDeleteMember","filteredUserIdList","handleUpdateChatMemberBannedRights","bannedRights","handleDeleteMessageForAll","messages","handleDeleteMessageForSelf","reason","handleDeleteOptionChange","handleBanOptionChange","handleSpanOptionChange","mainContainer","singleTitle","actionTitle","CheckboxGroup","restrictionContainer","restrictionContainerOpen","restrictionTitle","PermissionCheckboxList","dropdownList","dropdownListOpen","listItemButton","dialogButtons","isPrivateChat","canPinForAll","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","pinnedMessagesCount","onUnpin","selectedMessageIds","selectedMessages","selectCanDeleteSelectedMessages","exitMessageSelectMode","senderList","senderArray","getSendersFromSelectedMessages","userList","uniqueUserIds","nestedOptionsWithAvatarList","showAdditionalOptions","buildCollectionByCallback","nestedOptions","prev","userIdList","isNaN","onCloseHandler","nestedCheckbox","canReport","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","hasProtectedMessage","selectHasProtectedMessage","selectCanForwardMessages","isShareMessageModalOpen","isShareMessageModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","handleCopy","useHotkeys","useCopySelectedMessages","handleExitMessageSelectMode","onBackspace","onEsc","prevSelectedMessagesCount","formattedMessagesCount","renderButton","DeleteSelectedMessageModal","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","leftId","rightId","handleCloseSeenByModal","CLOSE_ANIMATION_DURATION","isReadDate","privacySettingsNoticeModal","updateGlobalPrivacySettings","closePrivacySettingsNoticeModal","setPrivacyVisibility","loadUser","handleShowReadTime","shouldHideReadMarks","handleShowLastSeen","privacyKey","handleOpenPremium","ReadTime","LastSeen","reactorModal","reactors","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","LoadMoreDirection","Backwards","formatIntegerCompact","flatMap","peerReactions","reactor","seenByUser","withEmojiStatus","addedDate","avatarSize","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","endHeavyAnimation","effectHash","effectTgsUrl","startSize","isReversed","quality","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","requestMessageTranslation","closeChatLanguageModal","setSettingOption","requestChatTranslation","handleSelect","langCode","toLanguageCode","translationLanguage","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","highlight","closeCollectibleInfoModal","isUsername","handleOpenUrl","shouldSkipModal","formatUsername","collectible","copyTextToClipboard","formattedCollectible","purchaseDate","formatCurrencyAsString","cryptoCurrency","cryptoAmount","Mention","PickerSelectedItem","chip","createMapStateToProps","props","fetchingStatus","globalSearch","currentType","isVoice","byChatId","globalMessagesByChatId","searchChatId","shouldWarnAboutSvg","byKey","runThrottled","cb","searchMessagesGlobal","openAudioPlayer","foundMessages","parseSearchResultKey","handleMessageFocus","handlePlayAudio","canRenderContents","noFastList","NothingFound","shouldDrawDateDivider","toYearMonth","getMessageDownloadableMedia","formatMonthAndYear","Audio","AudioOrigin","Search","getSenderName","onDateClick","buttonRef","activeElement","selectIsChatPinned","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canChangeFolder","chatFolders","withUsername","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","useSelectWithEnter","storyViewerOrigin","MuteChatModal","ChatFolderModal","popularBotApps","botApps","recentBotIds","topBotApps","searchPopularBotApps","openChatWithInfo","shouldShowMoreMine","setShouldShowMoreMine","filteredFoundIds","recentSet","withoutRecent","handleChatClick","shouldReplaceHistory","handleToggleShowMoreMine","LeftSearchResultChat","privateChatUserId","privateChatUser","mediaThumbnail","getMessageSticker","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","isRoundVideo","getMessageRoundVideo","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","getMessageVideo","renderSummary","searchDate","suggestions","suggestion","currentDate","latestYear","getSuggestionsFromDate","selectTopic","foundTopicIds","dateSearchQuery","onSearchDateSelect","onReset","openThread","handleTopicClick","nothingFound","DateSuggest","LeftSearchResultTopic","ChatMessage","topUserIds","topPeers","recentlyFoundChatIds","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","isChannelList","globalResults","localResults","globalPeerIds","accountPeerIds","similarChannelIds","selectSimilarChannelIds","GLOBAL_SUGGESTED_CHANNELS_ID","suggestedChannelIds","setGlobalSearchChatId","loadChannelRecommendations","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","handlePickerItemClick","startsWith","filteredChatIds","getOrderedIds","ALL_FOLDER_ID","localChatIds","contactIdsWithMe","localPeerIds","filteredIds","handleClickShowMoreLocal","handleClickShowMoreGlobal","noScrollRestoreOnTop","RecentContacts","CURRENT_TYPE","observeIntersectionForMedia","getMessageDocument","Document","withDate","datetime","smaller","WebLink","onMessageClick","handleSelectMedia","isMediaGrid","isMessageList","Media","TABS","GlobalSearchContent","ChannelList","BotApps","Links","Files","Music","Voice","CHAT_TABS","currentContent","setGlobalSearchContent","setGlobalSearchDate","activeTab","setActiveTab","parseDateString","handleSwitchTab","handleSearchDateSelect","TabList","onSwitchTab","renderCount","ChatMessageResults","ChatResults","MediaResults","LinkResults","FileResults","AudioResults","BotAppResults","INITIAL_STATE","email","twoFaReducer","state","payload","maxChats","selectCurrentLimit","mode","dispatch","onSaveFilter","openLimitReachedModal","chatFilter","selectedChatIds","selectedChatTypes","selectChatFilters","chatTypes","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","isTouched","setIsTouched","folderAllOrderedIds","useFolderManagerForOrderedIds","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","shouldHideChatTypes","isChatList","newFilter","includeFilters","includedChatIds","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","categories","selectedCategories","categoryPlaceholderKey","withPeerTypes","onSelectedCategoriesChange","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleCreateInviteClick","selectCanShareFolder","handleEditInviteClick","renderChats","visibleChatIds","leftChatsCount","clickHandler","chatType","typeKey","renderChatType","AnimatedIcon","STICKER_SIZE_FOLDER_SETTINGS","FoldersNew","runThrottledForLoadRecommended","folderIds","foldersById","recommended","recommendedChatFolders","maxFolders","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","sortChatFolders","setState","orderedFolderIds","dragOrderIds","draggedIndex","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","getFolderDescriptionText","handleCreateFolderFromRecommended","translation","handleDragEnd","canCreateNewFolder","FoldersAll","isBlocked","isDragged","draggedTop","Draggable","onDragEnd","knobStyle","allowSelection","shareFolderScreen","pinnedChatIds","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","unlockedIds","partition","selectCanInviteToChat","isFirstRenderRef","prevUrl","handleClickDisabled","chatsCount","FoldersShare","withShare","onRevoke","lockedUnselectedIds","currentScreen","shownScreen","onScreenSelect","openShareChatFolderModal","editChatFolder","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsFoldersMain","SettingsFoldersEdit","SettingsFoldersChatFilters","SettingsShareChatlist","shouldDisablePasswordManager","expectedPassword","validationError","setValidationError","newPassword","PasswordMonkey","fullReset","STICKER_SIZE_PASSCODE","Congratulations","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","passcode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeStart","SettingsPasscodeForm","SettingsPasscodeCongratulations","PasscodeEnabled","SettingsPasscodeEnabled","premiumSection","handleOpenPremiumModal","StarIcon","shouldNewNonContactPeersRequirePremium","selectNewNoncontactPeersRequirePremium","canLimitNewMessagesWithoutPremium","canChange","PrivacyLockedOption","hidden","PremiumStatusItem","getSessionIcon","session","platform","device","deviceModel","systemVersion","activeSessions","byHash","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","headerButton","SettingsActiveSession","iconDevice","dateActive","box","appName","appVersion","ip","region","getLocation","note","actionHeader","actionName","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","sessionHashes","sessionHash","areButtonsInColumn","activeWebSessions","terminateWebAuthorization","renderingBot","browser","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","SettingsActiveWebsite","handleCardClick","CHAT_HEIGHT_PX","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","customEmojiSetIds","canPlayAnimatedEmojis","shouldSuggestCustomEmoji","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","customEmojiSets","StickerSetCard","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","renderValue","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","doNotTranslate","language","displayedOptions","setDisplayedOptions","displayedOptionList","currentLanguageOption","otherOptionList","prevLanguage","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","orderedUsernames","dragOrderUsernames","handleCopyUsername","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","usernameData","LINK_PREFIX_REGEX","runDebouncedForCheckUsername","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","MIN_UPDATE_USERNAME_LENGTH","MAX_USERNAME_LENGTH","USERNAME_REGEX","test","handleUsernameChange","newUsername","isUsernameValid","success","readOnly","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","currentFirstName","currentLastName","currentUserFullInfo","selectUserFullInfo","currentAvatarHash","getChatAvatarHash","currentBio","bio","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","InProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","Complete","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","TextArea","maxLengthIndicator","UsernameInput","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","renderPurchaseLink","ManageUsernames","shouldShowLoginCodeInChatList","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","URL","createObjectURL","handleIsAutoUpdateEnabledChange","Experimental","IS_ELECTRON","TIME_FORMAT_OPTIONS","shouldUseSystemTheme","messageTextSize","messageSendKeyCombo","timeFormat","isMobileDevice","appearanceThemeOptions","keyboardSendOptions","handleMessageTextSizeChange","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","wallpaper","localMediaHash","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","background","isBlurred","themes","loadedWallpapers","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","patternColor","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","WallpaperTile","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","currentAmountRef","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","Notifications","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyBirthday","PrivacyForwarding","PrivacyVoiceMessages","PrivacyMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyPhoneNumberAllowedContacts","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyBirthdayAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyBirthdayDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","languages","canTranslate","canTranslateChats","loadLanguages","loadAttachBots","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","oldSetLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","isGiveawayAvailable","selectIsGiveawayGiftsPurchaseAvailable","starsBalance","balance","shouldDisplayStars","history","all","transactions","sessionCount","openSupportChat","openPremiumGiftingModal","openStarsBalanceModal","isSupportDialogOpen","openSupportDialog","closeSupportDialog","isPreload","handleOpenSupport","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","isInSettings","langName","formatInteger","FAQ_URL","PRIVACY_URL","hasPrivateChatsNotifications","hasPrivateChatsMessagePreview","hasGroupNotifications","hasGroupMessagePreview","hasBroadcastNotifications","hasBroadcastMessagePreview","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsSilent","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","_ref6","_ref7","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","canDisplayChatInTitle","hasPasscode","blockedCount","totalCount","webAuthCount","canDisplayAutoarchiveSetting","canSetPasscode","selectCanSetPasscode","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","shouldAllowPremium","blockCount","blockChatIds","allowCount","allowChatIds","total","exceptionString","lastSeen","profilePhoto","birthday","forwards","phoneCall","allowDisabledClick","voiceMessages","chatInvite","blockedIds","localContactIds","userSearch","localUserIds","setUserSearchQuery","availableContactIds","contactId","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","userMainUsername","renderContact","BlockUserModal","getPrivacyKey","screen","PrivacyPhoneP2P","PrivacyAddByPhone","selectShouldHideReadMarks","canShowHideReadTime","handleChangeShouldHideReadMarks","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","PrivacySubsection","isPremiumRequired","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","prepareSubtitle","userIdsCount","chatIdsCount","allowedString","blockString","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","addByPhone","phoneP2P","secondaryScreen","SettingsPrivacyPublicProfilePhoto","SettingsPrivacyLastSeen","PREMIUM_CATEGORY","CUSTOM_PEER_PREMIUM","getCurrentPrivacySettings","isAllowList","withPremiumCategory","setPrivacySettings","selectedContactIds","selectedCategoryTypes","newSelectedCategoryTypes","setNewSelectedCategoryTypes","SERVICE_NOTIFICATIONS_USER_ID","filteredChats","handleSelectedCategoriesChange","updatedIds","isPremiumAllowed","config","selectedReaction","defaultReaction","setDefaultReaction","emoticon","withIcon","addedSetIds","shouldSuggestStickers","shouldUpdateStickerSetOrder","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","STICKER_SIZE_TWO_FA","animatedEmoji","selectAnimatedEmoji","codeLength","twoFaSettings","waitingEmailCodeLength","focusDelayTimeoutMs","setValue","handleInputChange","AnimatedIconFromSticker","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaStart","SettingsTwoFaPassword","SettingsTwoFaSkippableForm","SettingsTwoFaEmailCode","SettingsTwoFaCongratulations","SettingsTwoFaEnabled","TRANSITION_RENDER_COUNT","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_BIRTHDAY_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","_isFrom","_currentKey","SettingsHeader","activeScreen","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsMain","SettingsEditProfile","SettingsGeneral","SettingsQuickReaction","SettingsCustomEmoji","SettingsNotifications","SettingsDataStorage","SettingsPrivacy","SettingsLanguage","SettingsDoNotTranslate","SettingsStickers","SettingsExperimental","SettingsGeneralBackground","SettingsGeneralBackgroundColor","SettingsActiveSessions","SettingsActiveWebsites","SettingsPrivacyBlockedUsers","SettingsPrivacyVisibility","SettingsPrivacyVisibilityExceptionList","SettingsFolders","SettingsTwoFa","SettingsPasscode","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","withSwipeControl","userStatusesById","openNewContactDialog","isSearching","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","foundContactIds","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","memberFirstNames","generatedChatName","handleTitleChange","handleDescriptionChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","onContentChange","newChatMemberIds","setNewChatMemberIds","NewChannelStep2","NewGroupStep2","isStepActive","NewChannelStep1","NewGroupStep1","NewChatStep1","NewChatStep2","isForumPanelOpen","archiveSettings","isStoryRibbonShown","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isStoryRibbonClosing","StoryToggler","canShow","folderType","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","idsToRemove","idsToAdd","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","muteUntil","div","ALLOWED_QUOTE_ENTITIES","ApiMessageEntityTypes","Bold","Italic","Underline","Strike","Spoiler","getSelectionAsFormattedText","range","html","clonedSelection","cloneContents","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","currentElement","tag","entityType","wrapHtmlWithMarkupTags","innerHTML","getSelectionAsHtml","entity","stripEntitiesForQuote","parseHtmlAsFormattedText","PinMessageModal","useModuleLoader","Bundles","Extra","getCopyLabel","hasSelection","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","menuSeparatorSize","openPrivacySettingsNoticeModal","readDate","MenuSeparator","handleOpenModal","isReactionPickerOpen","enabledReactions","reactionsLimit","targetHref","canSendNow","canReschedule","canReply","canQuote","canEdit","noReplies","canPin","canUnpin","canFaveSticker","canUnfaveSticker","canCopy","canSelect","canSaveGif","canRevote","canClosePoll","canShowOriginal","canSelectLanguage","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","hasCustomEmoji","isInSavedMessages","onReply","onOpenThread","onEdit","onPin","onFaveSticker","onUnfaveSticker","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onToggleReaction","onSendPaidReaction","onShowPaidReactionModal","onCopyMessages","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","openCustomEmojiSets","scrollableRef","withReactions","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","handleAfterCopy","customEmojiSet","handleOpenCustomEmojiSets","copyOptions","afterEffect","getMessageText","getMessagePhoto","getMessageWebPageVideo","getMessageWebPagePhoto","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","selection","getSelection","Promise","resolve","mediaLoader","copyImageToClipboard","anchorNode","parentNode","selectionParentNode","selectedMessageElement","checkMessageHasSelection","getMessageIdsForSelectedText","execCommand","clipboardText","shouldRenderAsHtml","copyHtmlToClipboard","getMessageTextWithSpoilers","getMessageCopyOptions","extraHeightAudioPlayer","pinnedElement","extraHeightPinned","extraPaddingX","extraTopPadding","extraMarginTop","menuElMinWidth","handleOpenMessageReactionPicker","withMaxHeight","ReactionSelector","allAvailableReactions","currentReactions","onShowMore","messagesCount","withPreventDefaultOnMouseDown","inline","withWrap","sponsorInfo","ReadTimeMenuItem","detectedLanguage","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","readDateExpiresAt","noOptions","canReplyGlobally","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isScheduled","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","canSendText","isUserRightBanned","canReplyInChat","isMessageLocal","hasTtl","hasMessageTtl","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","canCopyNumber","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","translationRequestLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","isForbidden","hasFullInfo","canScheduleUntilOnline","selectCanScheduleUntilOnline","isMessageTranslated","selectIsReactionPickerOpen","updateDraftReplyInfo","setEditingId","openReplyMenu","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","loadSeenBy","openSeenByModal","openReactorListModal","copyMessagesByIds","saveGif","cancelPollVote","closePoll","toggleReaction","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","loadOutboxReadDate","copyMessageLink","addLocalPaidReaction","openPaidReactionModal","useShowTransition","setIsMenuOpen","setIsReportModalOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","canQuoteSelection","setCanQuoteSelection","requestCalendar","calendar","useSchedule","uniqueReactors","PREVIEW_AVATAR_COUNT","msg","downloadableMedia","selectionRange","getRangeAt","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","startOffset","endOffset","closeMenu","handleDelete","handleReport","closePinModal","handleReply","quoteText","replyToMsgId","replyToPeerId","handleOpenThread","handleEdit","handlePin","handleUnpin","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","scheduledAt","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","shouldIncludeGrouped","handleCopyNumber","handleSaveGif","gif","handleToggleReaction","shouldAddToRecent","handleSendPaidReaction","handlePaidReactionModalOpen","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","scheduledMaxDate","MessageContextMenu","onReportAd","showDialog","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","handleReportSponsoredMessage","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","canSendStickers","shouldSchedule","selectShouldSchedule","prevStickerSet","renderingStickerSet","isAdded","isScheduleRequested","isPreloadedGlobally","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","sets","teactFastList","setCard","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","canReportChat","currentChatId","currentThreadId","userFullInfo","canGiftPremium","premiumGifts","canCreateTopic","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","savedDialog","getIsSavedDialog","isTopic","isForumAsMessages","canDeleteChat","getCanDeleteChat","botCommands","botInfo","commands","botPrivacyPolicyUrl","privacyPolicyUrl","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","isBot","withExtraActions","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewMonetization","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","canShowBoostModal","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","requestMasterAndRequestCall","toggleStatistics","openMonetizationStatistics","openBoostStatistics","openThreadWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","setViewForumAsMessages","openBoostModal","shouldCloseFast","setShouldCloseFast","setIsDeleteModalOpen","setIsMuteModalOpen","isViewGroupInfoShown","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleGiftPremiumClick","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleMonetizationClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","botButtons","commandButtons","cmd","hasPrivacyCommand","deleteTitle","DeleteChatModal","isSavedDialog","messageChat","shouldShowChat","hiddenForwardTitle","hiddenUserName","senderName","getMessageSenderName","topRow","LastMessageMeta","meta","MessageSummary","truncateLength","CHANNELS_PEER","isCustomPeer","avatarIcon","titleKey","RESULT_ITEM_CLASS_NAME","runDebouncedForSearch","requestedQuery","savedTag","fetchingQuery","isHashtag","selectCurrentMiddleSearch","lastSearchQuery","savedTags","savedReactionTags","isHistoryCalendarOpen","isHashtagQuery","searchType","updateMiddleSearch","resetMiddleSearch","performMiddleSearch","closeMiddleSearch","openHistoryCalendar","loadSavedReactionTags","focusedIndex","setFocusedIndex","canFocusNewer","canFocusOlder","isFullyHidden","setIsFullyHidden","hiddenTimerRef","maybeLongPressActiveRef","isFocused","markFocused","markBlurred","isViewAsList","setIsViewAsList","refs","handleClickOutside","useClickOutside","hasResultsContainer","isOnlyHash","areResultsEmpty","hasResultsDropdown","hasQueryData","hasNavigationButtons","focusInput","blurInput","blur","visualViewport","mainEl","pageTop","update","requestNextMutation","prevIsCalendarOpen","savedTagsArray","hasSavedTags","areSavedTagsDisabled","handleQueryChange","newQuery","removeListeners","fastRaf","viewportResults","searchResultKey","originalSender","ANONYMOUS_USER_ID","selectForwardedSender","handleMessageClick","getSearchResultKey","handleTriggerViewStyle","foundResult","updateSearchParams","activateSearchTag","removeSearchSavedTag","handleDeleteTag","handleChangeSearchType","handleFocusOlder","newFocusIndex","handleFocusNewer","renderTypeTag","isForTag","selectedType","renderDropdown","dropdown","dropdownHidden","separator","wrap","isChosen","SavedTagButton","withCount","searchTypes","preloadBackwards","MiddleSearchResult","teactOrderKey","focused","mobile","withDropdown","adaptSearchBorders","canClose","resultsItemSelector","hasUpButton","hasDownButton","onStartBackspace","withBackIcon","onUpClick","onDownClick","searchTags","savedSearchTag","icons","getDayStartAt","counter","viewStyle","noForcedUpperCase","mobileNavigation","navigationButton","navigationDisabled","recent","favorite","effect","chatStickerSetId","effectStickers","effectEmojis","recentStickers","selectShouldLoopStickers","isForEffects","loadRecentStickers","addRecentSticker","removeRecentSticker","sendMessageAction","useSendMessageAction","effectSets","existingAddedSetIds","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleMouseMove","handleRemoveRecentSticker","CHAT_STICKER_SET_ID","isTouchScreen","shouldUseCurrentReactions","reactionsToSort","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","rowsCount","pickerMaxHeight","REACTION_SELECTOR_WIDTH","availableEffectById","storyPeerId","sendAsMessage","areSomeReactionsAllowed","areAllReactionsAllowed","areCustomAllowed","shouldUseFullPicker","closeReactionPicker","saveEffectInDraft","requestEffectInComposer","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","storedPosition","renderingPosition","isDense","deltaX","FULL_PICKER_SHIFT_DELTA","handleToggleCustomReaction","handleReactionContextMenu","handleStoryReactionSelect","customEmojiMessage","buildCustomEmojiHtml","isReaction","availableEffects","effectId","effectStickerId","chosenOrder","backdropExcludedSelector","StickerPicker","ReactionPickerLimited","BLUR_CANVAS_SIZE","attachment","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_PHOTO_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","filename","extension","getFileExtension","previewData","shouldSkipGrouping","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","MediaSpoiler","findInViewport","selectorOrElements","shouldContainBottom","isHorizontal","viewportY1","viewportY2","allElements","visibleIndexes","isFound","y2","setTooltipItemVisible","isFullyVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","shiftKey","isSelectionOutOfRange","onUp","onDown","onTab","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","member","selectedMentionIndex","prevChatMembers","renderedChatMembers","ATTACHMENT_MODAL_INPUT_ID","recentEmojis","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","keywords","customEmojiForEmoji","forEmoji","captionLimit","attachments","getHtml","editingMessage","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onCaptionUpdate","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","onEmojiSelect","svgRef","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isEditing","isInAlbum","groupedId","notEditingFile","getAttachmentMediaType","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","isInvertedMedia","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","setIsInvertedMedia","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","svg","baseVal","leftChars","leftCharsBeforeLimit","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllPhotos","areAllVideos","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","canInvertMedia","isBottomDividerShown","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","rx","AttachmentModalItem","uniqueId","MentionTooltip","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","canSchedule","onSendSchedule","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","question","setQuestion","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","handleSolutionChange","addNewOption","behavior","handleCreate","isNoCorrectOptionError","answers","correct","questionTrimmed","substring","optionsTrimmed","o","summary","multipleChoice","quiz","correctAnswers","solutionEntities","updateOption","newOptions","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","handleQuestionChange","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","noReplaceNewlines","native","IS_PACKAGED_ELECTRON","BASE_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","category","allEmojis","useOnIntersect","emojisPerRow","displayedEmoji","EmojiButton","ICONS_BY_CATEGORY","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","EmojiCategory","onUnsaveClick","hasVideoPreview","getVideoMediaHash","withThumb","videoHash","getVideoPreviewMediaHash","videoData","shouldRenderVideo","isVideoReady","handleUnsaveClick","handleContextDelete","preload","gifs","saved","canSendGifs","onGifSelect","loadSavedGifs","debounceMs","shouldUnsave","GifButton","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","GIFs","SYMBOL_MENU_TAB_ICONS","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","isMessageComposer","menuPositionOptions","setRecentEmojis","setRecentCustomEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","recentCustomEmojisRef","handleCustomEmojiSelect","canUpdateStickerSetsOrder","isFrom","EmojiPicker","GifPicker","SymbolMenuFooter","mobileClassName","onMouseEnter","withAvatar","freezeWhenClosed","quickReplies","quickReplyMessages","self","sendQuickReply","handleSendCommand","handleSendQuickReply","quickReplyId","quickRepliesWithDescription","reply","topMessageId","shortcut","handleKeyboardSelect","selectedCommandIndex","isEmpty","ChatCommand","botCommand","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onSendWhenOnline","onRemoveEffect","withEffects","hasCurrentEffect","effectReactions","isInStoryViewer","openEffectPicker","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","showItems","handleOpenMessageEffectsPicker","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","anchorPosition","selectedRange","setSelectedRange","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","EDITABLE_INPUT_ID","textFormat","restoreSelection","removeAllRanges","addRange","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollWidth","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","u","m","p","getKeyFromEvent","linkUrlConfirmClassName","autoComplete","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","CustomEmojiButton","thumbnailDataUrl","getWebDocumentHash","decoding","inlineResult","webThumbnail","BaseResult","_gif","isForGallery","thumbnailBlobUrl","STICKER_SIZE_INLINE_BOT_RESULT","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","GifResult","MediaResult","StickerResult","ArticleResult","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","loadFeaturedStickers","StickerSetResult","selectCurrentGifSearch","selectIsChatWithBot","canPostInChat","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","postStatistic","toggleMessageStatistics","StatisticsRecentPostMeta","toggleStoryStatistics","imgBlobUrl","withStorySolid","forceUnreadStorySolid","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","reactionsByEmotionGraph","storyInteractionsGraph","storyReactionsByEmotionGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","statistics","selectStatistics","dcId","statisticsDcId","messagesById","storiesById","selectPeerStories","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","isPercentage","ensureLovelyChart","zoomToken","create","zoomOutLabel","StatisticsOverview","recentPosts","StatisticsRecentMessage","StatisticsRecentStory","openChatByUsername","GRAPH_TITLES","viewsGraph","reactionsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","loadMessagePublicForwards","publicForwards","publicForwardsData","STATISTICS_PUBLIC_FORWARDS_LIMIT","StatisticsMessagePublicForward","currentStory","loadStoryStatistics","loadStoryPublicForwards","StatisticsStoryPublicForward","answer","voters","offsets","pollResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","ShowMoreButton","itemName","renderViewMoreButton","getMessagePoll","resultsByOption","buildCollectionByKey","PollAnswerResults","ICON_SIZE","createTopicPanel","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","shouldCleanup","noLoopLimit","editTopicPanel","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","ERROR_NAME_MISSING","management","setBotInfo","uploadContactProfilePhoto","startBotFatherConversation","isFieldTouched","markFieldTouched","unmarkProfileTouched","isAvatarTouched","markAvatarTouched","unmarkAvatarTouched","currentName","setName","ManagementProgress","handleNameChange","trimmedName","handleChangeEditIntro","handleChangeEditCommands","handleChangeSettings","isSuggestRef","handleSelectAvatar","isSuggest","CHANNEL_TITLE_EMPTY","canChangeInfo","canInvite","exportedInvites","updateChat","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isRevoked","adminsCount","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","joinRequests","onChatMemberSelect","toggleSignatures","areSignaturesEnabled","areSignaturesShown","areProfilesEnabled","areProfilesShown","canAddNewAdmins","canToggleSignatures","adminMembers","admins","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleToggleSignatures","handleToggleProfiles","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","inviteLink","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleSave","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","loadMoreMembers","usersId","availableMemberIds","isAdmin","canDeleteMembers","removedMembers","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","RemoveGroupUserModal","forDiscussionIds","linkedChat","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","isChannelsPremiumLimitReached","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","adminRights","isNewAdmin","selectedUserId","updateChatAdmin","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handleSavePermissions","handleDismissAdmin","memberStatus","handleCustomTitleChange","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","addAdmins","manageCall","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","canAddMembers","globalUserIds","noAdmins","toggleParticipantsHidden","setNewChatMembersDialogState","deletingUserId","setDeletingUserId","adminIds","usePeerStoriesPolling","shouldUseSearchResults","listedIds","ChatNewAdminRights","handleDeleteMembersModalClose","handleToggleParticipantsHidden","handleNewMemberDialogOpen","newChatMembersProgress","NewChatMembersProgress","memberId","DeleteMemberModal","updateChatDefaultBannedRights","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","exceptionMembers","getMemberExceptions","getLangKeyForBannedRightKey","translatedString","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","editExportedChatInvite","exportChatInvite","setIsRequestNeeded","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleSaveClick","formatFullDate","n","importers","requesters","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","handleCopyClicked","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","formatCountdown","getInviteIconClass","prepareContextActions","editInvite","Invite","STICKER_SIZE_INVITES","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","JoinRequest","STICKER_SIZE_JOIN_REQUESTS","MAX_UNIQUE_REACTIONS","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","localReactionsLimit","setLocalReactionsLimit","reactionsOptions","handleSaveReactions","availableActiveReactions","localAllowedReactions","enabledAllowedReactions","localReaction","enabledReaction","handleReactionsOptionChange","handleReactionChange","local","handleReactionsLimitChange","renderReactionsMaxCountValue","shouldShowReactionsLimit","isCenteredLayout","notPersonalPhoto","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","managementType","selectCurrentManagementType","ManageBot","ManageUser","ManageGroup","GroupRecentActions","ManageChannel","ManageChatPrivacyType","ManageDiscussion","ManageGroupPermissions","ManageChatRemovedUsers","ManageGroupUserPermissionsCreate","ManageGroupUserPermissions","ManageChatAdministrators","ManageGroupAdminRights","ManageGroupMembers","ManageInvites","ManageInvite","ManageReactions","ManageInviteInfo","ManageJoinRequests","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","invoice","prices","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","needAddress","hasShippingOptions","savedCredentials","isPaymentFormUrl","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","handleTipsClick","tips","handlePaymentMethodClick","step","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","shouldOmitFractions","invoiceInfo","renderCheckoutItem","customIcon","provider","langStringSplit","renderTosLink","tosCheckbox","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","noRedirect","onPaymentFormSubmit","onPasswordChange","clearPaymentError","cardName","onInputChange","useFocusAfterAnimation","animationDuration","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","CardInput","ExpiryInput","Select","hasArrow","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","savedInfo","invoiceContainer","nativeProvider","nativeParams","passwordMissing","confirmPaymentUrl","inputInvoice","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","providerName","isProviderError","isNameRequested","isShippingAddressRequested","isPhoneRequested","isEmailRequested","shouldSendPhoneToProvider","shouldSendEmailToProvider","smartGlocalToken","stripeId","passwordValidUntil","validUntil","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","setSmartGlocalCardInfo","paymentState","paymentDispatch","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","ConfirmPayment","setStep","nextStep","Checkout","field","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","shippingOption","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","sendForm","shippingOptionId","handlePaymentFormSubmit","credentials","validateRequest","requestInfo","getRequestInfo","sendCredentials","expiryMonth","expiryYear","zip","getCredentials","ConfirmPassword","modalHeader","isSubmitDisabled","getIsSubmitDisabled","isRecurring","cleanupOnlyKey","currentStep","SavedPaymentCredentials","PasswordConfirm","renderModalContent","renderError","optionId","receipt","totalAmount","credentialsTitle","fullAddress","sendInviteMessages","closeInviteViaLinkModal","missingUsers","setSelectedMemberIds","unselectableIds","selectableIds","requirePremiumIds","regularIds","isRequiringPremiumToMessage","invitableWithPremiumIds","isRequiringPremiumToInvite","isEveryPremiumBlocksPm","topListPeers","handleSendInviteLink","canSendInviteLink","inviteSectionText","premiumSectionText","hasPremiumSection","hasSelectableSection","lockedUnselectedSubtitle","closeOneTimeMediaModal","handlePlayVoice","closeBtnTitle","voice","OneTimeModal","RoundVideo","onStop","renderMedia","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","MonkeyClose","playSegment","MonkeyPeek","badgeIcon","badgeClassName","clickable","badge","modalProps","hasOnClickHandler","headerAvatarPeer","hasAbsoluteCloseButton","starsNeeded","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","renderingOptions","canExtend","maxOption","forceShowAll","currentStackedStarsCount","canExtendOptions","isExtended","starsCount","isWide","isOdd","isActiveOption","perUserStarCount","opt","perUserStars","wideOption","optionTop","stackedStars","stackedStar","optionBottom","moreOptions","subtitleKey","isAvatarSquare","peerColorId"],"sourceRoot":""}