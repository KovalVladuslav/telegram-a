{"version":3,"file":"3500.02bfb292bfcec3b4711e.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/components/common/pickers/PeerPicker.tsx","webpack://telegram-t/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://telegram-t/./src/components/common/pickers/PickerItem.tsx","webpack://telegram-t/./src/components/common/pickers/PickerSelectedItem.tsx","webpack://telegram-t/./src/global/helpers/peers.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useLang.ts","webpack://telegram-t/./src/hooks/usePrevious.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/components/common/pickers/PickerStyles.module.scss?c0e4"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { throttleWithTickEnd } from '../../util/schedulers';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n  isDisabled?: boolean;\n  ref?: React.RefObject<HTMLSpanElement>;\n};\n\nconst ANIMATION_TIME = 200;\nconst MAX_SIMULTANEOUS_ANIMATIONS = 10;\n\nlet scheduledAnimationsCounter = 0;\n\nconst resetCounterOnTickEnd = throttleWithTickEnd(() => {\n  scheduledAnimationsCounter = 0;\n});\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n  isDisabled,\n  ref,\n}) => {\n  const { isRtl } = useLang();\n\n  const prevText = usePreviousDeprecated(text);\n  const forceUpdate = useForceUpdate();\n\n  const shouldAnimate = scheduleAnimation(\n    !isDisabled && selectCanAnimateInterface(getGlobal()) && prevText !== undefined && prevText !== text,\n  );\n\n  const characters = useMemo(() => {\n    return shouldAnimate ? renderAnimatedCharacters(text, prevText) : text;\n  }, [shouldAnimate, prevText, text]);\n\n  useEffect(() => {\n    if (!shouldAnimate) return undefined;\n\n    const timeoutId = window.setTimeout(() => {\n      forceUpdate();\n    }, ANIMATION_TIME);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [shouldAnimate, text]);\n\n  return (\n    <span ref={ref} className={buildClassName(className, !isDisabled && styles.root)} dir={isRtl ? 'rtl' : undefined}>\n      {characters}\n    </span>\n  );\n};\n\nexport default memo(AnimatedCounter);\n\nfunction scheduleAnimation(condition: boolean) {\n  if (!condition || scheduledAnimationsCounter >= MAX_SIMULTANEOUS_ANIMATIONS) return false;\n\n  if (scheduledAnimationsCounter === 0) {\n    resetCounterOnTickEnd();\n  }\n\n  scheduledAnimationsCounter++;\n\n  return true;\n}\n\nfunction renderAnimatedCharacters(text: string, prevText?: string) {\n  const elements: React.ReactNode[] = [];\n  const textLength = text.length;\n  const prevTextLength = prevText?.length ?? 0;\n\n  for (let i = 0; i <= textLength; i++) {\n    const charIndex = textLength - i;\n    const prevTextCharIndex = prevTextLength - i;\n\n    if (prevText && prevTextCharIndex >= 0 && text[charIndex] !== prevText[prevTextCharIndex]) {\n      elements.unshift(\n        <div className={styles.characterContainer}>\n          <div className={styles.character}>{text[charIndex] ?? ''}</div>\n          <div className={styles.characterOld}>{prevText[prevTextCharIndex]}</div>\n          <div className={styles.characterNew}>{text[charIndex] ?? ''}</div>\n        </div>,\n      );\n    } else {\n      elements.unshift(<span>{text[charIndex] ?? ''}</span>);\n    }\n  }\n\n  return elements;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransitionDeprecated(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransitionDeprecated(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PickerItem from './PickerItem';\nimport PickerSelectedItem from './PickerSelectedItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CustomPeerType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CustomPeerType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CustomPeerType[];\n  onSelectedCategoriesChange?: (categories: CustomPeerType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  categories?: UniqueCustomPeer[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = ({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) return <div key={id}>No peer or category with ID {id}</div>;\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (withStatus && peer) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n      if (withPeerTypes && peer) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PickerSelectedItem\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import React, { type TeactNode } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {inputElement && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {avatarElement && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {subtitle && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","import type { TeactNode } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../Avatar';\nimport Icon from '../icons/Icon';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps<T = undefined> = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  peerId?: string;\n  // eslint-disable-next-line react/no-unused-prop-types\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  className?: string;\n  fluid?: boolean;\n  withPeerColors?: boolean;\n  clickArg: T;\n  onClick: (arg: T) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PickerSelectedItem = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  customPeer,\n  className,\n  fluid,\n  isSavedMessages,\n  withPeerColors,\n  onClick,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <Icon name={icon} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (customPeer || user || chat) {\n    iconElement = (\n      <Avatar\n        peer={customPeer || user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = (customPeer && (customPeer.title || lang(customPeer.titleKey!)))\n      || (!chat || (user && !isSavedMessages)\n        ? getUserFirstOrLastName(user)\n        : getChatTitle(lang, chat, isSavedMessages));\n\n    titleText = title || (name ? renderText(name) : undefined);\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    (chat?.isForum || customPeer?.isAvatarSquare) && 'square-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n    fluid && 'fluid',\n    withPeerColors && getPeerColorClass(customPeer || chat || user),\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem)) as typeof PickerSelectedItem;\n","import type { ApiChat, ApiPeer, ApiUser } from '../../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../config';\n\nexport function isApiPeerChat(peer: ApiPeer): peer is ApiChat {\n  return 'title' in peer;\n}\n\nexport function isApiPeerUser(peer: ApiPeer): peer is ApiUser {\n  return !isApiPeerChat(peer);\n}\n\nexport function getPeerTypeKey(peer: ApiPeer) {\n  if (isApiPeerChat(peer)) {\n    if (peer.type === 'chatTypeBasicGroup' || peer.type === 'chatTypeSuperGroup') {\n      return 'ChatList.PeerTypeGroup';\n    }\n\n    if (peer.type === 'chatTypeChannel') {\n      return 'ChatList.PeerTypeChannel';\n    }\n\n    if (peer.type === 'chatTypePrivate') {\n      return 'ChatList.PeerTypeNonContact';\n    }\n\n    return undefined;\n  }\n\n  if (peer.id === SERVICE_NOTIFICATIONS_USER_ID) {\n    return 'ServiceNotifications';\n  }\n\n  if (peer.isSupport) {\n    return 'SupportStatus';\n  }\n\n  if (peer.type && peer.type === 'userTypeBot') {\n    return 'ChatList.PeerTypeBot';\n  }\n\n  if (peer.isContact) {\n    return 'ChatList.PeerTypeContact';\n  }\n\n  return 'ChatList.PeerTypeNonContactUser';\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import {\n  addLocalizationCallback,\n  getTranslationFn,\n  type LangFn,\n} from '../util/localization';\nimport useEffectOnce from './useEffectOnce';\nimport useForceUpdate from './useForceUpdate';\n\nconst useLang = (): LangFn => {\n  const forceUpdate = useForceUpdate();\n\n  useEffectOnce(() => {\n    return addLocalizationCallback(forceUpdate);\n  });\n\n  return getTranslationFn();\n};\n\nexport default useLang;\n","import { useRef } from '../lib/teact/teact';\n\n// This is not render-dependent and will never allow previous to match current\nexport default function usePrevious<T extends any>(current: T) {\n  const prevRef = useRef<T>();\n  const lastRef = useRef<T>();\n\n  if (lastRef.current !== current) {\n    prevRef.current = lastRef.current;\n  }\n\n  lastRef.current = current;\n\n  return prevRef.current;\n}\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};"],"names":["scheduledAnimationsCounter","resetCounterOnTickEnd","throttleWithTickEnd","memo","_ref","text","className","isDisabled","ref","isRtl","useLang","prevText","usePreviousDeprecated","forceUpdate","useForceUpdate","shouldAnimate","selectCanAnimateInterface","getGlobal","undefined","characters","useMemo","elements","textLength","length","prevTextLength","i","charIndex","prevTextCharIndex","unshift","React","createElement","renderAnimatedCharacters","useEffect","timeoutId","window","setTimeout","clearTimeout","buildClassName","dir","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","id","previewBlobUrl","useMedia","getStickerMediaHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","useFlag","Boolean","thumbClassNames","useMediaTransitionDeprecated","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","isVisible","withAnimation","width","height","useRef","shouldRender","transitionClassNames","useShowTransitionDeprecated","canvasRef","useCanvasBlur","handleClick","e","current","el","rect","currentTarget","getBoundingClientRect","x","clientX","left","y","clientY","top","shiftX","shiftY","requestMutation","setAttribute","onClick","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","arguments","priorityIds","currentUserId","global","orderBy","Infinity","chat","selectChat","priority","lastMessage","selectChatLastMessage","date","isVerified","includes","Date","now","indexOf","ITEM_CLASS_NAME","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","itemClassName","isLoading","noScrollRestore","isSearchable","lockedUnselectedSubtitle","forceShowSelf","isViewOnly","itemInputType","withStatus","withPeerTypes","withDefaultPadding","onFilterChange","onDisabledClick","onLoadMore","optionalProps","lang","useOldLang","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","MEMO_EMPTY_ARRAY","selectedIds","selectedId","inputRef","shouldMinimize","requestMeasure","focus","lockedSelectedIdsSet","lockedUnselectedIdsSet","unlockedSelectedIds","filter","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","forEach","push","concat","handleItemClick","categoryType","type","newSelectedCategories","slice","splice","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","value","viewportIds","getMore","useInfiniteScroll","renderItem","useCallback","isCategory","category","peer","selectPeer","peerOrCategory","DEBUG","key","isSelf","isApiPeerChat","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","subtitle","subtitleClassName","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","onlineStatus","langKey","getPeerTypeKey","getSubtitle","PickerItem","title","FullNameTitle","avatarElement","Avatar","isSavedMessages","disabled","inactive","ripple","inputElement","Icon","name","Radio","checked","onlyInput","Checkbox","inputPosition","beforeChildren","pickerCategoryTitle","map","container","header","PickerSelectedItem","customPeer","clickArg","canClose","peerId","isMinimized","InputText","onChange","placeholder","InfiniteScroll","pickerList","padded","items","itemSelector","Loading","noResults","titleClassName","isClickable","role","tabIndex","RippleEffect","IS_IOS","withGlobal","_ref2","user","selectUser","icon","fluid","withPeerColors","iconElement","titleText","titleKey","getUserFirstOrLastName","getChatTitle","renderText","fullClassName","isForum","isAvatarSquare","getPeerColorClass","SERVICE_NOTIFICATIONS_USER_ID","isSupport","isContact","RADIUS","ITERATIONS","withRaf","radius","preferredWidth","preferredHeight","isStarted","useSyncEffect","canvas","img","Image","processBlur","ctx","getContext","alpha","IS_CANVAS_FILTER_SUPPORTED","drawImage","fastBlur","onload","containerRef","shouldPreventDefault","handleScroll","deltaX","scrollLeft","deltaY","preventDefault","addEventListener","passive","removeEventListener","useEffectOnce","addLocalizationCallback","getTranslationFn","usePrevious","prevRef","lastRef","DEFAULT_DURATION","stopById","Map","animateHorizontalScroll","duration","getAttribute","offsetWidth","containerWidth","scrollWidth","dataset","scrollId","path","remainingPath","Math","max","min","Promise","resolve","get","target","isStopped","random","toString","set","scrollSnapType","startAt","animate","t","currentPath","transition","round","delete"],"sourceRoot":""}